{"version":3,"sources":["themes/netalo/chat/index.js","themes/netalo/callhistory/index.js","themes/netalo/contact/index.js","themes/netalo/config/index.js","themes/netalo/login/index.js","themes/default/component/index.js","themes/netalo/callhistory/call/index.js","themes/netalo/chat/footer/index.js","themes/netalo/chat/groups/index.js","themes/netalo/chat/header/index.js","themes/netalo/chat/messages/index.js","redux.js","classes/request.js","themes/default/product/index.js","themes/netalo/chat/message_item/index.js","themes/netalo/chat/pin_modal/index.jsx","themes/netalo/home/index.js","config/index.js","themes/netalo/home/home.jsx","global.js","index.js","components/admin/index.js","moduleroutes/index.js","themes/default/about/about.js","themes/default/home/home.js","themes/default/notFound.js","themes/default/product/all.js","themes/default/product/single.js","themes/default/redirectWithStatus.js","themes/default/styles/style.js","themes/default/themeroutes.js","themes/galo/footer/footer.js","themes/galo/header/header.js","themes/galo/styles/style.js","themes/netalo/notFound.js","themes/netalo/themeroutes.js","app.js","main.js","themes/netalo/chat/index.jsx","themes/netalo/callhistory/index.jsx","themes/netalo/contact/index.jsx","themes/netalo/config/index.jsx","themes/netalo/login/index.jsx","components/shares/rxLoading.js","themes/default/component/index.jsx","themes/netalo/callhistory/call/index.jsx","themes/netalo/chat/footer/index.jsx","themes/netalo/chat/groups/index.jsx","themes/netalo/chat/header/index.jsx","themes/netalo/chat/messages/index.jsx","classes/ulti.js","config/config.development.js","config/config.production.js","config/config.staging.js","classes/lang.js","classes/socket.js","components/shares/rxUtils.js","components/shares/rxCall.js","components/shares/rxCall.jsx","classes/chat.js","classes/recorder.js","components/Helpers/RxCountStart.js","components/Helpers/RxCurrency.js","components/Helpers/RxSlug.js","components/authenticate/login.js","components/authenticate/register.js","components/shares/RxManageGroup.js","components/shares/block_user/block_user.js","components/shares/create_group_chat/create_group_chat.js","components/shares/rxAccountInfo.js","components/shares/rxAudioRecord.js","components/shares/rxComponent.js","components/shares/rxCrudEvent.js","components/shares/rxDragAndDrop.js","components/shares/rxDragdroptree.js","components/shares/rxGroupList.js","components/shares/rxImageGallery.js","components/shares/rxInfoUser.js","components/shares/rxModalEdit.js","components/shares/rxModalMouseRightChat.js","components/shares/rxPopup.js","components/shares/rxSearchBox.js","components/shares/rxSelectCustom.js","components/shares/rxSelectEmoji.js","components/shares/rxSelectIcons.js","components/shares/rxSelectbox.js","components/shares/rxTagName.js","components/shares/rxTemplates.js","components/shares/rxToggle.js","components/shares/rxUpload.js","components/shares/rxUploadFile.js","routes.js","config sync /^/.//config/..*/.js$","../src sync /^/.//.*$","themes sync /^/.//.*$"],"names":["RxComponent","global","rootRequire","rxaget","changeTheme","changeTheme_ThemeColor","loadIconUrl","themeData","theme_themeColorData","rxgetLocal","rxsetLocal","stickerData","rxio","netalogoutAction","setComp","saveNotificationStatus","Component_","props","context","Jsx","onClickAddFriend","modalAddFriend","state","setState","contacts","listCallLog","flagCalling","objsCalling","reloadPage","groups","group_id","userid","token","color","rxu","json","themeBackGround","notificationStatusValueTmp","Notification","permission","this","JSON","stringify","nightTheme","defaultTheme","blueColor","orangeColor","rxSticker","version","Number","window","ipcRenderer","on","event","args","parse","e","getWaitExpired","connected","disconnect","menuDiv","document","getElementById","menuDiv2","menuDivGroup","target","style","display","mess_selected","mess_id","renderComponent","mapDispatchToProps","ComponentWrapped","connect","ownProps","themeValue","netaauth","rxgroup","rxChangeSlug","rxnavToggle","rxnavClose","netaCallHistoryUpdate","clickCall","dHeaders","Accept","checkNameUser","fmtMSS","s","disableDrop","preventDefault","rootContext","staticContext","callType","flagTurnOffSoundCall","callHistorySearch","callHistory","groupinfo","usersinfo","flagcall","flagindex","flaggroup","callRightMouse","peerConnection","localStream","call_id","addEventListener","handleClickOutside","fetchData","removeEventListener","ele","index","occupants_uins","callee_uins","media_type","typeCall","toString","type","desc","callObj","setLocalDescription","sendIceSdp","sender_uin","caller_uin","receiver_uin","filter","sdp","localDescription","value","startsWith","replace","charAt","_usersinfo","arrCallHistory","o","callId","id","uname","translate","uname_info","indexOf","phone","timestamp","a","Date","month","getMonth","date","getDate","hour","getHours","min","getMinutes","isClass","result","mess","get","stopped_at","started_at","accepted_at","headers","fetch","config","base_api_neta","method","then","response","text","arrGroupCallId","match","constructor","Array","length","strRegexCall","newStrCallReplace","calls","error","console","log","group","oncontextmenu","top","clientY","left","clientX","buttons","className","callClick","params","body","res","er","themeBackgroudValue","langValue","auth","favorite","netaCallHistory","user","netaRegisteredUsersUpdate","contactAdd","chooseGroupAction","fetchContact","addContact","inputSearchContact","usersStatus","flagEdit","contactRightMouse","contactInfo","netaContact","onSubmitContact","bind","compareContact","registeredUsers","sort","groupsSearchBoxClickStatus","searchValue","netaUsersStatus","nextProps","clickStatus","b","userA","userB","addContactValue","typeForce","arrContacts","udid","created","deleted","updated","that","newContacts","alert","displayAddContact","inputName","arrGroupsChat","searchPhone","jsonUser","findIndex","Id","push","vPhone","prefixes","iChar","jChar","substring","phoneRegx","api_get_phone","get_phone","Connection","contact","isSearchBoxAction","createNewChat","partner_id","userOwner","name","createNewGroup","data","e1","r","items","paramsContact","callback","contactClick","full_name","destroy","apiRemoveContact","Code","result1","netaRegisteredUsers","themeColorData","dataQ","netaUpdateProfileAction","netaloginAction","saveLanguage","savePage","saveTheme","saveThemeBackgroud","changeThemeColor","zget","displayEditScreen","page","netaauth_user_name","notificationStatusValue","status_clickTitle","status_click","quest_num","usernameValue","imgkey","unblockList","uploadInputImage","users","_user","userinfo","updateProfile","uploadFileImages","getBlockList","onClickUnBlockContact","netaauth_profile_url","profile_url","arrQuestion","Object","keys","question","convertOmessUser","init_connected","login","msg","socket","emit","list","blockedList","map","i","uin","getUpdateGroup","unblocked_all","blocked_all","splice","key","blockUser","uni","fileList","file","parts","split","ext","toLowerCase","fileSize","size","_URL","URL","webkitURL","img","Image","objectUrl","createObjectURL","dataParams","content_type","Math","floor","now","public","header","requestOptions","redirect","create_blob","blod_object","form_data","dataUpload","FormData","append","resBlob","strresult","optComplete","uid","get_blobs","status","onload","revokeObjectURL","src","errorPut","update_profile","jsonb","omessId","username","nextprops","zmenu_logoutConfigpage","checked","requestPermission","questNum","arrName","toUpperCase","pageValue","keyClickFunction","tokenLogin","flagStep","flagLoginPhone","inputPhone","inputPhoneOTP","errMess","countryCode","listCountryCode","fetchSession","checkAuth","jsonData","list_country_code","fetchCountryCode","keyCode","onClickLoginViaOTP","onClickLoginViaOTPConfirm","phoneNumber","prefixesFlag","isNaN","setTimeout","phoneNumberOTP","Data","helpGetUserinfoAndLogin","callbackFailed","user_id","application_id","auth_key","nonce","signature","apiget","onClickAnswerCall","stopCall","secondToTime","formatBytes","subString","netaMessAdd","updateRecentContactGroups","netaMediaOneAdd","checkBlock","checkIsOwner","pasteEventFunction","paste","clipboardData","getData","chatDiv","innerHTML","setCursor","currentTarget","textContent","pasteAsPlainText","files","contentTarget","retrieveImageFromClipboardAsBase64","imageObj","imageTmp","execCommand","onKeyDown","tagNameDisplay","tagNameLast","handleContentEditable","displayTagflag","isEdit","val","arrid","cont","exec","valuetmp","removeTags","strvalue","me_typing","sendGroupEvent","arrGroups","el","firstChild","caretOffset","getCaret","lastIndexOf","trim","groupsTagName","displayTagNameBox","groupsTemp","range","createRange","sel","getSelection","childNodes","forEach","n","regex","RegExp","test","setStart","lastIndex","collapse","removeAllRanges","addRange","tagName_SelectUser","tempTag","slice","join","focus","disableNewlines","which","base64","blockEnter","uploadThumnail","uploadFile","tagNameSelect","resetTagname","returnValue","emptyMess","type_option","converEmojiTag","msg_message","sender_name","message","message_id","attachments","created_at","group_type","sub_attachments_tmp","s_attachments","audio","video","messType","attachments_tmp","messattach","e2","handleMessage","stickerFolderName","arrTabsChar","typing","sender_typing","tagNameSelectNum","tagNameSelect_isFirstTime","canceRecoreStatus","isBlocked","mouseClickFunction","tabmore","uids","onClickBlockContact","loadDidMount","objState","closeReplyMessage","groupId","getGroupTagName","chatDivFowardd","select","e5","groupObj","unblockUser","blocked_uins","displayAskBlock","str","getWaitConnect","getWaitEvent","handleEvent","getWaitMessage","getWaitMessDel","loadHandleSocket","messReply","useridkey","String","num","myDiv","scrollTop","scrollHeight","srcElement","resetSelectedMess","popupGroup","chooseGroup","option","deleteMessage","copyTextToClipboard","textArea","createElement","position","width","height","padding","border","outline","boxShadow","background","appendChild","err","removeChild","sender","isClick","arrImg","arrUsers","objUser","images","objMedia","msg_create_at","url","objmsg","blobs","deleted_uins","call_name","icon_call_name","iconcall","stylecall","time","arrurlimgs","strurlimgs","indeximg","get_static","fetchImage","eleaudio","eleLoadAudio","load","elevideo","eleLoadVideo","userins","added_uins","parseMessage","message_reply_content_class","file_reply_content_class","convertTagName","sender_name_mess","attachments_forward","sticker","namesticker","arrsticker","imgsticker","resMess","uniemoji","Set","emoji","regEmoji","userstag","useridtmp","pasteEvent","imageFormat","undefined","blob","getAsFile","mycanvas","ctx","getContext","dataURLtoFile","dataurl","filename","arr","mime","bstr","atob","u8arr","Uint8Array","charCodeAt","File","drawImage","toDataURL","arrimg","Buffer","URLObj","element","doc","ownerDocument","win","defaultView","parentWindow","rangeCount","getRangeAt","preCaretRange","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selection","textRange","preCaretTextRange","createTextRange","moveToElementText","setEndPoint","objEmoji","stremoji","replaceEmoji","image","objSize","pos","sender_avatar","sendSticker","checkImage","redirected","netaBlobsUpdate","reader","FileReader","readAsDataURL","onloadend","button","navigator","clipboard","readText","innerText","FooterChatWrapped","netaGroups","sortArrObj","netaGroupsUpdate","netaGroupsUpdateArr","userAdd","userAddArr","changeStatusTabmore","netaGroupsRemove","changeStatusLoadMess","netaAuthSettingUpdate","netaGroupsPinUpdate","clearRxContact","netaGroupsUpdateUnpin","clickPopup","netaMessGet","netaUserSetGroupid","netaMessRemove","checkNameGroup","groupsDisplay","groups_origin","pg_group","scroll_group","statusInput","groupsLocalStore","numGroupTeamChat","flagCreateGroup","isShowPopupCreateGroup","isShowPopup_ManageGroup","displayGroupList","groupsSearchArr","searchNchatValue","statusSeachNchatValue","groupsNChat","groupsNChatCreate","groupsChat","arrGroupsChatFull","groupsNChatOrigin","groupsNChatChecked","xPercent","slickTrackLength","clickCreateGroupBtn","themeColor","admin_uins_index","displayLeaveGroupScreen","displaySelectManagerScreen","lg_chooseLeader_groupsTemp","groupChooseItem_selected","notificationStatus","groupsPin","flagRightMouse","groupRightMouse","checkSearchValue_IsNumeber","leaderMemberChecked","chooseContactAction","groupneta","idgroup","ogroup","avatar_url","arrUins","arrGroupsPin","checkGroupsPinned_uins","pinned_uins","contactsUsers","timenow","checkImageObj","keyImg","fetchGroups","reSortGroup","netaAuthSetting","localStorage","getItem","disableNoti","fetchGroupDetail","scrollGroupsChat","loadGroupsTemp","getWaitGroup","groupNoti","fetchRegisteredUsers","fetchCacheImg","deepLinkUrl","arrRegexStr","tokenStr","joinLink","clearInterval","interval","groupsTmp","arrGroupsTmp","keygroup","last_message","getTime","unread_cnt","group_fullname","ids","groupid","groupidtmp","groupstmp","container","offsetHeight","groupsArr","flag","getUpdateMessage","send","api_registered_users","registered_users","netaUserReg","max_size","arrUser","property","checkBreak","tempBody","offset","limit","compact","hasOwnProperty","itemreg","objreg","email","name_contact","Promise","getElementsByClassName","valueAttr","getAttribute","get_avatar","flagShowDropDown","resolve","reject","api_group_detail","get_groups","objUsers","removed_users","Group","old_blocked_uins","objCount","psize","excefletch","pageIndex","sort_by","pindex","newGroup","group_name","findgroup","pa","all","values","u","reason","isStop","eg","isDelete","init","timeCreateImg","last_message_id_tmp","netaGroupsLastMess","last_message_id","checkReaded","findGroup","find","objGroup","g","checkchange","count_unread","messages","cntNoti","objMess","arrPromise","arrMessTmp","amountMessNoti","omess","checkReadedOne","loadMessTmp","getNetaMessChecked","menuDivMessage","groupObjMemberIdArr","funcChooseLeader","deleteGroup","leaveGroup","groupObjTmp","leaderChecked","admin_uins","addAdmin","closeBtnClick","doneBtnClick","paramsCreateMess","mediaType","createMessage","dataMess","groupObjNew","msgUpGroup","groupsStore","deleteConversation","checkDisableNoti","group_id_selected","checkedAllReaded","onChangeNotiGroup","unpinGroup","pinGroup","obj","cdn_endpoint","arruserid","countMemberOnl","online_status","chooseLeader_groupsTemp","GroupsWrapped","netaGroupsPin","netaBlobs","updateUsersOnline","objsGroupTmp","showChatCall","iceServers","urls","credential","is","groupTemp","isChange","group_id_change","nextprop","new_group","from","stickerDataObj","timeConverter","timeToDate","rxconfig","isElectron","timesUnixToDate","convertSecondUnix","updateUserStatus","netaMessPin","netaUserUpdate","netaGroupsUpdateLastMess","netaLinkAdd","userClickUpdate","parseMessageDesc","ClickInfoUser","userOwnerid","userClick_group","vmChat","infoUserScreen","userInfo","avatarClick_user","currentSender_uin","tagIsClick","handleDragIn","stopPropagation","displayDragAndDrop","arrTabsDisplay","pinedMess","groupfw","scroll_mess","scrollChatBoxStatus","id_userclick","groupid_forward_old","tabmoreNextprop","seenMess","lastSeenMessId","lastSeenMessObj","screenUserInfo","avatarClick_omess","pathImg","currentAvatarUser","currentNameUser","displayScrollDownBtn","isForwardAudio","tagnameClick_status","arrData","tabActive","displaymodalpin","dropRef_Mess","React","createRef","tmp_stickerFolderName","dataSticker","pathimg","groupid_forward","pg_mess","countNoti","loadRenderer","indexImageForward","strImgForward","timer","mess_reply","pin_mess_id","checkLink","blockDownload","changeMessage","scrollChatBox","playAudio","downloadFile","openExternalLink","showGallery","getGallery","reloadStateWhenRepMess","unPin","onClickInfoUser","onClickNameUser","current","stickerDataTmp","rxlastSeenMessId","seen_uins_list","seen_list","objSticker","getOwnPropertyNames","netaLastSeenMessObj","flagGroupId","seen_uins","lastSeenMessIdTmp","findSeen_uins","updatelastSeenMessObj","getWaitLiveLocation","groupObjSelected","owner_uin","added_admin_all","admin_uinsArr","admin_uin","pull_all","memberLeaveGroup","curIndex","push_all","memberArrPush","pinned_message","pushToObjMess","unpinned_message_all","getPinGroup","getUnpinGroup","objlink","userAvataClick","closeGallery","audio_id","iconAudioDiv","idDivAudio","audioDiv","play","ontimeupdate","processAudioDiv","currentTime","duration","pause","strimages","checkgallery","galleryImages","galleryPosition","file_id","file_name","resp","href","download","click","link","open","chatListDiv","screen","loadMessages","newOmess","arrImgs","arrAttach","messCopy","displayShareScreen","pinMessage","datetime","delete_all","unpin_all","unpinmess","pullFromObjMess","content","is_encrypted","mentioned_all","mentioned_uins","checkCode","some","sortField","arrMess","datestr","pinned_at","ownerSend","userSend","scroll","cond","messid","lastmess","checked_ava","stateObj","handleNoti","netalo_noti","sessionStorage","objNoti","current_group_id","sender_ava","icon","onclick","callBackRedirectChat","setItem","groupnew","count","theme","imgHeight","loading","imgHeightTmp","rpId","videoControls","videoObj","videoHeight","removed_uins","rmMem","pin_message","updated_group_avatar","updated_group_name","arrUserNameAdd","unameNew","indexPath","stickerStr","checkSticker","fileNameExt","location","image_url","linkMap","flagTime","ended_at","strTime","percentTime","parseFloat","toFixed","degCircle","rightTime","clipStr","leftTime","stylecallgroup","messagetmp","objReview","objLink","title","strmessagetmp","strtitle","strdesc","eurl","useridtmp_group","getGroupByUserId","partnerIdTmp","oldheight","objDate","imess","newomess","unshift","netaMess","netaPinMess","objMessTmp","keyCreate","createdAt","dateTmp","objMessPin","getObjMess","messArrProps","chatDivTmp","messSelectedType","exclude","audioAttachments","audioAttachmentsTmp","replaceAll","forwardAudio","_id","netaMedia","videos","userId","MessagesWrapped","netaLink","loadmess","initialState","activeComponent","rxSearch","viewed","products","groupMess","netaCalling","netaCall","type_call","payload","recentSearchGroups","recentContactGroups","netaPopup","type_popup","userClickInfo","initialStateLate","comp","activateGeod","geod","closeGeod","loginAction","logoutAction","netaAuthSettingSoundUpdate","netaAddRegisteredUser","updateOnly","updateRecentSearchGroups","createRecentContactGroups","data_id","netaBlobsUpdateArr","netaMediaAdd","netaMessClear","netaMessPinClear","netaCallingStart","netaCallingStop","rxsearchChange","rxsearchClear","viewedAdd","product","userSub","userDelete","userClear","typecall","closePopup","typepopup","addNewMessAction","action","newState","checkChange","includes","rxusers","groupsNeta","newGroupOne","rxgroupsneta","calling","change","pinned_uinsArr","st_full","st_col","st_type","pg_page","pg_size","price","max","getMessState","arrTime","shift","messages_tmp","messtime","arrTimeMess","getMess","img_landscape","reset","timeSearch","timeContact","lang","user_status","reducers","combineReducers","rootReducer","configureStore","store","createStore","subscribe","dispatch","storeReset","callbacks","cookie","callbackIndex","success","apicall","apipost","rxput","rxdelete","rxoption","rxsetCookie","cname","cvalue","minutes","d","setTime","expires","toUTCString","rxgetCookie","pop","cdefault","rxJson","tempReturn","variable","defaultVal","resultVal","isArray","tempResult","Product","route","renderRoutes","routes","idToColor","stringToColour","checkAvatarSender","checkName","MessageItem","currentMsg","urllinkId","nextState","firstMessageIndex","isShowUserName5Minute","onClick","dangerouslySetInnerHTML","__html","strMessage","alt","Component","isclient","require","useState","modalPin","setModalPin","setPinedMess","isSort","setIsSort","closeModalpin","useEffect","temp","pinedMessPos","odate","item","SortableItem","SortableElement","cursor","data-id","onError","onerror","right","bottom","SortableList","SortableContainer","disabled","lastPin","paddingRight","onSortEnd","oldIndex","newIndex","arrayMove","helperClass","_mounted","isAuthenticated","activeNavs","object","env","process","loadedModule","module","exports","vm","Parser","defined","secret","currentTheme","$","jQuery","t","rootbase","__dirname","nodebase","rootRequiretheme","__STATIC_CONTEXT__","JSONToCSVConvertor","JSONData","ReportTitle","ShowLabel","CSV","row","fileName","uri","escape","scrolltop","animate","scrollfire","dispatchEvent","CustomEvent","global_init","imgError","visibility","attr","parent","addClass","prev","uniqueCntr","fn","scrolled","waitTime","tag","self","clearTimeout","removeData","call","onResizeWindow","css","resize","ChatNet","sendContacts","render","Admin","default","noteComponent","cateComponent","productcateComponent","productComponent","reviewComponent","orderComponent","dashboardComponent","userComponent","roleComponent","permissionComponent","loginComponent","registerComponent","adminRoutes","path","component","exact","concat","Modulroutes","rxgenrbacRoutes","loginRoutes","registerRoutes","About","Status","code","children","NotFound","ProductSingle","RedirectWithStatus","to","Home","Payment","ProductAll","Themeroutes","loadData","Footer","Header_","Header","Chat","App","flagAuth","prevProps","prevState","tokenCurren","tokenPrev","AppContainer","RxCall","RxPopup","GroupsComponent","MessagesComponent","HeaderChatComponent","renderBody","checkClickOutside","callBackRedirectParent","renderCallHistory","lastEle","removeCallHistory","sname","onClickStartCallRender","onContextMenu","onRightClickGroup","helpCallType","helpCallName","helpTimeText","maxLength","placeholder","onChange","onChangeSearch","onDrop","renderFoot","hash","colour","substr","RxModalEdit","RxSearchBox","renderContactList","contactTitle","removeContact","editContact","eleContactTitle","chooseContact","groupsSearchBoxClick","searchBoxvalue","getSearchBoxvalue","pageActive","onClickAddContact","searchBox_chooseGroup","onClickModalEdit","checkNameContact","appName","appSupportUrl","editBtnClick","displayListBlock","choose_cdtb","choose_cdcd","choose_cdnn","choose_chtg","choose_dksd","onClickLogout","onChooseContactUnblock","cancelBtnClick","ref","multiple","accept","usePushNotifications","themeSelect","defaultChecked","submitThemeColor","changeLang","selected","chtg_clickTitle","answer","logo","SelectCustom","renderHead","0","defaultValue","changeCountryCode","autoComplete","updateInput","tabIndex","1","xmlns","viewBox","preserveAspectRatio","fill","Loading","contactlist","renderZCall","autoPlay","muted","onClickStopCall","controls","hidden","loop","RxSelectIcons","RxUploadFile","RxAudioRecord","RxTagName","chooseOptionFooter","handleDragOut","clickRecord","addEmoji","onMouseDown","onClickMouseRight","closeImageFooterLoader","html","data-placeholder","onKeyPress","onPaste","sendLike","autoConvertTime","RxModalMouseRightChat","RxManageGroup","linkava","createNewChatGroup","onScroll","checkGroupSeen","onClickShowPopup_ManageGroup","groupChooseItem","leaveGroupBtnClick","groupManager","RxAccountInfo","checkAvatarGroup","loadImgStatic","last_seen_at","uniqArray","onClickStartCall","onClickTabMore","FooterChatComponent","RxImageGallery","RxGroupsList","RxInfoUser","RxDragAndDrop","PinComponent","isShowAvatar5Minute","previousMsg","abs","nextMsg","checkTypeDelMess","chooseOption","checkPinMess","scrollDownChatList","fallback","closeShowGallery","closePopupGroup","chooseGroupForward","closePopupInfoUser","ownerInfo","versions","electron","userAgent","icon_close_png","url_icon_close_png","setProperty","themeChoose","theme_color_text","theme_color_text_1","theme_color_background","theme_color_background_sticker","theme_color_background_sticker_active","theme_color_background_icon_sticker_active","theme_color_background_doc","theme_color_text_light","theme_border_color","theme_group_border_color","theme_color_background_input","theme_color_background_search_input","theme_placeholder_color","galo","theme_color","theme_background_forward_color","theme_icon_color","theme_doc_icon_color","login_button_color","login_logo_color","theme_filter_color","theme_color_background_active_tagname","theme_color_background_hover_tagname","theme_color_background_active","theme_color_background_hover","dayofweek","getDay","year","getFullYear","sec","getSeconds","timestamp1","timestamp2","datenow","second","sec_num","parseInt","hours","seconds","padstr","z","secondsToTime","secs","divisor_for_minutes","divisor_for_seconds","ceil","x","isNotNull","rxChangeSlugSearch","bytes","decimals","k","dm","sizes","pow","array","navClass","showObj","activeClass","showPermission","showClass","hideClass","pathname","rxsecret","web_port","base_api","profile_api","api_home","api_site_product","api_site_productcate","api_site_order_add","api_note","api_cate","api_review","api_order","api_productcate","api_product","api_authorize","api_user","api_user_edit","api_user_delete","api_user_restore","api_role","api_role_edit","api_role_delete","api_role_restore","api_role_all","api_permission","api_permission_edit","api_permission_delete","api_permission_restore","api_permission_all","api_permission_genpermission","address_book","get_media_chat","socket_api","language","socketURL","io","transports","query","checkConnected","addHandlers","getUser_status","blocked_uin","createLink","revokeLink","listGroupLink","senderID","groupID","createCall","answerCall","callee_uin","updateMessage","mgs","sendCallAvailable","sender_uid","sendCallAvailableAnswer","sendCallConnectedThisDevice","updateGroup","webrtcSdp","sendIceCandidate","sendCallEvent","eventCall","checkArray","objkey","arrkeys","netaauthUser","extFilename","mediaConstraints","ringtone","flagStartCall","isStarted","flagMic","flagCamera","h","m","remoteStream","rtcPeerConnection","timeoutCounter","secondsCounter","isRoomCreator","setRemoteStream","grouptmp","receiverUin","data1","localVideoComponent","remoteVideoComponent","setLocalStream","RTCPeerConnection","addLocalTracks","ontrack","onicecandidate","setRemoteDescription","RTCSessionDescription","createAnswer","stopStream","createOffer","startTimer","candidate","RTCIceCandidate","sdpMid","sdp_mid","sdpMLineIndex","sdp_mline_index","addIceCandidate","remoteUser","startTimeoutCounter","getTracks","track","stop","close","stopTimeoutCounter","paramsupdate","dataMsg1","dataMsg2","setInterval","countUp","permissions","permissionObj","mediaDevices","getUserMedia","stream","srcObject","addTrack","sessionDescription","streams","getAudioTracks","enabled","remote_uin","getAvatar","changeFlagMic","changeFlagCamera","acceptCall","address_book_link","api_address_book","ocontact","netauser","objContact","oldCountMemberOnl","oldUserStatus","message_status","usertmp","partnerUin","groupname","fullname","getGroupById","checkAvatarSenderTagName","blobURL","Blob","sampleRate","recLength","recBuffersL","recBuffersR","mergeBuffers","recBuffers","Float32Array","set","writeString","view","string","setUint8","encodeWAV","samples","mono","buffer","ArrayBuffer","DataView","setUint32","setUint16","output","input","setInt16","floatTo16BitPCM","onmessage","command","inputBuffer","bufferL","bufferR","dataview","inputL","inputR","inputIndex","interleave","audioBlob","postMessage","exportWAV","exportMonoWAV","buffers","getBuffers","Recorder","source","cfg","bufferLen","createScriptProcessor","node","createJavaScriptNode","worker","Worker","currCallback","recording","onaudioprocess","getChannelData","configure","prop","record","clear","cb","Error","destination","setupDownload","rxCountStart","arrRatings","perdata","rxCurrency","rxslug","normalString","txt","toTitleCase","loginComponent_","mounted","editingData","_ismounted","authorization","arrper","arrperdetail","history","strmsg","charCode","onClickLoginSubmit","onBlurData","onClickRegisterSubmit","BlockUser","CreateGroupChat","RxManagerGroup","onClickClosePopup","flagCreateGroupPopup","onAfterBlockUser","forceUpdate","tabactive","paging_page","paging_size","block_scroll","leaveGroup_okBtnClick","isShowPopUp","clickAddMemberBtn","lg_leaderMemberChecked","groupNameValue","theInputFileKey","click_lg_chooseLeader_okBtn","loadingMedia","groupImageURL","flagManageGroupContextMenu","isShowPopupManageGroup","controller","doneAccountInfo","chooseLeader_okBtnClick","removeMember","arrgroup","newgroup","abort","preGetMedia","isRerender","loadMediaStatic","eleId","isLeaderFlag","member","mem","onClickUpdateGroup","groupsChecked","arrMember","addMemberScreen","clearSearchBox","newName","breakLoop","checkContinue","pageoffset","api_media_chat","AbortController","signal","arrMedia","v","media_uid","media","oimage","thumbnail_url","arrDataTmp","downloadLink","setAttribute","typePopup","funcCreateGroup","resetState","groupImage","chooseFileImagesStatus","getStringsImages","ucontact","isLeader","editAccountInfo","newManager_dropListClick","scrollGroupChat","onClickAddMember","currentUser","userChecked","createGroupChatText","onShow","onHide","onHideAllPopup","blockText","unBlockText","blockConfirmText","unBlockConfirmText","cancelBtnText","acceptBtnText","changeTabActive","backBtnClickGroup","refs","data_image","openNewManager","closeNewManager","onChangeSearch_chooseLeader","chooseLeader","RxManagerGroupWrap","isDisplayPopup","setIsDisplayPopup","newGroupName","setNewGroupName","searchText","setSearchText","checkedUsers","setCheckedUsers","setGroupImages","isChooseFileImage","setIsChooseFileImage","setGroupImageURL","fullnameFirstLetter","onCheckUser","emptyValue","onClickCreateGroup","groupsMemberTemp","flagCopyLink","groupLink","disableNotiSound","occupantsUinsTmp","dataLink","links","search","netaRecentSearchGroups","link_group","createLinkGroup","dropDownListMemberClick","onClickShareLinkGroup","onMouseOut","onToggleOffLinkGroup","onClickQRLinkGroup","btnRevokeLink","RxAccountInfoWrap","currentCount","showPopup","recorder","onSuccessRecording","onFailRecording","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","cancelRecord","intervalId","pauseRecord","blobToFile","audioUrl","stopRecording","AudioContext","webkitAudioContext","mediaStreamSource","createMediaStreamSource","checkExtFile","getExtension","theBlob","lastModifiedDate","startRecording","togglePopup","sendingRecord","defaultProps","flagUpdate","flags","paramPass","_isUnmounted","inthis","flagname","options","strim","RxCrudEvent","paging","extra","runCallback","api","run","stcol","timeStr","clone","is_deleted","is_active","is_hot","app","appdist","confirm","onClickDataEdit","jsoneditor","rxraw","isdeleted","timerDatafilter","evt","newContent","editor","maxpage","timerPageSize","pagesize","rxDragAndDrop","handleDrag","dragCounter","isFile","dragtype","dataTransfer","types","drag","handleDrop","fileListArr","alertStr","typeNSupArr","displayListFileScreen","clearData","fileTmp","convertFileSize","getFileType","dropCanceBtnClick","dropRef","div","fileTypeTmp","uploadFileVideos","uploadFileDoc","arrL","uploadLoadingFile","closest","capture","uploadVideo","fileReader","timeupdate","snapImage","canvas","videoWidth","objImg","preload","playsInline","readAsArrayBuffer","videokey","file_extension","newsize","fileListTmp","editFileSelected","deleteFileSelected","onChangeDataFile","rxDragAndDrop_","RxDragdroptree","server","placeholderParent","newProps","dragged","effectAllowed","setData","opacity","parentNode","helpAddDrop","over","contains","relY","offsetTop","nodePlacement","insertBefore","nextElementSibling","drop","dataset","parentid","dragdata","dropdata","tempdata","tempcurrentData","tempparentDrag","tempparentDragNew","parentId","data-index","data-parentid","draggable","onDragEnd","dragEnd","onDragStart","dragStart","helpShowTree","onDragOver","dragOver","RxGroupList","ComponentGroupListW","total","slideIndex","plusSlides","showSlides","indexTab","imageCurrent","xhr","XMLHttpRequest","responseType","imageUrl","downShowGallery","url_img","currentSlide","owner","RxInfoUserWrapped","errorValidate","onSubmit","onChangeValueContact","flagPopup","flagLeaveGroup","flagShowGallery","flagChooseLeader","flagQRCode","nameNewGroup","typeGallery","strArrImg","linkQRCode","nextPopup","funcAddMember","funLeaveGroup","onClickLeaveGroup","pngUrl","arrUserSelected","data_image_camera","chooseFileImages","addChangeNameGroup","onChangeSearchNChat","onClickShowPopupCreateGroup","leaveGroupBtn","downloadQRCode","rxSearchBox","groupsSearchArrDisplay","zgroup_contact_maxHeight","arrPhoneContact","arrPhoneContactDisplay","countContact","getRecentSearchGroups","contactGroupsTmp","recentContactGroupsDisplay","setCursorSearchBox","divNameClass","divClickFlag","recentSearchGroupsArr","arrPhoneContactId","isNumberStatus","nameContact","arrSearchGroups","timeSeach","scrollLeft","regEx","nameArr","replaceValue","searchBoxHeight","searchBox_padding","scrollRecentContactList","scrollPhoneContactList","nameUserInfo","addColorToName","scrollgroupsSearchList","PureComponent","rxSearchBox_","handleSelect","sportTitle","isOpen","defaultTitle","CountryCode","valueSearch","idCountry","handleOpen","Row","countryObj","filterSearch","wrapperRef","dataTmp","valueDefault","defaultObj","itemCount","searchCountryCode","itemSize","RxSelectEmoji","arrTabs","vEmoji","boxEmoji","emojiClickNum","arrHistory","updateSticker","icons","addHistoryEmoji","pSticker","nameimg","namefolder","namefile","transform","changeTabIcon","parseImagePath","clickMoveTab","vIcons","addHistory","parseSticker","addSticker","RxSelectbox","toggle","results","tempResults","tempIndex","onClickItem","onClickResult","rxTagName_","MainTable","AdminBlock","RxToggle","newValue","onToggle","RxUpload","single","onBlurDataArr","tempImages","tmpImgStr","tmpImgStrAdd","onChangeDataImageFile","onClickDataUpload","tempLastIndex","tempRef","onClickImgRemove","onChangeDataImageFileArr","onClickDataUploadArr","tempLastRef","uploadInputDoc","isImage","isVideo","il","toggleDataUpload","webpackContext","req","webpackContextResolve","__webpack_require__"],"mappings":"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","file":"static/js/main.7b767d19.chunk.js","sourcesContent":["/*eslint-disable no-undef*/\nimport { connect } from 'react-redux'\nimport * as Jsx from './index.jsx'\n\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\n\nconst { rxaget } = global.rootRequire('classes/ulti')\nconst { changeTheme,changeTheme_ThemeColor, loadIconUrl} = global.rootRequire('classes/ulti')\nconst themeData = global.rootRequire('classes/themeData.json')\nconst theme_themeColorData = global.rootRequire('classes/theme_themeColorData.json')\nconst { rxgetLocal, rxsetLocal } = global.rootRequire('classes/request')\nconst stickerData = global.rootRequire('classes/stickerData.json');\nconst rxio = global.rootRequire('classes/socket').default\nconst { netalogoutAction,setComp, saveNotificationStatus } = global.rootRequire('redux')\n\nclass Component_ extends RxComponent {\n  constructor(props, context) {\n    super(props, context, Jsx)\n    this.state = {\n      contacts: {},\n      listCallLog: [],\n      flagCalling: 0,\n      objsCalling: {},\n      reloadPage: false,\n      groups:{},\n      group_id: rxaget(this.props, 'rxgroup.groupid', ''),\n    }\n\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n  }\n  componentDidMount() {\n    const color = global.rxu.json(rxgetLocal('netaThemeColor'), '')\n    const themeBackGround = global.rxu.json(rxgetLocal('netaThemeBackGround'), '')\n    const notificationStatusValueTmp = rxgetLocal('netaNotificationStatus')\n    \n    if (Notification.permission === \"denied\") {      \n      this.props.saveNotificationStatus(JSON.stringify(false))\n    } else{      \n      if(typeof(notificationStatusValueTmp) === 'undefined'){\n        this.props.saveNotificationStatus(JSON.stringify(true))\n      }\n    }\n    \n\n    loadIconUrl()\n    if (themeBackGround==='darkTheme'){\n      changeTheme(themeData.nightTheme)\n      changeTheme_ThemeColor(theme_themeColorData.nightTheme)\n    } else {\n      changeTheme(themeData.defaultTheme) \n      if(color==='blueColor'){\n        changeTheme_ThemeColor(theme_themeColorData.blueColor)\n      } else {\n        changeTheme_ThemeColor(theme_themeColorData.orangeColor) \n      } \n    }  \n\n    const rxSticker = global.rxu.json(rxgetLocal('rxsticker'), {})\n    if (!rxSticker.version || (rxSticker.version && (Number(rxSticker.version) < Number(stickerData.version)))) {\n      rxsetLocal('rxsticker', JSON.stringify(stickerData))\n    }\n    \n    if (window && window.ipcRenderer) {\n      window.ipcRenderer.on('new_sticker', (event, args) => {\n        if (args) {\n          try {\n            let objSticker = JSON.parse(args)\n            if (objSticker.version) {\n              rxsetLocal('rxsticker', args)  \n            }         \n          } catch(e) {\n          }\n        }\n      })\n    }\n\n    rxio.getWaitExpired(() => {\n      try {\n        if (rxio.connected) {\n          rxio.disconnect()\n        }\n\n        this.props.netalogoutAction()\n        // this.props.history.push('/login')\n        this.props.setComp('login')\n      } catch(e) {}\n    })\n  }\n\n  onClickAddFriend = () => {\n    let modalAddFriend = this.state.modalAddFriend\n    this.setState({ modalAddFriend: !modalAddFriend })\n  }\n\n  callBackRedirectParent() {\n    // this.props.history.push('/chat')\n    this.props.setComp('chat')\n  }\n  checkClickOutside(e) {\n\n    const menuDiv = document.getElementById('menu-message')\n    const menuDiv2 = document.getElementById('menu-mouseright-chat')\n    const menuDivGroup = document.getElementById('context_menu-group')\n    // const groupPopup = document.getElementById('popup-group')\n    if (menuDiv && e.target !== menuDiv && menuDiv.style.display === 'block') {\n      menuDiv.style.display = 'none'\n      this.setState({ mess_selected: {}, mess_id: '' })\n    }\n    if (menuDivGroup && e.target !== menuDivGroup && menuDivGroup.style.display === 'block') {\n      menuDivGroup.style.display = 'none'\n      this.setState({ mess_selected: {}, mess_id: '' })\n    }\n    if (menuDiv2 && e.target !== menuDiv2 && menuDiv2.style.display === 'block') {\n      menuDiv2.style.display = 'none'\n      this.setState({ mess_selected: {}, mess_id: '' })\n    }\n  }\n\n  render() {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  netaauth: state.netaauth,  \n  rxgroup: state.rxgroup,\n})\n\nconst mapDispatchToProps = {\n  netalogoutAction, setComp,\n  saveNotificationStatus\n}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","/*eslint-disable no-undef*/\nimport { connect } from 'react-redux'\nimport fetch from 'isomorphic-fetch'\n\nimport * as Jsx from './index.jsx'\n/* global translate*/\nconst rxio = global.rootRequire('classes/socket').default\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\nconst rxu = global.rxu\nconst { rxaget, rxChangeSlug,changeTheme } = global.rootRequire('classes/ulti')\nconst { rxnavToggle, rxnavClose, netaCallHistoryUpdate, setComp, clickCall } = global.rootRequire('redux')\nconst { rxgetLocal } = global.rootRequire('classes/request')\nconst dHeaders = { Accept: 'application/json', 'Content-Type': 'application/json; charset=utf-8' }\nconst themeData = global.rootRequire('classes/themeData.json')\nconst { checkNameUser } = global.rootRequire('classes/chat')\n\nfunction fmtMSS (s) { return (s - (s %= 60)) / 60 + (s > 9 ? ':' : ':0') + s }\nclass Component_ extends RxComponent {\n  constructor (props, context) {\n    super(props, context, Jsx)\n    this.state = global.rootContext(this.props.staticContext) || {\n      listCallLog: [],\n      flagCalling: 0,\n      objsCalling: {},\n      callType: 0, \n      flagTurnOffSoundCall: false,\n      callHistorySearch: rxaget(this.props, 'netaCallHistory.data', []),\n      callHistory: rxaget(this.props, 'netaCallHistory.data', []),      \n      groupinfo: rxaget(global.rxu.json(rxgetLocal('netaGroups'), {}), 'groups') || {},\n      usersinfo: rxaget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users') || {},\n      flagcall: false,\n      flagindex: -1,\n      flaggroup: {},\n      callRightMouse: {}\n    }\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.peerConnection = {}\n    this.localStream = {}\n    this.call_id = 0\n  }\n\n  componentDidMount () {\n    document.addEventListener('mousedown', this.handleClickOutside)\n    const themeBackGround = global.rxu.json(rxgetLocal('netaThemeBackGround'), '')\n\n    if (themeBackGround === 'darkTheme'){\n      changeTheme(themeData.nightTheme)\n    } else {\n      changeTheme(themeData.defaultTheme) \n    }    \n\n    this.fetchData()\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  onClickStartCallRender(e, ele, index) {\n    let flaggroup = {\n      group_id: ele.group_id,\n      occupants_uins: ele.callee_uins,\n      media_type: ele.media_type\n    }\n\n    this.setState({flagcall: true, flagindex: index, flaggroup: flaggroup}, () => {\n      let typeCall = 'voicecall'\n      if (ele.media_type === 2) {\n        typeCall = 'videocall'\n      }\n\n      this.props.clickCall(typeCall, {\n        group_id: rxaget(ele, 'group_id', '' ).toString(),\n        type: rxaget(ele, 'type', 0 ),\n        occupants_uins: rxaget(ele, 'callee_uins', [] )\n      })\n    })\n  }\n\n  onClickStopCallRender() {\n    this.setState({flagcall: false, flagindex: -1})\n  }\n\n  localDescCreated (desc) {\n    const callObj = this.state.objsCalling\n    this.peerConnection.setLocalDescription(\n      desc,\n      () => rxio.sendIceSdp({\n        group_id: callObj.group_id,\n        call_id: callObj.call_id,\n        sender_uin: callObj.caller_uin,\n        receiver_uin: callObj.callee_uins.filter(ele => (ele !== callObj.caller_uin))[0],\n        type: 1,\n        sdp: this.peerConnection.localDescription.sdp\n      }),\n      () => { }\n    )\n  }\n\n  onChangeSearch (e) {\n    let value = e.target.value\n    if(value.startsWith('0')){\n      value = value.replace(value.charAt(0), '+84')\n    }\n    const _usersinfo = this.state.usersinfo\n    const arrCallHistory = this.state.callHistorySearch.filter(o => {\n      const callId = rxaget(o.callee_uins.filter((id) => (id !== rxaget(this.props, 'netaauth.user.id'))), [0] )\n      const uname = checkNameUser(rxaget(_usersinfo, [callId],translate('Stranger')))\n      const uname_info = rxaget(_usersinfo, [callId],translate('Stranger'))\n      if (rxChangeSlug(uname).indexOf(rxChangeSlug(value)) !== -1 || rxChangeSlug(uname_info.phone).indexOf(rxChangeSlug(value)) !== -1) {\n        return true\n      } else { \n        return false\n      }\n    })\n    this.setState({ callHistory: arrCallHistory })\n  }\n\n  helpTimeText (timestamp) {\n    const a = new Date(timestamp * 1000)\n    const months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\n    const month = months[a.getMonth()]; const date = a.getDate(); const hour = a.getHours(); const min = a.getMinutes()\n    const time = `${date}/${month} ${hour}:${min}`\n    return time\n  }\n\n  helpCallType (ele, isClass) {\n    let result = ''\n    let mess = ''\n    if (rxu.get(this.props, 'netaauth.user.id') === ele.caller_uin) {\n      mess = translate('Call away')\n      result = isClass ? 'icon-call-out' : `${mess} (${fmtMSS(ele.stopped_at - ele.started_at)})`\n    } else {\n      if (ele.accepted_at) {\n        mess = translate('Incoming call')\n        result = isClass ? 'icon-call-in' : `${mess} (${fmtMSS(ele.stopped_at - ele.started_at)})`\n      } else {\n        mess =  translate('Missed call')\n        result = isClass ? 'icon-call-in icon-call-miss' : mess\n      }\n    }\n    return result\n  }\n\n  helpCallName (ele) {\n    let result = ''\n    if (rxu.get(this.props, 'netaauth.user.id') === ele.caller_uin) {\n      result = ''\n    } else {\n      if (ele.accepted_at) {\n        result = ''\n      } else {\n        result = 'zname-miss'\n      }\n    }\n    return result\n  }\n  disableDrop = event => {\n    event.preventDefault();\n  }  \n\n  fetchData () {\n    const headers = { 'TC-Token': rxu.get(this.props, 'netaauth.user.token'), ...dHeaders }\n    fetch(rxu.config.base_api_neta + '/api/call_log.json', {\n      method: 'GET',\n      headers: headers\n    })\n    .then(response => response.text())\n    .then(result => {\n      try {\n        let arrGroupCallId = result.match(/call_id\":(.*?)\\,/ig)\n        if (arrGroupCallId && arrGroupCallId.constructor === Array && arrGroupCallId.length > 0) {\n          for (let strRegexCall of arrGroupCallId) {\n            let newStrCallReplace = strRegexCall.replace('\":', '\":\"').replace(',', '\",')\n            result = result.replace(strRegexCall, newStrCallReplace)\n          }  \n        }\n        const json = JSON.parse(result)\n        if (json.calls) {\n          this.props.netaCallHistoryUpdate(json.calls)\n          this.setState({callHistory:rxaget(this.props, 'netaCallHistory.data', [])})\n        }\n      } catch (e) {}\n    })\n    .catch(error => console.log('error', error))\n  \n  }\n\n  onRightClickGroup(e, group) {\n    e.preventDefault();\n    document.oncontextmenu = function (e) {\n      return false;\n    }\n\n    try {\n      const menuDiv = document.getElementById('context-menu-call-history')\n      menuDiv.style.top = e.clientY + 'px'\n      menuDiv.style.left = Number(e.clientX) + 'px'\n      menuDiv.style.display = 'block'  \n    } catch(e) {\n      console.log(e)\n    }\n\n    this.setState({ callRightMouse: group })\n  }\n\n  handleClickOutside(event) {\n    if (event.buttons === 1 && event.target.className !== 'group-item-info') {\n      try {\n        const menuDiv = document.getElementById('context-menu-call-history')\n        menuDiv.style.display = 'none'  \n      } catch(e) {}\n    }\n  }\n\n  removeCallHistory() {\n    try {\n      const callClick = this.state.callRightMouse || {}\n      const menuDiv = document.getElementById('context-menu-call-history')\n      menuDiv.style.display = 'none'  \n      const token = rxu.get(this.props, 'netaauth.user.token')\n     \n      if (token && callClick && callClick.call_id) {\n        const headers = { 'TC-Token': token, ...dHeaders }\n        const params = { 'call_id': callClick.call_id.toString() }\n        fetch(rxu.config.base_api_neta + '/api/call_log/delete', {\n          method: 'POST',\n          body: JSON.stringify(params),\n          headers: headers \n        }).then((res) => {\n          this.fetchData()\n        }).catch(er => console.log(er))\n      }\n\n    } catch(e) {}\n  }\n\n  render () {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  themeBackgroudValue: state.themeBackgroudValue,\n  langValue: state.langValue,\n  auth: state.auth,\n  favorite: state.favorite,\n  netaauth: state.netaauth,\n  netaCallHistory: state.netaCallHistory,\n  user: state.user,  \n  rxgroup: state.rxgroup,\n})\n\nconst mapDispatchToProps = {\n  rxnavClose,\n  rxnavToggle,\n  netaCallHistoryUpdate,\n  setComp,\n  clickCall\n}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","/*eslint-disable no-undef*/\nimport { connect } from 'react-redux'\nimport fetch from 'isomorphic-fetch'\n\nimport * as Jsx from './index.jsx'\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\nconst { rxnavToggle, rxnavClose, netaRegisteredUsersUpdate, setComp, contactAdd,chooseGroupAction } = global.rootRequire('redux')\nconst dHeaders = { 'Accept': 'application/json', 'Content-Type': 'application/json; charset=utf-8' }\nconst { rxgetLocal } = global.rootRequire('classes/request')\nconst { changeTheme, rxaget, rxChangeSlug } = global.rootRequire('classes/ulti')\nconst { fetchContact, addContact, checkNameUser } = global.rootRequire('classes/chat')\nconst themeData = global.rootRequire('classes/themeData.json')\nconst rxio = global.rootRequire('classes/socket').default\n\nclass Component_ extends RxComponent {\n\n  constructor (props, context) {\n    super(props, context, Jsx)\n    this.state = {\n      inputSearchContact: '',\n      usersStatus:{},\n      flagEdit: false,\n      contactRightMouse: {},\n      contactInfo: {}\n    }\n    if(global.rootContext(this.props.staticContext)){\n      this.state = {        \n        ...this.state,\n        ...global.rootContext(this.props.staticContext) \n      }\n    }\n    this.netaContact = rxaget(this.props, 'netaContact', {})\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.token = global.rxu.get(this.props, 'netaauth.user.token') \n    this.onSubmitContact = this.onSubmitContact.bind(this)\n    this.compareContact = this.compareContact.bind(this);\n    this.state.registeredUsers = global.rxu.get(this.props, 'netaRegisteredUsers.data', []).sort(this.compareContact)\n    // this.state.registeredUsers = registeredUsersTmp.sort(this.compareContact);\n    this.state.groupsSearchBoxClickStatus = false\n    this.state.searchValue = ''\n  }\n\n  componentDidMount () {\n    document.addEventListener('mousedown', this.handleClickOutside);\n\n    let netaUsersStatus = global.rxu.json(rxgetLocal('netaUsersStatus'), {})\n    this.setState({usersStatus:netaUsersStatus})\n\n    const themeBackGround = global.rxu.json(rxgetLocal('netaThemeBackGround'), '')\n    if (themeBackGround==='darkTheme'){\n      changeTheme(themeData.nightTheme)\n    }else {\n      changeTheme(themeData.defaultTheme) \n    }    \n    this.fetchData()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    let registeredUsers = global.rxu.get(nextProps, 'netaRegisteredUsers.data', [])\n    if(registeredUsers && registeredUsers.length !== this.state.registeredUsers.length){\n      \n      registeredUsers.sort(this.compareContact)\n\n      this.setState({registeredUsers:registeredUsers})  \n    }  \n  }\n  \n  getSearchBoxvalue(clickStatus,searchValue){\n    this.setState({\n      groupsSearchBoxClickStatus:clickStatus,\n      searchValue:searchValue,\n    })\n  }\n  \n  compareContact( a, b ) {\n    let userA = rxChangeSlug(checkNameUser(a,this.userid,this.props.netaauth))\n    let userB = rxChangeSlug(checkNameUser(b,this.userid,this.props.netaauth))\n\n    if ( userA < userB ){\n      return -1;\n    }\n    if ( userA > userB ){      \n      return 1;\n    }\n    return 0;\n  }\n\n  onSubmitContact(addContactValue){\n    let typeForce = (this.state.flagEdit) ? 1 : 0\n    addContact({ arrContacts: [addContactValue], udid: this.userid, token: this.token, typeForce: typeForce },\n      (json) => {\n        try {\n          // console.log(\"addContact\", json)\n          if (json.created || json.deleted || json.updated) {\n            let that = this\n            fetchContact({ netaContact: rxaget(that.props, 'netaContact.data', {}), token: that.token }, (newContacts) => {\n              that.props.contactAdd(newContacts)\n\n              this.fetchData()\n            })\n          }else{\n            alert(translate('The user does not exist on the system'))\n          }\n          this.setState({\n            displayAddContact: false,\n            flagEdit: false,\n            contactInfo: {}\n          })\n        } catch (error) { console.log(error) }\n      })\n  }\n  groupsSearchBoxClick(){\n    this.setState({groupsSearchBoxClickStatus:true})\n  }\n  async updateInput (inputName, e) {\n    let state = {}\n    let value = e.target.value\n    \n    state[inputName] = value\n\n    let arrGroupsChat = this.state.registeredUsers || []\n    let jsonUser = await this.searchPhone(value)\n    if (jsonUser && rxaget(jsonUser, 'Id', '')) {\n      jsonUser['id'] = rxaget(jsonUser, 'Id', '')\n      let findUser = arrGroupsChat.findIndex(o => o.Id === rxaget(jsonUser, 'Id', 0))\n      if (findUser === -1) {\n        arrGroupsChat.push(jsonUser)  \n      }\n    }\n    \n    state['registeredUsers'] = arrGroupsChat\n\n    this.setState(state)\n  }\n\n  async searchPhone(vPhone) {\n    vPhone = vPhone.replace(\"+\", \"\")\n    let prefixes = [\"0084\", \"084\", \"84\", \"0\"]\n    for (let iChar in prefixes) {\n      let jChar = prefixes.length - iChar\n      let phoneSub = vPhone.substring(0, jChar)\n      if (phoneSub === prefixes[iChar]) {\n        vPhone = vPhone.replace(prefixes[iChar], \"0\")\n        break\n      }\n    }\n    let phoneRegx = /^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/\n    if(vPhone.match(phoneRegx)) {\n      const api_get_phone = global.rxu.config.get_phone\n      const res = await fetch(api_get_phone + '?phone=' + vPhone, { method: 'GET', headers: { Accept: 'application/json', 'TC-Token': this.token, Connection: 'Keep-Alive', 'Accept-Encoding': 'gzip' }, body: null })\n      try {\n        let json = await res.json()\n        if (json && json.Id) {\n          return json\n        } else {\n          return null\n        }\n      } catch(e) {\n        return null\n      }\n    } else {  \n      return null\n    }\n  }\n\n  disableDrop = event => {\n    event.preventDefault();\n  }\n\n  chooseGroup(group){\n    this.props.chooseGroupAction(group)              \n    this.props.setComp('chat')\n  }\n  \n  chooseContact(contact,isSearchBoxAction){\n                  \n    if(!isSearchBoxAction){\n      this.createNewChat(contact.id)\n    }\n    // this.props.setComp('chat')    \n    // this.props.updateRxContact(contact)\n  }\n\n  createNewChat(partner_id) {\n    let userOwner = rxaget(this.props, 'netaauth.user', {})\n    const params = {\n      'type': 3,\n      'owner_uin': userOwner.id,\n      'name': '',\n      'avatar_url': '',\n      'occupants_uins': [userOwner.id,partner_id],\n      'sender_name': userOwner.name\n    }\n    \n    try {\n      if (partner_id) {\n        try {\n          rxio.createNewGroup(params, (data) => {\n            if (data && data.group) {\n              if (data.group.type === 3) {\n                data.group.partner_id = partner_id\n              }\n              this.props.chooseGroupAction(data.group)              \n              this.props.setComp('chat')\n            }\n          })\n        } catch(e1) {\n        }\n      }\n    } catch(e) {\n    }  \n  }\n\n  fetchData () {\n    let headers = { 'TC-Token':this.token, ...dHeaders }\n    fetch(global.rxu.config.base_api_neta + '/api/registered_users.json?udid=&compact=0&offset=0&limit=1000', {\n      method: 'GET',\n      headers: headers\n    }).then(r => r.json()).then((json) => {\n      if (json.items) {\n        this.props.netaRegisteredUsersUpdate(json.items)\n      }\n    }).catch(er => console.log(er))\n  }\n\n  onRightClickGroup(e, group) {\n    e.preventDefault();\n    document.oncontextmenu = function (e) {\n      return false;\n    }\n\n    try {\n      const menuDiv = document.getElementById('context-menu-contact')\n      menuDiv.style.top = e.clientY + 'px'\n      menuDiv.style.left = Number(e.clientX) + 'px'\n      menuDiv.style.display = 'block'  \n    } catch(e) {\n      console.log(e)\n    }\n\n    this.setState({ contactRightMouse: group })\n  }\n\n  handleClickOutside(event) {\n    if (event.buttons === 1 && event.target.className !== 'group-item-info') {\n      try {\n        const menuDiv = document.getElementById('context-menu-contact')\n        menuDiv.style.display = 'none'  \n      } catch(e) {}\n    }\n  }\n\n  apiRemoveContact(userid, paramsContact, callback) {\n    const token = rxu.get(this.props, 'netaauth.user.token')\n\n    addContact({ arrContacts: [paramsContact], udid: userid, token: token },\n      (json) => {\n        try { callback(json) } \n        catch (error) { console.log(error) }\n      }\n    )\n  }\n\n  removeContact() {\n    try {\n      const contactClick = this.state.contactRightMouse || {}\n\n      const menuDiv = document.getElementById('context-menu-contact')\n      menuDiv.style.display = 'none'  \n      \n      if (contactClick && contactClick.id) {\n        const nameContact = (rxaget(this.props.netaContact, 'data.'+contactClick.phone, '' )) ? rxaget(this.props.netaContact, 'data.'+contactClick.phone, '' ) : contactClick.full_name || contactClick.phone \n        const paramsContact = { name: nameContact, phone: contactClick.phone, destroy: 1 }\n\n        this.apiRemoveContact('', paramsContact, (result) => {\n          if (result && result.Code) {\n            this.apiRemoveContact(this.userid, paramsContact, (result1) => {\n              if (result1.created || result1.deleted || result1.updated) {\n                this.fetchData()\n              } else {\n                alert(translate('Remove Contact Not Success'))\n              }\n            })\n          } else if (result.created || result.deleted || result.updated) {\n            this.fetchData()\n          }\n        })\n      }\n\n    } catch(e) {}\n  }\n\n  editContact() {\n    try {\n      const contactClick = this.state.contactRightMouse || {}\n\n      const menuDiv = document.getElementById('context-menu-contact')\n      menuDiv.style.display = 'none'  \n\n      const nameContact = rxaget(this.props.netaContact, 'data.'+contactClick.phone, '' )\n      const contactInfo = { name: nameContact, phone: contactClick.phone}\n\n      this.setState({displayAddContact: true, flagEdit: true, contactInfo: contactInfo})\n    \n\n    } catch(e) {}\n  }\n \n  render() {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  themeBackgroudValue: state.themeBackgroudValue,\n  langValue: state.langValue,\n  auth: state.auth,\n  favorite: state.favorite,\n  netaauth: state.netaauth,\n  netaRegisteredUsers: state.netaRegisteredUsers,\n  netaContact: state.netaContact,\n  rxgroup: state.rxgroup,\n})\n\nconst mapDispatchToProps = {\n  rxnavClose,\n  rxnavToggle,\n  netaRegisteredUsersUpdate,\n  setComp,\n  contactAdd,\n  chooseGroupAction\n}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","/* global translate */ \nimport { connect } from 'react-redux';\nimport * as Jsx from './index.jsx';\nconst themeData = global.rootRequire('classes/themeData.json')\nconst themeColorData = global.rootRequire('classes/themeColorData.json')\nconst theme_themeColorData = global.rootRequire('classes/theme_themeColorData.json')\nconst dataQ = global.rootRequire('classes/frequently_asked_questions.json')\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\nconst { netaUpdateProfileAction, setComp, rxnavToggle, rxnavClose, netaloginAction, netalogoutAction, saveLanguage, savePage, saveTheme, saveThemeBackgroud , saveNotificationStatus} = global.rootRequire('redux')\nconst rxio = global.rootRequire('classes/socket').default\nconst { rxaget ,changeTheme, changeThemeColor,changeTheme_ThemeColor} = global.rootRequire('classes/ulti')\nconst { rxsetLocal, rxgetLocal } = global.rootRequire('classes/request')\nconst { checkNameUser } = global.rootRequire('classes/chat')\nlet zget = global.rxu.get\n\nclass Component_ extends RxComponent {\n  constructor (props, context) {\n    super(props, context, Jsx)\n    this.state = global.rootContext(this.props.staticContext) || {\n      displayEditScreen: false,\n      page:'cdtb',\n      netaauth_user_name:'',\n      notificationStatusValue:'',\n      status_clickTitle: [\n        { status_click: false, quest_num: 'questNum1' },\n        { status_click: false, quest_num: 'questNum2' },\n        { status_click: false, quest_num: 'questNum3' },\n        { status_click: false, quest_num: 'questNum4' },\n        { status_click: false, quest_num: 'questNum5' },\n        { status_click: false, quest_num: 'questNum6' },\n        { status_click: false, quest_num: 'questNum7' },\n        { status_click: false, quest_num: 'questNum8' },\n        { status_click: false, quest_num: 'questNum9' },\n        { status_click: false, quest_num: 'questNum10' },\n        { status_click: false, quest_num: 'questNum11' },\n        { status_click: false, quest_num: 'questNum12' },\n        { status_click: false, quest_num: 'questNum13' },\n        { status_click: false, quest_num: 'questNum14' },\n        { status_click: false, quest_num: 'questNum15' },\n        { status_click: false, quest_num: 'questNum16' }\n      ],\n      usernameValue:\"\",\n      imgkey:\"\",\n      unblockList:{}\n    }\n\n    this.uploadInputImage = null\n    \n    this.users = rxaget(this.props, 'user.users', {}) || {}\n    this._user = rxaget(this.props, 'netaauth.user', {})\n    this.userinfo = this.users[this._user.id]\n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.updateProfile = this.updateProfile.bind(this)\n    this.uploadFileImages = this.uploadFileImages.bind(this)\n    this.getBlockList = this.getBlockList.bind(this)\n    this.onClickUnBlockContact = this.onClickUnBlockContact.bind(this)\n    // this.onChooseContactUnblock= this.onChooseContactUnblock.bind(this)\n    this.state.netaauth_profile_url = this._user.profile_url\n    // if(typeof this.state.notificationStatusValue === 'undefined'){\n    //  this.state.notificationStatusValue = zget(this.props, 'notificationStatusValue', {})\n    // }\n    // console.log(dataQ,'data')\n    let arrQuestion =[]\n    for (const question of Object.keys(dataQ)) {\n      if (dataQ[question]) {\n\n        arrQuestion.push(dataQ[question])\n      }\n    }\n    this.state.arrQuestion =arrQuestion\n    // console.log(arrQuestion)\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.netaauth.user && JSON.stringify(nextProps.netaauth.user) !== JSON.stringify(this._user)) {\n      this._user = rxaget(nextProps, 'netaauth.user', {})\n      this.convertOmessUser(zget(nextProps, 'netaauth.user.id'))\n      this.setState({netaauth_profile_url:this._user.profile_url})\n    }\n  }\n\n  componentDidMount () {\n    const color = global.rxu.json(rxgetLocal('netaThemeColor'), '')\n    const themeBackGround = global.rxu.json(rxgetLocal('netaThemeBackGround'), '')   \n    let notificationStatusValue\n    if (Notification.permission === \"denied\") {\n      notificationStatusValue = false\n    } else{\n      notificationStatusValue = global.rxu.json(rxgetLocal('netaNotificationStatus'), '')\n    }\n    let page = rxgetLocal('netaPage')\n    \n    if (themeBackGround==='darkTheme'){\n      changeTheme(themeData.nightTheme)\n      changeTheme_ThemeColor(theme_themeColorData.nightTheme)\n    }else {\n      changeTheme(themeData.defaultTheme) \n      if(color==='blueColor'){\n        changeTheme_ThemeColor(theme_themeColorData.blueColor)\n      } else {\n        changeTheme_ThemeColor(theme_themeColorData.orangeColor) \n      } \n    }    \n    if(color==='blueColor'){\n      changeThemeColor (themeColorData.blueColor)\n    } else {\n      changeThemeColor (themeColorData.orangeColor) \n    } \n    if (typeof page === 'undefined' || page === null) {\n      rxsetLocal('netaPage', JSON.stringify('cdtb'))   \n      page = 'cdtb'   \n    }\n\n    this.setState({\n      page:page,\n      notificationStatusValue:notificationStatusValue\n    })  \n    this.fetchData()\n\n    this.convertOmessUser(zget(this.props, 'netaauth.user.id'))\n    if (this.token && this.userinfo) {\n      if (!rxio.connected && !rxio.init_connected) {\n        rxio.login(this.token, this.userinfo, (data) => {\n          this.getBlockList()\n        })\n      }\n      else this.getBlockList()\n    }\n  }\n  getBlockList() {\n    if (rxio.connected) {\n      const msg = {\n        \"uin\": Number(this.userid),\n        \"pindex\": 0, \"psize\": 1000\n      }\n      let that = this\n      rxio.socket.emit('blocked_list', msg, (data) => {\n        if (data.result === 0 && data.list) {\n          let blockedList = []\n          data.list.map(i => {\n            if (this.users[Number(i.uin)]) {\n              let group = {\n                ...i,\n                ...that.users[Number(i.uin)]\n              }\n              blockedList.push(group)\n            }\n            return blockedList\n          })\n          // console.log(\"blocked_list\", data, that.users, blockedList)\n          that.setState({ blockedList: blockedList })\n        }\n      })\n      rxio.getUpdateGroup((data) => {\n        try {\n          if (data.unblocked_all.length > 0 || data.blocked_all.length > 0) {\n            // console.log(\"data\",data)\n            let blockedList = JSON.parse(JSON.stringify(that.state.blockedList))\n            if (data.unblocked_all.length) {\n              const index = blockedList.findIndex(i => i.uin.toString() === data.unblocked_all[0].toString())\n              if (index !== -1) {\n                blockedList.splice(index, 1)\n              }\n            }\n            else {\n              const index = blockedList.findIndex(i => i.uin.toString() === data.blocked_all[0].toString())\n              if (index === -1) {\n                if (that.users[Number(data.blocked_all[0])]) {\n                  let group = {\n                    uin: data.blocked_all[0],\n                    group_id: data.group_id,\n                    ...that.users[Number(data.blocked_all[0])]\n                  }\n                  blockedList.push(group)\n                }\n              }\n            }\n            that.setState({ blockedList: blockedList })\n          }\n        } catch (e) { console.log(\"e\", e) }\n      })\n    }\n  }\n  onChooseContactUnblock(group, index) {\n    let unblockList = JSON.parse(JSON.stringify(this.state.unblockList))\n    if (unblockList[group.group_id])\n      delete unblockList[group.group_id]\n    else unblockList[group.group_id] = group\n    this.setState({ unblockList: unblockList})\n  }\n\n  onClickUnBlockContact() {\n    try {\n      let unblockList = JSON.parse(JSON.stringify(this.state.unblockList)),\n        that = this\n      for (let key in unblockList) {\n        let group = unblockList[key]\n        rxio.blockUser({ group_id: group.group_id, uni: group.uin, type: 'unblock_user' }, () => {\n          let blockedList = JSON.parse(JSON.stringify(that.state.blockedList))\n          let index = blockedList.findIndex(i => i.uin.toString() === group.uin.toString())\n          if (index !== -1) {\n            blockedList.splice(index, 1)\n          }\n          that.setState({ blockedList })\n        })\n      }\n    } catch (error) { }\n  }\n  uploadFileImages(fileList) {\n    try {\n      if (fileList.length && fileList[0]) {\n        var file = fileList[0]\n        let parts = (file.name || '').split('.');\n        let ext = parts[parts.length - 1] || '';\n        if (['png', 'jpg'].indexOf(ext.toLowerCase()) >= 0) {\n          let fileSize = file.size\n          let extFilename = 'png'\n\n          let _URL = window.URL || window.webkitURL\n          let img = new Image();\n          let objectUrl = _URL.createObjectURL(file)\n\n          let dataParams = {\n            content_type: 'image/' + extFilename,\n            name: 'netalo_' + Math.floor(Date.now()),\n            public: true,\n            size: fileSize\n          }\n          let header = { 'TC-Token': this.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n          let requestOptions = {\n            method: 'POST', headers: header,body: JSON.stringify(dataParams), redirect: 'follow'\n          };\n\n          fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n            if (json && json.blod_object && json.blod_object.form_data) {\n              let dataUpload = new FormData()\n              let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n              for (let key of arrKeys) {\n                if (json.blod_object.form_data[key]) {\n                  dataUpload.append(key, json.blod_object.form_data[key])\n                }\n              }\n              dataUpload.append('file', file, file.name)\n              dataUpload.append('success_action_status', 201)\n\n              fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n                if (result.indexOf('Key') !== -1) {\n                  let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                  let strresult = result.match(patt);\n                  if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                    let key = strresult[1]\n                    if (key) {\n                      let optComplete = {\n                        method: 'PUT',\n                        headers: header,\n                        body: JSON.stringify({\n                          content_type: json.content_type, id: json.id, name: json.name, size: json.size, uid: json.uid\n                        })\n                      };\n\n                      fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                        .then(response => {\n                          if (response.status === 200) {\n                            try {\n                              img.onload = () => {\n                                _URL.revokeObjectURL(objectUrl)\n                                this.setState({imgkey:key,netaauth_profile_url:key})\n                              }\n                              img.src = objectUrl\n                            } catch (e) { }\n                          }\n                        }).catch(errorPut => console.log('error', errorPut));\n                    }\n                  }\n                }\n              })\n            }\n          }).catch(error => console.log('create_blob error', error))\n        } else alert(translate('The image file format is not suitable. Please select the image file as .jpg or .png'))\n      }\n    } catch (error) { console.log('upload error', error) }\n  }\n  updateProfile(){\n    let dataParams = {}\n    if (this.state.usernameValue !== this.state.netaauth_user_name) dataParams.full_name = this.state.usernameValue\n    if (this.state.imgkey) dataParams.profile_url = this.state.imgkey\n    if (Object.keys(dataParams).length) {\n      let header = { 'TC-Token': this.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n      let requestOptions = {\n        method: 'PUT', headers: header, body: JSON.stringify(dataParams), redirect: 'follow'\n      };\n      fetch(global.rxu.config.update_profile + this._user.id, requestOptions).then(res => { return res.json() })\n        .then((json) => {\n          fetch(global.rxu.config.base_api_neta + '/api/users/' + this._user.id, {\n            method: 'GET',\n            headers: header\n          }).then(r => r.json()).then((jsonb) => {\n            if (jsonb && jsonb.Id) {\n              let data = this._user\n              data.name = jsonb.name || jsonb.full_name\n              data.full_name = jsonb.full_name || jsonb.name\n              if (jsonb.profile_url) data.profile_url = jsonb.profile_url\n              this.setState({ netaauth_user_name: data.name, usernameValue: data.name,\n                netaauth_profile_url: jsonb.profile_url,imgkey:'',displayEditScreen:false })\n              this.props.netaUpdateProfileAction(data)\n            }\n          })\n        }).catch(error => console.log('update_profile error', error))\n    }\n  }\n  convertOmessUser(omessId){\n    let usersinfo = ''\n    let username =''\n    if (rxgetLocal('rxusers')) {\n      username = zget(this.props, 'netaauth.user.name')\n      if (!username) {\n        usersinfo = zget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users') || {}\n        username = checkNameUser(zget(usersinfo, [omessId], {}))\n      }\n    }\n    this.setState({ netaauth_user_name: username, usernameValue: username })\n    return username\n  }\n  componentWillReceiveProps (nextprops) {\n    if (Notification.permission === \"denied\") {\n      this.setState({\n        notificationStatusValue:false\n      })  \n    }\n    if (nextprops.themeBackgroudValue === 'darkTheme'){\n      changeTheme(themeData.nightTheme)\n      changeTheme_ThemeColor(theme_themeColorData.nightTheme)\n    }else {\n      changeTheme(themeData.defaultTheme)\n      if(nextprops.themeValue === 'blueColor'){        \n        changeTheme_ThemeColor(theme_themeColorData.blueColor)\n      } else {        \n        changeTheme_ThemeColor(theme_themeColorData.orangeColor) \n      } \n    }\n\n    if(nextprops.themeValue === 'blueColor'){\n      changeThemeColor (themeColorData.blueColor)      \n    } else {\n      changeThemeColor (themeColorData.orangeColor)              \n    } \n    \n  }\n\n  onClickLogout () {\n    if (rxio.connected) {\n      rxio.disconnect()\n    }\n\n    this.zmenu_logoutConfigpage()\n    this.props.netalogoutAction()\n    // this.props.history.push('/login')\n    this.props.setComp('login')\n  }\n\n  zmenu_logoutConfigpage () {\n    this.props.savePage('cdtb')\n  }\n\n  themeSelect (value) {\n    this.setState({ themeValue: value })\n\n    this.props.saveThemeBackgroud(value)\n  }\n\n  editBtnClick () {\n    this.setState({ displayEditScreen: true })\n  }\n\n  cancelBtnClick () {\n    this.setState({ netaauth_profile_url: this._user.profile_url, imgkey: '', displayEditScreen: false },\n      () => this.convertOmessUser(zget(this.props, 'netaauth.user.id')))\n  }\n\n  submitThemeColor (value) {\n    this.props.saveTheme(value)\n  }\n  usePushNotifications(e){\n    if (Notification.permission === \"denied\") {\n      alert(translate('Notifications blocked. Please enable them in your browser.'));\n\n      this.props.saveNotificationStatus(JSON.stringify(false))\n      this.setState({notificationStatusValue:false})\n    }else{\n      let value = e.target.checked\n      this.props.saveNotificationStatus(JSON.stringify(value))\n      try{\n        if(window.Notification && Notification.permission !== \"denied\") {\n          Notification.requestPermission(function(status) {            \n          });\n        }\n      }catch(e){\n      }\n      this.setState({notificationStatusValue:value})\n    }\n\n\n  }\n  choose_cdtb (value) {\n    this.props.savePage(value)\n    this.setState({page:'cdtb'})\n  }\n  choose_cdcd (value) {\n    const color = rxgetLocal('netaThemeColor')\n    if (typeof color === 'undefined' || color === null) {\n      rxsetLocal('netaThemeColor', JSON.stringify('orangeColor'))\n    }\n\n    const colorBackground = rxgetLocal('netaThemeBackGround')\n    if (typeof colorBackground === 'undefined' || color === null) {\n      rxsetLocal('netaThemeBackGround', JSON.stringify('defaultTheme'))\n    }\n    this.props.savePage(value)\n    this.setState({page:'cdcd'})\n  }\n\n  choose_chtg (value) {\n    this.props.savePage(value)\n    this.setState({page:'chtg'})\n  }\n\n  choose_dksd (value) {\n    this.props.savePage(value)\n    this.setState({page:'dksd'})\n  }\n\n  choose_cdnn (value) {\n    this.props.savePage(value)\n    this.setState({page:'cdnn'})\n  }\n\n  chtg_clickTitle (name) {\n    const questNum = name\n    const arrQuestion = this.state.arrQuestion\n    // if(arrQuestion.indexOf('Key') !== -1)\n    for (let i = 0; i < 16; i++) {\n      if (questNum === arrQuestion[i].name) {\n        if (arrQuestion[i].status_click === true) {\n          arrQuestion[i].status_click = false\n        } else {\n          arrQuestion[i].status_click = true\n        }\n      }\n    }\n\n    this.setState({ arrQuestion: arrQuestion })\n  }\n\n  changeLang (value) {\n    if (value) {\n      this.props.saveLanguage(value)\n    }\n  }\n\n  func_getCharacName (name) {\n    const arrName = name.split(' ')\n    if (arrName.length === 1) {\n      const _name = arrName[0][0] + arrName[0][1]\n      return _name.toUpperCase()\n    } else {\n      const _name = (arrName[0][0] + arrName[arrName.length - 1][0])\n      return _name.toUpperCase()\n    }\n  }\n\n  fetchData () { }\n\n  render () {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  auth: state.auth,\n  favorite: state.favorite,\n  netaauth: state.netaauth,\n  user: state.user,\n  langValue: state.langValue,\n  pageValue: state.pageValue,\n  themeValue: state.themeValue,\n  // notificationStatusValue: state.notificationStatusValue,\n  themeBackgroudValue: state.themeBackgroudValue\n\n})\n\nconst mapDispatchToProps = {\n  saveNotificationStatus,\n  savePage,\n  saveTheme,\n  saveThemeBackgroud,\n  saveLanguage,\n  rxnavClose,\n  rxnavToggle,\n  netaloginAction,\n  netalogoutAction,\n  setComp,\n  netaUpdateProfileAction\n}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","import fetch from 'isomorphic-fetch'\nimport { connect } from 'react-redux'\n\nimport * as Jsx from './index.jsx'\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\n\nconst { rxsetLocal, rxgetLocal } = global.rootRequire('classes/request')\nconst { setComp, rxnavToggle, rxnavClose, netaloginAction } = global.rootRequire('redux')\nconst dHeaders = { 'Accept': 'application/json', 'Content-Type': 'application/json; charset=utf-8' }\n\nclass Component_ extends RxComponent {\n  constructor (props, context) {\n    super(props, context, Jsx)\n    this.keyClickFunction = this.keyClickFunction.bind(this);\n    this.token = ''\n    this.tokenLogin = ''\n    this.state = global.rootContext(this.props.staticContext) || {\n      flagStep: 0,\n      flagLoginPhone: 0,\n      inputPhone: '',\n      inputPhoneOTP: '',\n      errMess: '',\n      countryCode: '84',\n      listCountryCode: []\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener(\"keydown\", this.keyClickFunction, false);   \n    this.fetchSession()\n    this.checkAuth()\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyClickFunction, false);\n  }\n\n  fetchCountryCode(){    \n    fetch(global.rxu.config.base_api_neta + '/api/v1/list_country_code', {\n      method: 'GET',\n      headers: dHeaders })\n    .then((res) => {        \n      return res.json() })\n    .then((jsonData) => {\n      this.setState({listCountryCode: jsonData.list_country_code || []})          \n    }).catch(er => console.log(er))\n  }\n\n  changeCountryCode(value) {    \n    let countryCode = value\n    this.setState({\n      countryCode: countryCode\n    });\n  }\n\n  checkAuth () {\n    if (global.rxu.get(this.props, 'netaauth.user.id')) {\n      this.props.setComp('chat') \n    } else {\n      this.fetchCountryCode()\n    }\n  }\n\n  keyClickFunction(event){\n    if(event.keyCode === 13) {\n      if (this.state.flagStep === 0) {\n        this.onClickLoginViaOTP ()\n      }\n      else if (this.state.flagStep === 1) {\n        this.onClickLoginViaOTPConfirm ()\n      }\n    }\n  }\n\n  onClickLoginViaOTP () {\n    let phoneNumber = this.state.inputPhone\n    let prefixesFlag = false\n    phoneNumber = phoneNumber.replace(\"+\", \"\")\n    let prefixes = [\"0084\", \"084\", \"84\", \"0\"]\n    for (let iChar in prefixes) {\n      let jChar = prefixes.length - iChar\n      let phoneSub = phoneNumber.substring(0, jChar)\n      if (phoneSub === prefixes[iChar]) {\n        phoneNumber = phoneNumber.replace(prefixes[iChar], \"+84\")\n        prefixesFlag = true\n        break\n      }\n    }\n\n    if(!prefixesFlag){\n      phoneNumber = '+' + this.state.countryCode + this.state.inputPhone \n    }\n\n    if (isNaN(phoneNumber)){\n      this.setState({errMess: 'Số điện thoại phải là số '})\n      setTimeout(() => { this.setState({ errMess: ''}) }, 3000)\n    } else {      \n      if (this.token) {\n        let params = { 'phone': phoneNumber }\n        let headers = { 'TC-Token': this.token, ...dHeaders }\n        fetch(global.rxu.config.base_api_neta + '/api/users/login_by_otp.json', {\n          method: 'POST',\n          body: JSON.stringify(params),\n          headers: headers \n        })\n        .then((res) => { return res.json() })\n        .then((json) => {\n          if ((!json.Code || json.Code === 200) && json.token) {\n            this.tokenLogin = json.token\n            this.setState({ flagStep: 1 })\n          } else{\n            this.setState({errMess:'Số điện thoại không tồn tại'})\n            setTimeout(() => { this.setState({ errMess: ''}) }, 3000)\n          }\n        })\n        .catch(er => console.log(er))\n      } else {\n        this.setState({errMess:'Lỗi kết nối '})\n        setTimeout(() => { this.setState({ errMess: ''}) }, 3000)\n      }\n    }\n  }\n\n  onClickLoginViaOTPConfirm () {\n    if (this.state.flagStep === 1) {\n      let phoneNumberOTP = this.state.inputPhoneOTP \n      if (isNaN(phoneNumberOTP)) {        \n       this.setState({errMess:'OTP phải là số '})\n        setTimeout(function() {\n          this.setState({ errMess: ''});\n        }.bind(this), 3000);\n      }else{\n        let params = { 'otp': this.state.inputPhoneOTP }\n        let headers = { 'TC-Login-Key': this.tokenLogin, ...dHeaders }\n        fetch(global.rxu.config.base_api_neta + '/api/users/confirm_login_by_otp.json', {\n          method: 'POST',\n          body: JSON.stringify(params),\n          headers: headers }).then((res) => { return res.json() })\n          .then((json) => {\n            let token = json.Data.token || ''\n            if (token) {\n              this.helpGetUserinfoAndLogin(token, (jsonb) => {\n                this.props.netaloginAction({ token: token, name: jsonb.full_name, id: jsonb.Id, phone: jsonb.phone })\n                this.props.setComp('chat')\n              }, () => { this.setState({ inputPhoneOTP: '' }) })\n            } else {\n              this.setState({\n                inputPhoneOTP: '',\n              })\n            }\n\n          }).catch(er => {\n            console.log(er)\n            this.setState({errMess:'OTP sai'})        \n            setTimeout(function() {\n              this.setState({ errMess: ''});\n            }.bind(this), 3000);\n          }) \n      }\n      \n    }\n  }\n\n  helpGetUserinfoAndLogin (token, callback, callbackFailed) {\n    fetch(global.rxu.config.base_api_neta + '/api/session.json', {\n      method: 'GET',\n      headers: { 'TC-Token': token, ...dHeaders }\n    }).then(r => r.json()).then((json) => {\n      if (json.user_id) {\n        fetch(global.rxu.config.base_api_neta + '/api/users/' + json.user_id, {\n          method: 'GET',\n          headers: { 'TC-Token': token, ...dHeaders }\n        }).then(r => r.json()).then((jsonb) => {\n          if (jsonb && jsonb.Id) {\n            callback(jsonb)\n          }\n        })\n      }\n    })\n  }\n\n  updateInput (inputName, e) {\n    let state = {}\n    state[inputName] = e.target.value\n    this.setState(state)  \n  }\n\n  fetchSession () {\n    let params = {\n      'application_id': global.rxu.config.application_id,\n      'auth_key': global.rxu.config.auth_key,\n      'nonce': global.rxu.config.nonce,\n      'signature': global.rxu.config.signature,\n      'timestamp': global.rxu.config.timestamp\n    }\n\n    fetch(global.rxu.config.base_api_neta + '/api/session.json', {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: dHeaders }).then((res) => { return res.json() })\n      .then((json) => {\n        if (!json.Code || json.Code === 200) {\n          this.token = json.token\n        }\n      }).catch(er => console.log(er))\n  }\n\n  render () {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  auth: state.auth,\n  favorite: state.favorite,\n  netaauth: state.netaauth\n})\n\nconst mapDispatchToProps = {\n  rxnavClose,\n  rxnavToggle,\n  netaloginAction,\n  setComp\n}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","import { connect } from 'react-redux'\n\nimport * as Jsx from './index.jsx'\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\n\nconst { apiget } = global.rootRequire('classes/request')\n\nclass Component_ extends RxComponent {\n  constructor (props, context) {\n    super(props, context, Jsx)\n    this.state = global.rootContext(this.props.staticContext) || {}\n  }\n\n  render () {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({})\n\nconst mapDispatchToProps = {}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","import { connect } from 'react-redux'\n\nimport * as Jsx from './index.jsx'\n\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\n\nconst { rxnavToggle, rxnavClose, netaCallHistoryUpdate } = global.rootRequire('redux')\n\nclass Component_ extends RxComponent {\n    constructor(props, context) {\n        super(props, context, Jsx)\n\n    }\n \n\n    onClickAnswerCall() {\n        this.props.onClickAnswerCall()\n    }\n    onClickStopCall() {\n        this.props.stopCall()\n    }\n    render() {\n        return this.renderComponent();\n    }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    langValue:state.langValue,\n    auth: state.auth,\n    favorite: state.favorite,\n    netaauth: state.netaauth,\n    netaCallHistory: state.netaCallHistory,\n    user: state.user\n})\n\nconst mapDispatchToProps = {\n    rxnavClose,\n    rxnavToggle,\n    netaCallHistoryUpdate\n}\n\nconst ComponentWrapped = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","/*eslint-disable no-undef*/\nimport { connect } from 'react-redux'\n\nimport * as Jsx from './index.jsx'\n\n/*global translate*/\n\n// const stickerData = global.rootRequire('classes/stickerData.json');\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\nconst { rxgetLocal } = global.rootRequire('classes/request')\nconst { secondToTime, rxaget, formatBytes,rxChangeSlug,subString} = global.rootRequire('classes/ulti')\nconst {chooseGroupAction, netaMessAdd,updateRecentContactGroups,netaMediaOneAdd } = global.rootRequire('redux')\nconst rxio = global.rootRequire('classes/socket').default\nconst { checkBlock, checkIsOwner, checkNameUser } = global.rootRequire('classes/chat')\nlet zget = global.rxu.get\n\nclass Component_ extends RxComponent {\n  constructor(props, context) {\n    super(props, context, Jsx)\n    this.state = global.rootContext(this.props.staticContext) || {\n       stickerFolderName: [],\n       arrTabsChar:[':',':)',':(',':P',':D',':O',';)','B-)','B|','>:(',':/',\":'(\",'O:)',':*','3:)','^_^','-_-','o.O','>:O','(y)'],\n       displayTagNameBox:false,\n       //displayEmojiBox:false,\n       group: rxaget(this.props, 'rxgroup.group', {}),\n       group_id: rxaget(this.props, 'rxgroup.groupid', ''),\n       groupsTemp:[],\n       groupsTagName:[],\n       typing:false,\n       sender_typing:'',\n       tagNameDisplay:{},\n       tagNameSelect:'',\n       tagNameSelectNum:0,\n       tagNameSelect_isFirstTime:true,\n       canceRecoreStatus:false,\n       status:true,\n       isBlocked: false\n    }\n    // let tmp_stickerFolderName = rxgetLocal('netaStickerFolder')\n    // if(tmp_stickerFolderName){      \n    //   tmp_stickerFolderName = JSON.parse(tmp_stickerFolderName)\n    //   this.state.stickerFolderName = tmp_stickerFolderName  \n    // }\n    this.users = rxaget(this.props, 'user.users', {})\n    this.keyClickFunction = this.keyClickFunction.bind(this);\n    this.mouseClickFunction = this.mouseClickFunction.bind(this);\n    this.state.tabmore = rxaget(this.props, 'tabmore', false)\n    this.state.groups = rxaget(this.props, 'groups', []) || {}\n    this.state.uids = rxaget(this.props, 'user.ids', []) || []\n    this.state.users = rxaget(this.props, 'user.users', {}) || {}\n    this.state.mess = ''\n\n    this.state.imageTmp = {}\n\n    this.state.mess_selected = {}\n\n    this.blockEnter = false\n\n    this.state.me_typing = false\n    this.state.type_option = 0 \n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.onClickBlockContact = this.onClickBlockContact.bind(this)\n    // window.onbeforeunload = function() {        \n    //   this.clearMessBox()\n    //   return undefined;\n    // }.bind(this);        \n  }\n\n  componentDidMount() {\n    this.loadDidMount()\n    let isBlocked = checkBlock(this.state.group, this.userid)\n    if (isBlocked !== this.state.isBlocked) {\n      this.setState({ isBlocked })\n    }\n    let stickerFolderName = []\n    let stickerData = global.rxu.json(rxgetLocal('rxsticker'), {})\n    if (stickerData && stickerData.stickerData) {\n      stickerData.stickerData.forEach(o => {\n        if (o.type && o.type !== 'history' && o.type !== 'EmojiIcon') {\n          stickerFolderName.push(o.type)\n        }\n      })  \n    }\n    this.setState({stickerFolderName: stickerFolderName})\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyClickFunction, false);\n    document.removeEventListener(\"click\", this.mouseClickFunction, false);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) { \n    \n    if (nextProps.group_id && nextProps.group_id !== this.state.group_id) {\n      const chatDiv = document.getElementById('zmess-box')\n      let objState = {}\n      if (chatDiv) {\n        chatDiv.innerHTML = ''\n        objState = { \n          mess: chatDiv.innerHTML,\n          displayTagNameBox:false,\n          group: nextProps.rxgroup.group,\n          tagNameDisplay : {}\n        }\n      }\n\n      objState['group_id'] = nextProps.group_id\n      objState['typing'] = false\n      objState['canceRecoreStatus'] = true\n\n      this.setState(objState)\n    }\n\n    if (nextProps.rxgroup && nextProps.rxgroup.group) {\n      let isBlocked = checkBlock(nextProps.rxgroup.group, this.userid)\n      if (isBlocked !== this.state.isBlocked) {\n        this.setState({ isBlocked })\n      }\n    }\n    let group = this.state.group\n    if(typeof group !== 'undefined'){\n      if(nextProps.group_id !== this.state.group.group_id){\n        /*let myDiv = document.getElementById(\"tagName_List_id\");\n        myDiv.scrollTop = 0;\n        this.setState({tagNameSelect:'',tagNameSelectNum:0,tagNameSelect_isFirstTime:true})*/\n        this.resetTagname()\n      } \n    }\n\n    if(this.props.mess_selected.message_id){\n      if (this.props.mess_selected.message_id !== nextProps.mess_selected.message_id && this.state.type_option !== 0) {\n        this.closeReplyMessage()\n      }      \n    }\n    if (( nextProps.rxgroup && nextProps.rxgroup.group && nextProps.rxgroup.group.occupants_uins) || (nextProps.user.users && this.state.users && (Object.keys(nextProps.user.users).length !== Object.keys(this.state.users).length))) {\n      let groupId = (nextProps.rxgroup && nextProps.rxgroup.group && nextProps.rxgroup.group.occupants_uins)\n      let users = JSON.parse(JSON.stringify((nextProps.user && nextProps.user.users) || this.state.users))\n\n      this.setState({  users })\n      this.getGroupTagName(groupId, users, [])\n    }\n    if( this.state.tabmore !== nextProps.tabmore){\n      let tabmore = nextProps.tabmore\n      this.setState({tabmore :tabmore})\n    }\n    if (nextProps && nextProps.mess_selected && nextProps.mess_selected.message_id) {\n      this.setState({ mess_selected: nextProps.mess_selected, type_option: nextProps.type_option }, () => {\n        try {\n          const chatDivFoward = document.getElementById('zmess-box')\n          chatDivFoward.focus()\n          chatDivFowardd.select()\n        } catch(e5) {}\n      })\n    }\n    if (nextProps.type_option === 0) {\n      this.setState({ mess_selected: {}, type_option: 0 })\n    }\n    if (this.state.group) {  \n      let groupObj = this.state.group || {}\n      if (typeof(groupObj.group_id) === 'undefined') {\n        groupObj = rxaget(this.props, 'rxgroup.group', {})\n      }    \n      if (groupObj.group_id !== nextProps.group_id) {\n        const chatDiv = document.getElementById('zmess-box')\n        if (chatDiv) {\n          chatDiv.innerHTML = ''\n          this.setState({ \n            mess: chatDiv.innerHTML,\n            displayTagNameBox:false,\n            group: nextProps.rxgroup.group,\n            tagNameDisplay : {}\n          })\n        }   \n      }\n    }\n  }\n\n  onClickBlockContact() {\n    const group = JSON.parse(JSON.stringify(this.state.group))\n    let that = this\n    let isBlocked = this.state.isBlocked\n    if([1,3].indexOf(isBlocked) !== -1){      \n      rxio.unblockUser({ group_id: group.group_id, uni: group.partner_id}, () => {\n        let blocked_uins = group.blocked_uins\n\n        for(let i = 0; i < blocked_uins.length; i++){\n          if(blocked_uins[i] === group.partner_id){\n            blocked_uins.splice(i,1)\n          }else{\n            console.log(blocked_uins[i] , group.partner_id,'cai gi day')\n          }\n        }\n        group.blocked_uins = blocked_uins\n        that.props.chooseGroupAction(group)\n      })\n    }\n    if([0,2].indexOf(isBlocked) !== -1 ){\n      rxio.blockUser({ group_id: group.group_id, uni: group.partner_id}, () => {        \n        let blocked_uins = group.blocked_uins\n\n        blocked_uins.push(group.partner_id)\n        group.blocked_uins = blocked_uins\n        that.props.chooseGroupAction(group)\n      })\n    }\n\n    this.setState({ displayAskBlock: false })\n  }\n  // onClickBlockContact() {\n  //   const group = JSON.parse(JSON.stringify(this.state.group))\n  //   let that = this, type = (this.state.isBlocked ? \"unblock_user\" : \"block_user\")\n  //   rxio.blockUser({ group_id: group.group_id, uni: group.partner_id, type: type }, () => {\n  //     group.blocked_uins = type === \"unblock_user\" ? [] : [group.partner_id]\n  //     that.props.chooseGroupAction(group)\n  //   })\n  //   this.setState({ displayAskBlock: false })\n  // }\n  clearMessBox(){\n    const chatDiv = document.getElementById('zmess-box')\n    chatDiv.innerHTML=''\n  }\n\n  removeTags(str) { \n    if ((str===null) || (str==='')) {\n      return false\n    } else {\n      str = str.toString()\n    }\n        \n    if(str.indexOf('\\\\')){\n      str = str.replace(/\\\\/g, '')\n    }\n    return str.replace( /(<([^>]+)>)/ig, '')\n  } \n\n  loadHandleSocket() {\n    rxio.getWaitConnect((data) => {\n      if (data) {\n        rxio.getWaitEvent((data) => {\n          this.handleEvent(data)\n          this.props.handleMessage(data)\n        })\n        rxio.getWaitMessage((data) => {\n          this.props.handleMessage(data, true)\n        })\n        rxio.getWaitMessDel((data) => {\n          this.props.handleMessage(data, false)\n        })\n      } else {\n        setTimeout(() => {\n          this.loadHandleSocket()  \n        }, 300)\n      }\n    }) \n  }\n\n  loadDidMount() {\n    document.addEventListener(\"keydown\", this.keyClickFunction, false);   \n    document.addEventListener(\"click\", this.mouseClickFunction, false); \n\n    let groupId = rxaget(this.state, 'group.occupants_uins', [])\n    let groups = this.users\n    let groupsTemp = []\n    this.getGroupTagName(groupId , groups , groupsTemp)\n\n    if (this.token && this.userid) {\n      if (!rxio.connected && !rxio.init_connected) {\n        rxio.login(this.token, this.userid, (data) => {\n          rxio.getWaitEvent((data) => {\n            this.handleEvent(data)\n          })\n          rxio.getWaitMessage((data) => {\n            this.props.handleMessage(data, true)\n          })\n          rxio.getWaitMessDel((data) => {\n            this.props.handleMessage(data, false)\n          })\n        })\n      } else {\n        this.loadHandleSocket()\n        /*  rxio.getWaitEvent((data) => {\n          this.props.handleMessage(data)\n        })\n        rxio.getWaitMessage((data) => {\n          this.props.handleMessage(data, true)\n        })\n        rxio.getWaitMessDel((data) => {\n          this.props.handleMessage(data, false)\n        })*/\n      }\n    }\n    this.setState.messReply = this.props.messReply\n  }\n\n  getGroupTagName(groupId = [], groups, groupsTemp) {\n        \n    for (const useridkey of Object.keys(groups)) {\n      for (let i = 0; i < groupId.length; i++){\n        if(groupId[i] === String(groups[(useridkey)].id)){\n          if(groupId[i] !== String(this.userid)){\n            groupsTemp.push(groups[(useridkey)])    \n          } \n      \n        }              \n      }\n    }\n    this.setState({\n      groupsTemp:groupsTemp,\n      groupsTagName:groupsTemp,\n    }) \n  }\n\n  pasteEventFunction= (e) =>{    \n    let paste = (e.clipboardData || window.clipboardData).getData('text');\n\n    const chatDiv = document.getElementById('zmess-box')    \n    if (chatDiv) {\n      chatDiv.innerHTML += paste \n\n      this.setState({ \n        mess: chatDiv.innerHTML,\n       })\n    }\n    e.preventDefault();    \n    this.setCursor(e.currentTarget.textContent.length)\n  }\n\n  keyClickFunction(event){\n    if(event.keyCode === 27) {\n      this.closeReplyMessage()\n    }\n   \n    if(event.keyCode === 38) {\n      if(this.state.displayTagNameBox===true){  \n        event.preventDefault()\n        let groupsTemp = this.state.groupsTemp\n        let num = this.state.tagNameSelectNum \n        let tagNameSelect \n        let myDiv = document.getElementById(\"tagName_List_id\");\n\n        if(num > 0){\n          num --         \n          myDiv.scrollTop = num*40 - (7*40 - 38)  \n        }else{\n          num = groupsTemp.length-1\n          myDiv.scrollTop = myDiv.scrollHeight\n        }        \n        tagNameSelect = groupsTemp[num]\n        this.setState({tagNameSelect:tagNameSelect,tagNameSelectNum:num, tagNameSelect_isFirstTime:false})\n      }      \n    } \n\n    if(event.keyCode === 40) {\n      //key down press\n      if(this.state.displayTagNameBox===true){   \n        event.preventDefault()\n        let groupsTemp = this.state.groupsTemp\n        let num = this.state.tagNameSelectNum \n        let tagNameSelect           \n        let myDiv = document.getElementById(\"tagName_List_id\");\n\n        if(this.state.tagNameSelect_isFirstTime)\n        {\n          \n          tagNameSelect = groupsTemp[0] \n        }else{\n          if(num < groupsTemp.length-1){   \n            num ++ \n            if(num >= 7 ){              \n              myDiv.scrollTop = num*40 - (7*40 - 38 );   \n            }else{\n              myDiv.scrollTop = 0;  \n            }    \n\n          }else{\n            num = 0\n            myDiv.scrollTop = 0;//myDiv.scrollHeight;\n          }\n          tagNameSelect = groupsTemp[num]     \n        } \n        this.setState({tagNameSelect:tagNameSelect,tagNameSelectNum:num, tagNameSelect_isFirstTime:false})\n      }       \n    } \n  }\n\n  mouseClickFunction(event){\n    const menuDiv = document.getElementById('menu-message')\n    // const groupPopup = document.getElementById('popup-group')\n    if (menuDiv && event.target !== menuDiv && menuDiv.style.display === 'block') {\n      menuDiv.style.display = 'none'\n    }\n  \n    if(this.state.displayTagNameBox){\n      this.setState({displayTagNameBox:false})  \n    }\n\n    if (event.srcElement.className !== 'menu-option-footer') {\n      const menuDiv = document.getElementById('menu-footer')\n      if (menuDiv) {\n        menuDiv.style.display = 'none'\n      }\n    }    \n  }\n\n  closeReplyMessage() {\n    this.setState({ mess_selected: {}, type_option: 0 })\n    this.props.resetSelectedMess()\n  }\n\n  closeImageFooterLoader() {\n    this.setState({ imageTmp: {}, mess: '' })\n  }\n\n  closePopupGroup() {\n    this.setState({ popupGroup: false })\n  }\n\n  chooseGroupForward(group) {\n    this.setState({ popupGroup: false, type_option: 2 }, () => {\n      this.chooseGroup(group)\n    })\n  }\n\n  chooseOption(e, type) {\n    let option = 0\n    let popupGroup = false\n    if (type === 'reply') {\n      option = 1\n    } else if (type === 'delete_all') {\n      this.deleteMessage(true)\n    } else if (type === 'delete_one') {\n      this.deleteMessage(false)\n    } else if (type === 'copy') {\n      this.copyTextToClipboard(rxaget(this.state, 'mess_selected.message', ''))\n    } else if (type === 'forward') {\n      popupGroup = true\n    }\n    this.setState({ type_option: option, popupGroup: popupGroup })\n  }\n\n  copyTextToClipboard(text) {\n    let textArea = document.createElement('textarea')\n    textArea.style.position = 'fixed'\n    textArea.style.top = 0\n    textArea.style.left = 0\n    textArea.style.width = '2px'\n    textArea.style.height = '2px'\n    textArea.style.padding = 0\n    textArea.style.border = 'none'\n    textArea.style.outline = 'none'\n    textArea.style.boxShadow = 'none'\n    textArea.style.background = 'transparent'\n    textArea.value = text.replace(/[\\t\\r\\n]/g, '')\n    document.body.appendChild(textArea)\n    textArea.focus()\n    textArea.select()\n\n    try {\n      document.execCommand('copy')\n    } catch (err) {\n      console.log('Oops, unable to copy')\n    }\n\n    document.body.removeChild(textArea)\n  }\n\n  checkTypeDelMess() {\n    let result = 0\n    if (rxaget(this.state, 'mess_selected.sender_uin', '').toString() === this.userid.toString()) {\n      result = 1\n    }\n    if (rxaget(this.state, 'mess_selected.status', 0) === 4) {\n      result = 2\n    }\n    if (rxaget(this.state, 'mess_selected.deleted_uins', []).indexOf(this.userid.toString()) !== -1) {\n      result = 2\n    }\n    if (rxaget(this.state, 'mess_selected.message', '') !== '') {\n      result = 3\n    }\n\n    return result\n  }\n\n  handleEvent(data) {\n    if (data && data.type === 9) {\n      const sender = this.state.users[data.sender_uin]\n      if ((data.group_id === this.state.group_id) && sender) {\n        let sender_name = checkNameUser(sender)\n        this.setState({ typing: true, sender_typing: sender_name })\n      }else{\n        this.setState({ typing: false })\n      }\n    }\n    if (data && data.type === 10) {\n      this.setState({ typing: false })\n      /* if ((data.group_id === this.state.group_id)) {\n        this.setState({ typing: false })\n      }*/\n    }\n  }\n\n  clickRecord(isClick){    \n    if(isClick && this.state.canceRecoreStatus === true){\n      this.setState({\n         canceRecoreStatus: false\n      })\n    }\n  }\n\n  uploadFile(arrImg, type) {\n    const arrUsers = this.state.users\n    const group_id = this.props.group_id\n    const user = rxaget(this.props, 'netaauth.user', {})\n    const objUser = arrUsers[user.id.toString()]\n    let msg = {}\n    if (type === 'image') {\n      if (arrImg && arrImg.constructor === Array && arrImg.length > 0) {\n        msg = {\n          group_id: Number(group_id),\n          type: 2,\n          version: 1,\n          nonce: (Math.floor(Date.now()) * 1000).toString(),\n          sender_name: rxaget(objUser, 'full_name', ''),\n          attachments: JSON.stringify({ images: arrImg }).replace(/\"/g, '\\\\\"')\n        }\n      }\n    }\n    if (type === 'video') {\n      if (arrImg && arrImg.constructor === Array && arrImg.length > 0) {\n        msg = {\n          group_id: Number(group_id),\n          type: 4,\n          version: 1,\n          nonce: (Math.floor(Date.now()) * 1000).toString(),\n          sender_name: rxaget(objUser, 'full_name', ''),\n          attachments: JSON.stringify({ video: arrImg[0] }).replace(/\"/g, '\\\\\"')\n        }\n      }\n    }\n    if (type === 'file') {\n      if (arrImg && arrImg.constructor === Array && arrImg.length > 0) {\n        msg = {\n          group_id: Number(group_id),\n          type: 12,\n          version: 1,\n          nonce: (Math.floor(Date.now()) * 1000).toString(),\n          sender_name: rxaget(objUser, 'full_name', ''),\n          attachments: JSON.stringify({ file: arrImg[0] }).replace(/\"/g, '\\\\\"')\n        }\n      }\n    }\n    if (type === 'audio') {\n      if (arrImg && arrImg.constructor === Array && arrImg.length > 0 && this.state.canceRecoreStatus === false) {\n        msg = {\n          group_id: Number(group_id),\n          type: 3,\n          version: 1,\n          nonce: (Math.floor(Date.now()) * 1000).toString(),\n          sender_name: rxaget(objUser, 'full_name', ''),\n          attachments: JSON.stringify({ audio: arrImg[0] }).replace(/\"/g, '\\\\\"')\n        }\n      }\n    }\n    if (msg && msg.group_id) {\n      if (rxio.connected) {\n        rxio.socket.emit('create_message', msg, (data) => {\n          if (data && data.message) {\n            this.blockEnter = false\n            try {\n              let objMedia = {\n                group_id: Number(group_id),\n                media_type: msg.type,\n                message_id: Number(data.message.message_id),\n                msg_create_at: Number(data.message.created_at),\n                url: rxaget(arrImg, '0.url', '')\n              }\n              if (type === 'file') {\n                objMedia['name'] = rxaget(arrImg, '0.file_name', '')\n                objMedia['ext'] = rxaget(arrImg, '0.file_extension', '')\n              }\n              if (type === 'video') {\n                objMedia['thumbnail_url'] = ''\n              }\n              this.props.netaMediaOneAdd(Number(group_id), objMedia)\n            } catch(e) {\n              console.log(e)\n            }\n\n            this.props.handleMessage(data.message, true)\n          }\n        })  \n      }\n      \n    }\n  }\n\n  parseMessage(objmsg, type) {\n    let message = ''\n    let attachments = {}\n    const userid = rxaget(this.props, 'netaauth.user.id', '').toString()\n    const blobs = rxaget(this.props, 'netaBlobs.data', {})\n    const created_at = Math.floor(Date.now() / 1000)\n    if (objmsg) {\n      if (!isNaN(objmsg.type)) {\n        try {\n          attachments = JSON.parse(rxaget(objmsg, 'attachments', '').replace(/[\\t\\r\\n]/g, ''))\n        } catch (e) {\n          if (typeof (rxaget(objmsg, 'attachments', '')) === 'object') {\n            attachments = rxaget(objmsg, 'attachments', '')\n          }\n        }\n        if (objmsg.status !== 4) {\n          if (objmsg.deleted_uins && objmsg.deleted_uins.constructor === Array && objmsg.deleted_uins.length > 0 && objmsg.deleted_uins.indexOf(userid) !== -1) {\n            message = ''\n          } else {\n            let mess =''\n            switch (objmsg.type) {\n              case 1:\n                let call_name = ''\n                let icon_call_name = ''\n                if (attachments.media_type === 1) {\n                  call_name = translate('Voice call')\n                  icon_call_name = 'icon-phone'\n                } else if (attachments.media_type === 2) {\n                  call_name = translate('Video call')\n                  icon_call_name = 'icon-camrecorder'\n                }\n\n                let iconcall = ''\n                let stylecall = ''\n                if (rxaget(attachments, 'caller_uin', '') === this.userid.toString()) {\n                  iconcall = 'icon-call-out'\n                  if (zget(this.props, 'themeValue')==='blueColor'){\n                    stylecall = '#ebf8ff'  \n                  }else{\n                    stylecall = '#fde4d8'  \n                  }\n                  \n                } else {\n                  iconcall = 'icon-call-in'\n                  if (zget(this.props, 'themeValue')==='blueColor'){\n                    stylecall = '#ebf8ff'  \n                  }else{\n                    stylecall = '#fdf2ea'\n                  }\n                  \n                }\n\n                message = `<div class='zchat-callmess' style='background: ${stylecall};'>\n                  <div class='zchat-callname'>${call_name}</div>`\n\n                if (attachments.accepted_at === '0') {\n                  message += `<div class='zchat-calltime' style=\"color:#d5192d;\"><i class='${iconcall}'></i>${translate('Canceled')}</div>`\n                } else {\n                  const time = Number(rxaget(attachments, 'stopped_at', 0)) - Number(rxaget(attachments, 'accepted_at', 0))\n                  message += `<div class='zchat-calltime'><i class='${iconcall}' style=\"color:#2fb13e;\"></i>${secondToTime(time)}</div>`\n                }\n\n                message += `<span class='zchat-callicon'><i class='${icon_call_name}'></i></span></div>`\n\n                if (type === 'desc') {\n                  mess =  translate(' finished')\n                  message = call_name + mess\n                }\n\n                break\n              case 2:\n                try {\n                  if (attachments && attachments.images && attachments.images.constructor === Array && attachments.images.length > 0) {\n                    let arrurlimgs = rxaget(attachments, 'images', []).map(o => o.url)\n                    let strurlimgs = (arrurlimgs && arrurlimgs.constructor === Array && arrurlimgs.length > 0) ? arrurlimgs.join(',') : ''\n                    message = '<div class=\"img-message-row \">'\n                    let indeximg = 0\n                    for (const img of attachments.images) {\n                      message += `<img src='${global.rxu.config.get_static + img.url}' alt='' class='img-message' onclick=window.showGallery('${strurlimgs}','${indeximg}') />`\n                      indeximg += 1\n                    }\n                    message += '</div>'\n                    if (type === 'desc') {\n                      message = translate('Image')\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                /* try {\n                  if (attachments && attachments.images && attachments.images.constructor === Array && attachments.images.length > 0) {\n                    let arrurlimgs = rxaget(attachments, 'images', []).map(o => o.url)\n                    let strurlimgs = (arrurlimgs && arrurlimgs.constructor === Array && arrurlimgs.length > 0) ? arrurlimgs.join(',') : ''\n\n                    message = '<div class=\"img-message-row\">'\n                    let indeximg = 0\n                    for (const img of attachments.images) {\n                      if (img && img.url) {\n                        const src = global.rxu.config.get_blobs + '/' + img.url\n                        const url_img = img.url || ''\n                        if (blobs && blobs[url_img] && blobs[url_img]['created_at'] && (created_at - blobs[url_img]['created_at']) <= 43200) {\n                          message += `<img src='${blobs[url_img]['link']}' alt='sticker' class='img-message' onclick=window.showGallery(\"${strurlimgs}\",\"${indeximg}\") />`\n                        } else {\n                          this.fetchImage(src, (data) => {\n                            if (data) {\n                              const images = document.getElementsByClassName('img-message')\n                              if (images && images.length > 0) {\n                                for (let i = 0; i < images.length; i++) {\n                                  const valueAttr = images[i].getAttribute('data-id')\n                                  const eleid = 'message' + img.url\n                                  if (eleid === valueAttr) {\n                                    images[i].src = data\n                                  }\n                                }\n                              }\n                            }\n                          })\n                          message += `<img src='./images/default/static/no-image.jpg' data-id='${'message' + img.url}' alt='sticker' class='img-message' onclick=window.showGallery(\"${strurlimgs}\",\"${indeximg}\") />`\n\n                        }\n                      }\n                      indeximg += 1\n                    }\n                    message += '</div>'\n\n                    if (type === 'desc') {\n                      message = translate('Image')\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }*/\n                break\n              case 3:\n                const url = rxaget(attachments, 'audio.url', '')\n                const src = global.rxu.config.get_blobs + '/' + url\n                message = `<div class='zchat-audiomess'>`\n\n                  message += `\n                  <div class='zchat-audioicon' onclick=window.playAudio('icon-audio-${rxaget(objmsg, 'message_id', '').toString()}')>\n                    <img class='filter_img_class' id='icon-audio-${rxaget(objmsg, 'message_id', '').toString()}'  src='./images/default/static/icon-media-play.svg'/>\n                  </div>\n                  `\n                message += `\n\n                  <div class='zchat-audiobar'>\n                    <div class='zchat-audioprocess' id='process-audio-${rxaget(objmsg, 'message_id', '').toString()}'>\n                    </div>\n                  </div>\n                  <div class='zchat-audiotime'>\n                    ${secondToTime(rxaget(attachments, 'audio.duration', 0))}\n                  </div>\n                `\n\n                if (blobs && blobs[url] && blobs[url]['created_at'] && (created_at - blobs[url]['created_at']) <= 43200) {\n                  message += `\n                    <audio id='${'audio-' + objmsg.message_id}'>\n                      <source id='${'audio' + url}' src='${blobs[url]['link']}' />\n                    </audio>\n                  `\n                } else {\n                  this.fetchImage(src, (data) => {\n                    if (data) {\n                      const eleaudio = document.getElementById('audio' + url)\n                      const eleLoadAudio = document.getElementById('audio' + objmsg.message_id)\n                      if (eleaudio && eleLoadAudio) {\n                        eleaudio.src = data\n                        eleLoadAudio.load()\n                      }\n                    }\n                  })\n                  message += `\n                    <audio id='${'audio' + objmsg.message_id}' >\n                      <source id='${'audio' + url}' src='' />\n                    </audio>\n                  `\n                }\n\n\n                message += `</div>`\n\n                if (type === 'desc') {\n                  message = 'Audio'\n                }\n                break\n              case 4:\n                try {\n                  if (attachments && attachments.video && attachments.video.url) {\n                    const url = attachments.video.url\n                    const src = global.rxu.config.get_blobs + '/' + url\n                    message = '<div class=\"img-message-row\">'\n                    if (blobs && blobs[url] && blobs[url]['created_at'] && (created_at - blobs[url]['created_at']) <= 43200) {\n                      message += `\n                        <video id='${'video' + objmsg.message_id}' width='320' controls='controls' preload='metadata'>\n                          <source id='${'video' + url}' src='${blobs[url]['link']}' />\n                          Your browser does not support HTML5 video.\n                        </video>\n                      `\n                    } else {\n                      this.fetchImage(src, (data) => {\n                        if (data) {\n                          const elevideo = document.getElementById('video' + url)\n                          const eleLoadVideo = document.getElementById('video' + objmsg.message_id)\n                          if (elevideo) {\n                            elevideo.src = data\n                            eleLoadVideo.load()\n                          }\n                        }\n                      })\n                      message += `\n                        <video id='${'video' + objmsg.message_id}' width='320' controls='controls' preload='metadata'>\n                          <source id='${'video' + url}' src=\"./images/default/static/no-image.jpg\" />\n                          Your browser does not support HTML5 video.\n                        </video>\n                      `\n                    }\n\n                    message += '</div>'\n\n                    if (type === 'desc') {\n                      message = 'Video'\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                break\n              case 5:\n                mess = translate(' created a group')\n                message = checkNameUser(rxaget(this.users, objmsg.sender_uin, {})) + mess\n                break\n              case 6:\n                const userins = []\n                try {\n                  if (attachments && attachments.type === 'update_group' && attachments.added_uins && attachments.added_uins.constructor === Array && attachments.added_uins.length > 0) {\n                    for (const uid of attachments.added_uins) {\n                      const uname = checkNameUser(rxaget(this.users, uid, {}))\n                      if (uname) {\n                        userins.push(uname)\n                      }\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                if (userins.length > 0) {\n                  mess = translate(' added ')\n                  message = checkNameUser(rxaget(this.users, objmsg.sender_uin, {})) + mess + userins.join(', ')\n                }\n                break\n              case 7:\n                mess = translate(' has left the group')\n                message = checkNameUser(rxaget(this.users,objmsg.sender_uin, {})) + mess\n                break\n              case 8:               \n                message = '<div class=\\'row-reply\\'>'\n                message += `<div class='sender-reply'> <img class='filter_img_class' alt='icon-reply' src='./images/default/icons/reply-icon.svg'> ${translate('Answer for')} ${checkNameUser(rxaget(this.users, attachments.sender_uin, {})) || ''} </div>`\n                \n                if (attachments.type === 8 || attachments.type === 9) {\n                  attachments.type = 0\n                }\n                const attachments_tmp = this.parseMessage(attachments)\n                if (attachments_tmp !== '') {\n                  if (attachments.type === 0) {\n                    if(checkIsOwner(objmsg, this.userid)){\n                      message += `\n                        <div class='message-reply'>\n                          <div></div>\n                          <div class='message-reply_content_right overflowText'>\n                            ${attachments_tmp}\n                          </div>\n                        </div>`                     \n                      }  else{\n                           message += `\n                            <div class='message-reply'>\n                              <div></div>\n                              <div class='message-reply_content overflowText'>\n                                ${attachments_tmp}\n                              </div>\n                            </div>`\n                    }\n\n                  } else {      \n                    let message_reply_content_class = ''\n                    let file_reply_content_class = ''\n                    if(attachments_tmp.indexOf('img-message-row')!== -1 || attachments_tmp.indexOf('zchat-filemess')!== -1 || attachments_tmp.indexOf('zchat-audiomess')!== -1){                      \n                      file_reply_content_class = ' file-reply_content'\n\n                    }\n                    if (checkIsOwner(objmsg, this.userid)) {\n                      message_reply_content_class = 'message-reply_content_right overflowText' + file_reply_content_class\n                    } else {\n                      message_reply_content_class = 'message-reply_content overflowText' + file_reply_content_class\n                    }\n\n                    message += `\n                        <div class='message-reply'>\n                          <div></div>\n                          <div class='${message_reply_content_class}'>\n                            ${attachments_tmp}\n                          </div>\n                        </div>`\n\n                  }\n                }else{\n                  if(checkIsOwner(objmsg, this.userid)){\n                  message += `\n                    <div class='message-reply'>\n                      <div></div>\n                      <div class='message-reply_content_right' >\n                        &nbsp;\n                      </div>\n                    </div>`\n                  }\n                  else{\n                  message += `\n                    <div class='message-reply'>\n                      <div></div>\n                      <div class='message-reply_content'>\n                        &nbsp;\n                      </div>\n                    </div>`\n                  }\n                }\n                message += '</div>'\n                if (this.userid.toString() === objmsg.sender_uin.toString()) {\n                  message += '<div class=\\'zmessage-reply-anwser my_message overflowText\\'>' + this.props.convertTagName(objmsg.message)+ '</div>' || ''\n                } else {\n                  if (objmsg.message.length === 0){\n                    message += '<div class=\\'zmessage-reply-anwser another_message\\'><div class=\\'another_message_box\\'>&#160</div></div>' || ''\n                  }\n                  else{\n                    message += '<div class=\\'zmessage-reply-anwser another_message\\'><div class=\\'another_message_box overflowText\\'>' +this.props.convertTagName(objmsg.message) + '</div></div>' || ''  \n                  }\n                  \n                }\n                if (type === 'desc') {\n                  message = objmsg.message\n                }\n                break\n              case 9:\n                let sender_name \n                let sender_name_mess =translate('You')\n\n                sender_name = checkIsOwner(attachments, this.userid) ? sender_name_mess : checkNameUser(rxaget(this.users,objmsg.sender_uin, {}))\n                                \n                message = '<div class=\\'row-reply\\'>'\n                message += `<div class='sender-reply'> <img class = 'filter_img_class' alt='icon-reply' src=\"./images/default/icons/forward-icon.svg\"/> ${sender_name || ''} ${translate('forwarded a message')} </div>`  \n                if (attachments.type === 8 || attachments.type === 9) {\n                  attachments.type = 0\n                }\n                const attachments_forward = this.parseMessage(attachments)\n                if (attachments_forward !== '') {\n                    let message_reply_content_class = ''\n                    let file_reply_content_class = ''\n                    if(attachments_forward.indexOf('img-message-row')!== -1 || attachments_forward.indexOf('zchat-filemess')!== -1 || attachments_forward.indexOf('zchat-audiomess')!== -1){                      \n                      file_reply_content_class = ' file-reply_content'\n\n                    }\n                    if (checkIsOwner(objmsg, this.userid)) {\n                      message_reply_content_class = 'message-reply_content_right overflowText' + file_reply_content_class\n                    } else {\n                      message_reply_content_class = 'message-reply_content overflowText' + file_reply_content_class\n                    }\n\n                    message += `\n                        <div class='message-reply'>\n                          <div></div>\n                          <div class='${message_reply_content_class}''>\n                            ${attachments_forward}\n                          </div>\n                        </div>`\n                }else{\n                  if(checkIsOwner(objmsg, this.userid)){\n                  message += `\n                    <div class='message-reply'>\n                      <div></div>\n                      <div class='message-reply_content_right' >\n                        &nbsp;\n                      </div>\n                    </div>`\n                  }\n                  else{\n                  message += `\n                    <div class='message-reply'>\n                      <div></div>\n                      <div class='message-reply_content'>\n                        &nbsp;\n                      </div>\n                    </div>`\n                  }\n                }\n\n                message += '</div>'\n                if (this.userid.toString() === objmsg.sender_uin.toString()) {\n                  if (objmsg.message) {\n                    message += '<div class=\\'zmessage-reply-anwser my_message overflowText\\'>'+this.props.convertTagName(objmsg.message)+ '</div>' || ''  \n                  } else {\n                    message += '<div class=\\'zmessage-reply-anwser overflowText\\'></div>' || ''\n                  }\n                } else {                 \n                  if (objmsg.message.length === 0){\n                    message += '<div class=\\'zmessage-reply-anwser another_message\\'><div class=\\'another_message_box\\'>&#160</div></div>' || ''\n                  }\n                  else{\n                    message += '<div class=\\'zmessage-reply-anwser another_message\\'><div class=\\'another_message_box overflowText\\'>' + this.props.convertTagName(objmsg.message) + '</div></div>' || ''  \n                  }\n                }\n\n                if (type === 'desc') {\n                  message = objmsg.message\n                }\n                break\n              case 10:\n                try {\n                  if (attachments && attachments.sticker) {\n                    const namesticker = attachments.sticker || ''\n                    const arrsticker = this.state.stickerFolderName\n                    for (const sticker of arrsticker) {\n                      if (namesticker && namesticker.indexOf(sticker) !== -1) {\n                        const imgsticker = namesticker.replace(sticker + '_', '')\n                        message = `<img src='./images/default/sticker/${sticker}/${imgsticker}' alt='sticker' class='img-sticker' />`\n                        break\n                      }\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                if (type === 'desc') {\n                  message = 'Sticker'\n                }\n                break\n              case 12:\n                let file = (attachments && attachments.file) || objmsg.file\n                if (file) {\n                  message = `<div class='zchat-filemess'>\n                  <div class='zchat-callname'>${rxaget(file, 'file_name', '')}</div>`\n                  message += `<div class='zchat-calltime' style=\"color:#a6a6a7;\">${formatBytes(rxaget(file, 'size', 0))}</div>`\n                  message += `<span class='zchat-docicon' onclick=window.downloadFile('${rxaget(file, 'url', '').toString()}','${rxaget(file, 'file_name', '').toString()}')><i class='icon-doc'></i></span></div>`\n                  if (type === 'desc') {\n                    message = translate('File')\n                  }\n                }\n                break\n              default:\n                message = objmsg.message || ''\n                if (message && message.length < 50) {\n                  let resMess = message.match(/(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g)\n                  if (resMess && resMess.constructor === Array && resMess.length > 0) {\n                    let uniemoji = [...new Set(resMess)]\n                    for (let emoji of uniemoji) {\n                      let regEmoji = new RegExp(emoji, 'g')\n                      message = message.replace(regEmoji, '<span>' + emoji + '</span>')\n                    }\n                  }\n                }\n\n                break\n            }\n          }\n        } else {\n          message = ''\n        }\n      } else {\n        if (objmsg.status !== 4) {\n          if (objmsg.deleted_uins && objmsg.deleted_uins.constructor === Array && objmsg.deleted_uins.length > 0 && objmsg.deleted_uins.indexOf(userid) !== -1) {\n            message = ''\n          } else {\n            message = objmsg.message || ''\n          }\n        } else {\n          message = ''\n        }\n      }\n\n      if (message.indexOf('@') !== -1) {\n        let userstag = message.match(/(@\\d+\\b)/ig)\n        if (userstag && userstag.constructor === Array && userstag.length > 0) {       \n          userstag.forEach(o => {\n            let useridtmp = o.replace('@', '') || ''           \n            if (this.users[useridtmp]) {\n              message = message.replace(o, checkNameUser(rxaget(this.users, useridtmp, {})))\n            }\n          })\n        }\n      }\n      return message\n    } else {\n      return ''\n    }\n  }\n\n  pasteAsPlainText = e => {\n    e.preventDefault()\n\n    if (e.clipboardData.files.length > 0) {\n      let contentTarget = document.getElementById('zmess-box')\n\n      this.retrieveImageFromClipboardAsBase64(e, (imageObj) => {\n        if(imageObj){\n          // let messtmp = `<img src='${imageObj['base64']}' alt='image' class='load-image-footer' />`\n\n          contentTarget.innerHTML = `<img src='${imageObj['base64']}'>`\n          this.setState({\n            imageTmp: imageObj\n          })\n        }\n      })\n    } else {\n      const text = e.clipboardData.getData('text/plain')\n\n      document.execCommand('insertHTML', false, text)\n    }\n  }\n\n  retrieveImageFromClipboardAsBase64(pasteEvent, callback, imageFormat){\n    if(pasteEvent.clipboardData === false){\n      if(typeof(callback) === \"function\"){\n        callback(undefined);\n      }\n    };\n\n    let items = pasteEvent.clipboardData.items;\n\n    if(items === undefined){\n      if(typeof(callback) === \"function\"){\n        callback(undefined);\n      }\n    };\n\n    for (let i = 0; i < items.length; i++) {\n      // Skip content if not image\n      if (items[i].type.indexOf(\"image\") === -1) continue;\n      // Retrieve image on clipboard as blob\n      let blob = items[i].getAsFile();\n\n      // Create an abstract canvas and get context\n      let mycanvas = document.createElement(\"canvas\");\n      let ctx = mycanvas.getContext('2d');\n      \n      // Create an image\n      let img = new Image();\n\n      let dataURLtoFile = function (dataurl, filename) {\n        let arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n          bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n        return new File([u8arr], filename, { type: mime });\n      }\n\n      // Once the image loads, render the img on the canvas\n      img.onload = function(){\n        // Update dimensions of the canvas with the dimensions of the image\n        mycanvas.width = this.width;\n        mycanvas.height = this.height;\n\n        // Draw the image\n        ctx.drawImage(img, 0, 0);\n\n        // Execute callback with the base64 URI of the image\n        if(typeof(callback) === \"function\"){\n          const base64 = mycanvas.toDataURL((imageFormat || \"image/png\"))\n          const filename = 'image_' + Math.floor(Date.now())\n          const arrimg = base64.split(',')[1]\n\n          callback({\n            base64: base64,\n            width: mycanvas.width,\n            height: mycanvas.height,\n            type: 'image/png',\n            size: Math.floor((new Buffer(arrimg, 'base64').length)),\n            filename: filename,\n            file: dataURLtoFile(base64, `${filename}.jpg`)\n          });\n        }\n      };\n\n      // Crossbrowser support for URL\n      let URLObj = window.URL || window.webkitURL;\n\n      // Creates a DOMString containing a URL representing the object given in the parameter\n      // namely the original Blob\n      img.src = URLObj.createObjectURL(blob);\n    }\n  }\n\n  onKeyDown = event => {\n    const keyCode = event.keyCode \n    if ( !(keyCode === 8 ||keyCode === 13 || (keyCode >= 37 && keyCode <= 40)) ) {\n      let tagNameDisplay = this.state.tagNameDisplay\n      tagNameDisplay.tagNameLast = ''\n      this.setState({ tagNameDisplay })\n    }\n  }\n\n  handleContentEditable = event => {\n    try {\n      const group_id = this.props.group_id\n      let {\n        target: { value },\n      } = event\n      let displayTagflag = false, tagNameDisplay = this.state.tagNameDisplay,\n        tagNameLast = '', isEdit = false\n      if (value && value.match(/<span(.*?)<\\/span>/g) && value.match(/<span(.*?)<\\/span>/g).length > 0) {\n        value.match(/<span(.*?)<\\/span>/g).map((val) => {\n          let arrid = val.match(/\"(.*?)\"/g)\n          if (arrid && arrid[0]) {\n            let uid = arrid[0].replace(/\"/g, '')\n            let cont = />([^;]+)<\\/span>/.exec(val) && />([^;]+)<\\/span>/.exec(val)[1]\n            if (tagNameDisplay[uid] && cont !== tagNameDisplay[uid].name) {\n              value = value.replace(val, '@' + cont)\n              tagNameLast = cont\n              isEdit = true\n            }\n          }\n        })\n      }\n      if(value.indexOf('\"') !== -1){\n        // console.log(value,'??')  \n      }\n      \n      if (value.indexOf('@') !== -1) {\n        displayTagflag = true\n      }\n      let valuetmp = this.removeTags(value)\n      let strvalue = ''\n      if (valuetmp === '' && value !== '') {\n        strvalue = ''\n      } else {\n        strvalue = value\n      }\n      strvalue = strvalue.replace(/<br>/g, '')\n      strvalue = strvalue.replace(/<\\/p><p>/g, '')\n      // let messArr = strvalue.split(' ')\n      // let lastMessArr = messArr[messArr.length-1]\n      // let foundEmoji = this.state.arrTabsChar.indexOf(lastMessArr)\n      // let displayEmojiBox = this.state.displayEmojiBox\n\n      // if(displayEmojiBox === true && foundEmoji === -1){\n      //   this.setState({displayEmojiBox:false})\n      // }\n\n\n      if (this.userid && group_id) {\n        const me_typing = this.state.me_typing\n        if (strvalue) {\n          if (me_typing === false) {\n            rxio.sendGroupEvent(group_id, this.userid, 9)\n          }\n          let arrGroups = []\n          if (strvalue.indexOf('@') !== -1) {\n            if (!tagNameLast) {\n              let el = document.getElementById(\"zmess-box\").firstChild\n              let textContent = el.textContent\n              const caretOffset = this.getCaret(el)\n              tagNameLast = textContent.substring(textContent.lastIndexOf(\"@\") + 1, caretOffset + 1).trim()\n            }\n            arrGroups = this.state.groupsTagName.filter(o => rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(tagNameLast)) !== -1)\n          }\n          if (arrGroups.length)\n            tagNameDisplay.tagNameLast = tagNameLast\n\n          this.setState({\n            mess: strvalue, me_typing: true,\n            displayTagNameBox: displayTagflag,\n            groupsTemp: arrGroups,\n            tagNameDisplay,\n          }, () => {\n            if (tagNameLast && isEdit) {\n              var el = document.getElementById(\"zmess-box\").firstChild\n              if (el) {\n                var range = document.createRange()\n                var sel = window.getSelection()\n                if (range) {\n                  try {\n                    el.childNodes.forEach(n => {\n                      const regex = new RegExp(\"@\" + tagNameLast, 'g');\n                      const result = regex.test(n.textContent)\n                      if (result) {\n                        // console.log(`${result}-${n.textContent}-${regex.lastIndex}-${n.textContent.charAt(regex.lastIndex)}`)\n                        range.setStart(n, regex.lastIndex)\n                        range.collapse(true)\n                        sel.removeAllRanges()\n                        sel.addRange(range)\n                      }\n                    })\n                  } catch (error) { }\n                }\n              }\n            }\n            setTimeout(() => {\n              if ((strvalue === this.state.mess) && me_typing) {\n                rxio.sendGroupEvent(group_id, this.userid, 10)\n                this.setState({ me_typing: false })\n              }\n            }, 2000)\n          })\n        } else {\n          this.setState({\n            mess: strvalue, me_typing: true,\n            displayTagNameBox: displayTagflag\n          })\n        }\n      }\n    } catch (error) { console.log(error) }\n  }\n\n  getCaret(element) {\n    if (element) {\n      var caretOffset = 0;\n      var doc = element.ownerDocument || element.document;\n      var win = doc.defaultView || doc.parentWindow;\n      var sel;\n      if (typeof win.getSelection !== \"undefined\") {\n        sel = win.getSelection();\n        if (sel.rangeCount > 0) {\n          var range = win.getSelection().getRangeAt(0);\n          var preCaretRange = range.cloneRange();\n          preCaretRange.selectNodeContents(element);\n          preCaretRange.setEnd(range.endContainer, range.endOffset);\n          caretOffset = preCaretRange.toString().length;\n        }\n      } else if ((sel = doc.selection) && sel.type !== \"Control\") {\n        var textRange = sel.createRange();\n        var preCaretTextRange = doc.body.createTextRange();\n        preCaretTextRange.moveToElementText(element);\n        preCaretTextRange.setEndPoint(\"EndToEnd\", textRange);\n        caretOffset = preCaretTextRange.text.length;\n      }\n      caretOffset-=1\n      return caretOffset;\n    }\n  }\n\n  tagName_SelectUser=(ele)=> {\n    let mess = this.state.mess,tagNameLast=this.state.tagNameDisplay.tagNameLast\n    mess = mess.replace(\"<p>\",\"\").replace(\"</p>\",\"\").trim()\n    let tempTag = '<span uid=\"' + ele.id + '\" style=\"font-weight:bold\">' +  (checkNameUser(ele) || \"\") + '</span> '\n    if (tagNameLast) {\n    \n      mess = mess.replace(`@${tagNameLast}`, tempTag)\n    }\n    else {\n      const regex = new RegExp('@(?!.)', 'g');\n      regex.test(mess)\n      // console.log(\"mess\",mess,regex.lastIndex)\n      mess = mess.slice(0, regex.lastIndex-1) + mess.slice(regex.lastIndex);\n      mess = [mess.slice(0, regex.lastIndex), tempTag, mess.slice(regex.lastIndex)].join('');\n    }\n    if (!mess.startsWith('<p>')) mess = '<p> ' + mess + '</p>'\n    const chatDiv = document.getElementById('zmess-box')\n    chatDiv.focus()\n    let tagNameDisplay = this.state.tagNameDisplay\n    tagNameDisplay[ele.id] = { name: checkNameUser(ele) }\n    this.setState({ mess: mess, displayTagNameBox: false, tagNameDisplay })\n  }\n\n  converEmojiTag(message){\n    message = message.replace(/\"/g,'\\\\\"')\n    const objEmoji = {':)':'🙂',':(':'🙁',':P':'😛',':D':'😃',':O':'😮',';)':'😉','B-)':'🤓','B|':'😎','>:(':'😠',\":'(\":'😢','O:)':'😇',':*':'😘','3:)':'😈','^_^':'😊','o.O':'😳','>:O':'😫','(y)':'👍',':poop:':'💩'}\n    const resMess = message.match(/(:\\)|:\\(|:P|:D|:O|;\\)|B-\\)|B\\||>:\\(|:\\/|:'\\(|O:\\)|:\\*|3:\\)|\\^_\\^|o.O|>:O|\\(y\\)|:poop:)/g)\n    if (resMess && resMess.constructor === Array && resMess.length > 0) {\n      const uniemoji = [...new Set(resMess)]\n      for (let emoji of uniemoji) {\n        try {\n          let stremoji = emoji.replace(/\\)/g,'\\\\)').replace(/\\(/g,'\\\\(').replace(/\\|/g,'\\\\|').replace(/\\//g,'\\\\/').replace(/'/g,'\\\\\\'').replace(/\\*/g,'\\\\*').replace(/\\^/g,'\\\\^')\n          let regEmoji = new RegExp(stremoji, 'g')\n          let replaceEmoji = objEmoji[emoji]\n          if (replaceEmoji) {\n            message = message.replace(regEmoji, replaceEmoji)   \n          }\n        } catch(e) {}\n      }\n    }\n\n    return message\n  }\n\n  resetTagname(){\n    let tagNameDisplay = this.state.tagNameDisplay\n    let myDiv = document.getElementById(\"tagName_List_id\");\n\n    myDiv.scrollTop = 0;\n    tagNameDisplay.tagNameLast = ''\n\n    this.setState({tagNameSelect: '', tagNameSelectNum: 0, tagNameSelect_isFirstTime: true, tagNameDisplay })\n  }\n\n  disableDrop = event => {\n    event.preventDefault();\n  }\n\n  disableNewlines = event => {\n    const imageTmp = this.state.imageTmp || {}\n    const group_id = this.props.group_id\n    const keyCode = event.keyCode || event.which\n    let displayTagNameBox = this.state.displayTagNameBox\n    let groupsTemp = this.state.groupsTemp\n    // let displayEmojiBox = this.state.displayEmojiBox\n    \n    // if (keyCode === 58){\n    //   this.setState({displayEmojiBox:true})\n    // }\n    if (keyCode === 13) {\n\n      if (imageTmp && imageTmp.base64) {  \n        if (!this.blockEnter) {\n          this.uploadThumnail(imageTmp, (data) => {\n            if (data) {\n              this.uploadFile([data], 'image')  \n            } else {\n              alert('Upload Image Unsuccess')\n            }\n\n            this.setState({imageTmp: {}})\n          })  \n        }\n      } else {\n        if (displayTagNameBox === true && groupsTemp && groupsTemp.length > 0 && this.state.tagNameSelect ){          \n          this.tagName_SelectUser(this.state.tagNameSelect)\n          this.resetTagname()\n          /*let tagNameDisplay = this.state.tagNameDisplay\n          let myDiv = document.getElementById(\"tagName_List_id\");\n          myDiv.scrollTop = 0;\n          tagNameDisplay.tagNameLast = ''\n\n          this.setState({ tagNameSelect: '', tagNameSelectNum: 0, tagNameSelect_isFirstTime: true, tagNameDisplay })*/\n        } else {             \n          event.returnValue = false\n          if (event.preventDefault) {\n            event.preventDefault()\n            let mess = this.state.mess      \n            let emptyMess = mess.replace(/[\\s]/g, '')\n            if(this.state.type_option === 2 || emptyMess.length > 0 ){\n\n              mess = this.converEmojiTag(mess)\n              if (mess && mess.match(/<span(.*?)<\\/span>/g) && mess.match(/<span(.*?)<\\/span>/g).length > 0) {\n                mess.match(/<span(.*?)<\\/span>/g).map((val) => {\n                  if (val.indexOf('uid') !== -1) {\n                    let arrid = val.match(/\"(.*?)\"/g)\n                    if (arrid && arrid[0]) {\n                      let uid = arrid[0].replace(/\\\\\"/g,'').replace(/\"/g,'')\n                      mess = mess.replace(val, '@'+uid+' ')\n                    }\n                  }\n                })\n              }\n              mess = this.removeTags(mess)\n              if (group_id && (this.state.type_option === 2 || typeof mess !== 'boolean')) {\n                let msg_message =  ''\n                if(typeof mess !== 'boolean'){\n                  msg_message = mess.replace(/\\\\/g, '').replace(/\"/g, '\\\\\"')\n                }\n                let msg = {\n                  group_id: group_id,\n                  type: 0,\n                  nonce: Math.floor(Date.now()).toString(),\n                  sender_name: rxaget(this.props, 'netaauth.user.name', ''),\n                  message: msg_message\n                }\n                if ([1, 2].indexOf(this.props.type_option) !== -1 && this.props.mess_selected && this.props.mess_selected.message_id) {\n                  let attachments = {\n                    created_at: rxaget(this.props.mess_selected, 'created_at', '').toString(),\n                    group_id: rxaget(this.props.mess_selected, 'group_id', '').toString(),\n                    group_type: Number(rxaget(this.props.mess_selected, 'group_type', 0)),\n                    message: rxaget(this.props.mess_selected, 'message', ''),\n                    message_id: rxaget(this.props.mess_selected, 'message_id', '').toString(),\n                    sender_uin: rxaget(this.props.mess_selected, 'sender_uin', '').toString(),\n                    status: Number(rxaget(this.props.mess_selected, 'status', 0)),\n                    // type: Number(rxaget(this.props.mess_selected, 'type', 0)),\n                    version: Number(rxaget(this.props.mess_selected, 'version', 0))\n                  }              \n                  let sub_attachments_tmp = ''\n                  try {\n                    let s_attachments = this.props.mess_selected.attachments && JSON.parse(this.props.mess_selected.attachments)\n                    if (this.props.mess_selected.type === 3) attachments.audio = s_attachments.audio\n                    else if (this.props.mess_selected.type === 12) attachments.file = s_attachments.file\n                    else if (this.props.mess_selected.type === 4) attachments.video = s_attachments.video\n                  } catch (error) { }\n                  if (rxaget(this.props.mess_selected, 'attachments', '') !== '') {\n                    let messType = rxaget(this.props.mess_selected, 'type', '')\n                    if([2, 3, 4, 10, 12].indexOf(messType) !== -1){                      \n                      try {\n                        let attachments_tmp = rxaget(this.props.mess_selected, 'attachments', '')\n                        attachments.attachments = '[attachments_conditional]'\n                        attachments.type = Number(rxaget(this.props.mess_selected, 'type', 0))\n                        sub_attachments_tmp =JSON.stringify(JSON.parse(attachments_tmp)).replace(/\"/g, '\\\\\\\\\\\\\"')\n                      } catch (e) {\n                        console.log(e)\n                      }\n                    } \n\n                    if([8].indexOf(messType) !== -1){                      \n                      try {\n                        \n                        let attachments_tmp = {}\n                        attachments_tmp.type = 'text'\n                        attachments_tmp.text = rxaget(this.props.mess_selected, 'message', '')\n                        attachments.attachments = '[attachments_conditional]'\n                        attachments.type = 0\n                        sub_attachments_tmp =JSON.stringify(attachments_tmp).replace(/\"/g, '\\\\\\\\\\\\\"')\n                      } catch (e) {\n                        console.log(e)\n                      }\n                    } \n                  }\n                  try {\n                    let messattach = attachments.message || ''\n                    attachments.message = messattach.replace(/\"/g, '\\'\\'')\n                  } catch(e2) {}    \n                  attachments = JSON.stringify(attachments).replace(/\"/g, '\\\\\"')\n                  msg = {\n                    group_id: Number(group_id),\n                    type: (this.props.type_option === 1) ? 8 : 9,\n                    version: 1,\n                    sender_name: rxaget(this.props, 'netaauth.user.name', ''),\n                    nonce: Math.floor(Date.now()).toString(),\n                    message: msg_message,\n                    attachments: attachments.replace('[attachments_conditional]',sub_attachments_tmp)\n                  }\n\n                }\n\n                if (rxio.connected) {\n                  rxio.socket.emit('create_message', msg, (data) => {\n                    if (data && data.message) {\n                      this.setState({ type_option: 0, mess_selected: {}/*, mess: ''*/,displayTagNameBox: false,tagNameDisplay: {}, me_typing: false}, () => {\n                        this.props.netaMessAdd(group_id, data.message)\n                        this.props.handleMessage(data.message, true, 'footer')\n                        rxio.sendGroupEvent(group_id, this.userid, 10)\n                      })\n                      // this.props.reloadStateWhenRepMess(data)\n                    }\n                  })  \n                }           \n                // this.props.updateRecentContactGroups(this.state.group.partner_id,Date.now())  \n                this.setState({mess:''})\n              }\n            \n            }\n\n          }\n        }\n      }\n    }\n  }\n\n  uploadThumnail(image, callback) {\n    if (image.base64 && image.width > 0) {\n      let dataParams = {\n        content_type: image.type,\n        name: image.filename,\n        public: true,\n        size: image.size\n      }\n      let header = { 'TC-Token': this.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n      let requestOptions = {\n        method: 'POST',\n        headers: header,\n        body: JSON.stringify(dataParams),\n        redirect: 'follow'\n      };\n\n      fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n        this.blockEnter = true\n        if (json && json.blod_object && json.blod_object.form_data) {\n          let dataUpload = new FormData()\n          let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n          for (let key of arrKeys) {\n            if (json.blod_object.form_data[key]) {\n              dataUpload.append(key, json.blod_object.form_data[key])\n            }\n          }\n          dataUpload.append('file', image.file, image.file.name)\n          dataUpload.append('success_action_status', 201)\n\n          fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n            if (result.indexOf('Key') !== -1) {\n              let patt = '<Key.*?>(.*?)<\\\\/Key>';\n              let strresult = result.match(patt);\n              if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                let key = strresult[1]\n                if (key) {\n                  let optComplete = {\n                    method: 'PUT',\n                    headers: header,\n                    body: JSON.stringify({\n                      content_type: json.content_type,\n                      id: json.id,\n                      name: json.name,\n                      size: json.size,\n                      uid: json.uid\n                    })\n                  };\n\n                  fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                    .then(response => {\n                      if (response.status === 200) {\n                        try {\n                          let objSize = {\n                            width: image.width || 960,\n                            height: image.height || 720,\n                            url: key\n                          }\n                          \n                          callback(objSize)\n                        } catch (e) {\n                          callback(undefined)\n                        }\n                      } else {\n                        callback(undefined)\n                      }\n                    })\n                    .catch(errorPut => console.log('error', errorPut));\n                } else {\n                  callback(undefined)\n                }\n              } else {\n                callback(undefined)\n              }\n            } else {\n              callback(undefined)\n            }\n          })\n        } else {\n          callback(undefined)\n        }\n      }).catch(error => console.log('error', error))\n    } else {\n      callback(undefined)\n    }\n  }\n\n  setCursor(pos) {\n     var chatDiv = document.getElementById('zmess-box')\n     var range = document.createRange();\n     var sel = window.getSelection();\n     range.setStart(chatDiv.childNodes[0], pos);\n     range.collapse(true);\n     sel.removeAllRanges();\n     sel.addRange(range);\n     chatDiv.focus();\n  }\n\n  sendLike() {\n    const arrUsers = this.state.users\n    const group_id = this.props.group_id\n    const user = rxaget(this.props, 'netaauth.user', {})\n    const msg = {\n      group_id: group_id,\n      type: 0,\n      version: 1,\n      nonce: Math.floor(Date.now()).toString(),\n      sender_name: '',\n      message: '👍'\n    }\n\n    const objUser = arrUsers[user.id.toString()]\n    if (objUser && objUser.profile_url) {\n      msg.sender_avatar = objUser.profile_url\n    }\n    if (rxio.connected) {\n      rxio.socket.emit('create_message', msg, (data) => {\n        if (data && data.message) {\n          this.props.netaMessAdd(group_id, data.message)\n          this.props.handleMessage(data.message, true)\n        }\n      })  \n    }\n  }\n\n  sendSticker(value) {\n    const arrUsers = this.state.users\n    const group_id = this.props.group_id\n    const user = rxaget(this.props, 'netaauth.user', {})\n    const objUser = arrUsers[user.id.toString()]\n\n    const msg = {\n      group_id: Number(group_id),\n      type: 10,\n      version: 1,\n      nonce: (Math.floor(Date.now()) * 1000).toString(),\n      sender_name: (objUser && objUser.full_name) ? objUser.full_name : '',\n      attachments: '{\\\\\"sticker\\\\\":\\\\\"' + value + '\\\\\"}'\n    }\n    if (rxio.connected) {\n      rxio.socket.emit('create_message', msg, (data) => {\n        if (data && data.message) {\n          this.props.netaMessAdd(group_id, data.message)\n          this.props.handleMessage(data.message, true)\n        }\n      })  \n    }\n  }\n\n  addEmoji(value, type) {\n    if (type === 'EmojiIcon') {\n      const chatDiv = document.getElementById('zmess-box')\n      if (chatDiv) {\n        chatDiv.innerHTML += value\n        this.setState({ mess: chatDiv.innerHTML })\n      }\n    } else if (type === 'Sticker') {\n      this.sendSticker(value)\n    }\n  }\n\n  fetchImage(src, callback) {\n    try {\n      if (!this.checkImage[src]) {\n        this.checkImage[src] = true\n\n        fetch(src, { headers: { 'TC-Token': this.token }, redirect: 'follow' })\n          .then(res => {\n            if (res && res.redirected && res.url && src) {\n              try {\n                this.props.netaBlobsUpdate(src, res.url)\n              } catch (e) {\n                console.log(e)\n              }\n            }\n            return res.blob()\n          })\n          .then(blob => {\n            var reader = new FileReader()\n            reader.readAsDataURL(blob)\n            reader.onloadend = () => {\n              if (reader.result) {\n                callback(reader.result)\n              }\n            }\n          })\n      }\n    } catch (e) {\n      // console.log(e)\n    }\n  }\n\n  onClickMouseRight(e) {\n    const menuDiv = document.getElementById('menu-footer')\n    // const menuDivGroup = document.getElementById('context_menu-group')\n    if (menuDiv && e.button === 2) {\n      \n      document.oncontextmenu = function () {\n        return false;\n      }\n      menuDiv.style.top = (Number(e.clientY) - 70) + 'px'\n      menuDiv.style.left = (Number(e.clientX)) + 'px'\n      menuDiv.style.display = 'block'\n    }\n  }\n\n  async chooseOptionFooter(e, type) {\n    if (type === 'copy') {\n    } else if (type === 'cut') {\n    } else if (type === 'paste') {\n      try {\n        const text = await navigator.clipboard.readText();\n        document.getElementById('zmess-box').innerText = text;\n        this.setCursor(text.length)\n        // this.setState({mess: text})\n      } catch(e) {}\n    }\n\n    const menuDiv = document.getElementById('menu-footer')\n    if (menuDiv) {\n      menuDiv.style.display = 'none' \n    }\n  }\n\n  render() {\n    // console.log('Render Footer')\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  langValue: state.langValue,\n  user: state.user,\n  auth: state.auth,\n  favorite: state.favorite,\n  netaauth: state.netaauth,\n  netaGroups: state.netaGroups,  \n  rxgroup: state.rxgroup,\n  themeValue: state.themeValue,\n  tabmore: state.tabmore\n})\n\nconst mapDispatchToProps = {\n  netaMessAdd,\n  updateRecentContactGroups,\n  chooseGroupAction,\n  netaMediaOneAdd\n\n}\n\nconst FooterChatWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default FooterChatWrapped","/*eslint-disable no-undef*/\n/* global translate */\n\nimport { connect } from 'react-redux'\nimport fetch from 'isomorphic-fetch'\n\nimport * as Jsx from './index.jsx'\n\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\n\nconst { rxaget, rxChangeSlug, sortArrObj } = global.rootRequire('classes/ulti')\n\nconst { netaGroupsUpdate, netaGroupsUpdateArr, chooseGroupAction, userAdd, userAddArr, contactAdd, netaBlobsUpdate, \n      changeStatusTabmore, netaGroupsRemove, changeStatusLoadMess, netaAuthSettingUpdate, \n      netaGroupsPinUpdate, clearRxContact, netaGroupsUpdateUnpin, clickPopup, netaMessGet, netaMessAdd, netaUserSetGroupid, netaMessRemove } = global.rootRequire('redux')\n\nconst { fetchContact, checkNameGroup, checkNameUser } = global.rootRequire('classes/chat')\n\nconst { rxgetLocal } = global.rootRequire('classes/request')\nconst rxio = global.rootRequire('classes/socket').default\n\nclass Component_ extends RxComponent {\n  constructor(props, context) {\n    super(props, context, Jsx)\n    this.state = {\n      groups: [],      \n      groupsDisplay:[],\n      groups_origin: [],\n      uids: rxaget(this.props, 'user.ids', []) || [],\n      pg_group: 0,\n      scroll_group: true,\n      group_id: rxaget(this.props, 'rxgroup.groupid', ''),\n      // group: rxaget(this.props, 'rxgroup', {}),\n      group: rxaget(this.props, 'rxgroup.group', {}),\n      rxgroup: rxaget(this.props, 'rxgroup', {}),\n      // modalAddFriend: rxaget(this.props, 'tabmore', false),\n      // tabmore : rxaget(this.props, 'tabmore', false),      \n      statusInput: '',\n      groupsTemp: [],\n      groupsLocalStore: [],\n      numGroupTeamChat: 0,\n      flagCreateGroup: false,\n      isShowPopupCreateGroup: false,\n      isShowPopup_ManageGroup: false,\n      displayGroupList: true,\n      searchValue: '',\n      groupsSearchArr: [],\n      searchNchatValue: '',\n      statusSeachNchatValue: false,\n      groupsNChat: [],\n      groupsNChatCreate: [],\n      groupsChat: [],\n      arrGroupsChatFull: [],\n      groupsNChatOrigin: [],\n      groupsNChatChecked: [],\n      xPercent: 0,\n      slickTrackLength: 0,\n      clickCreateGroupBtn: false,\n      themeColor: rxaget(this.props, 'themeValue'),\n      admin_uins_index: rxaget(this.props, 'rxgroup.group.admin_uins', {}).length - 1,\n      displayLeaveGroupScreen: false,\n      displaySelectManagerScreen: false,\n      lg_chooseLeader_groupsTemp: [],\n      groupChooseItem_selected: {},\n      notificationStatus: global.rxu.json(rxgetLocal('netaNotificationStatus'), {}) || {},\n      groupsPin: {},\n      flagRightMouse: false,\n      groupRightMouse: {},\n      groupsSearchBoxClickStatus: false,\n      checkSearchValue_IsNumeber: false,\n      position: 0,\n      leaderMemberChecked: '',\n      chooseContactAction: false,\n    }\n    this.compareContact = this.compareContact.bind(this)\n    this.users = rxaget(this.props, 'user.users', {}) || {}\n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.netaContact = rxaget(this.props, 'netaContact', {})\n    this.netaGroups = rxaget(this.props, 'netaGroups', {})\n    try {\n      const groupneta = rxaget(this.props, 'netaGroups', {})\n      const arrGroups = []\n      if (groupneta && groupneta.groups) {\n        for (const idgroup of Object.keys(groupneta.groups)) {\n          if (groupneta.groups[idgroup]) {\n            let ogroup = groupneta.groups[idgroup]\n            ogroup['group_fullname'] = checkNameGroup(ogroup, this.users, this.userid)\n            if (ogroup && (ogroup.type === 3 || ogroup.type === 5) && !ogroup.avatar_url && rxaget(ogroup, 'occupants_uins', []).length === 2) {\n              const arrUins = rxaget(ogroup, 'occupants_uins', [])\n              ogroup['partner_id'] = (arrUins[0].toString() === this.userid.toString()) ? arrUins[1] : arrUins[0]\n            }\n            arrGroups.push(ogroup)\n          }\n        }\n      }\n\n      let groupsTmp = sortArrObj(arrGroups, 'last_message.created_at', 'desc')//.slice(0, 20)\n      let arrGroupsPin = groupsTmp.sort((a, b) => (this.checkGroupsPinned_uins(a.pinned_uins) === true && this.checkGroupsPinned_uins(b.pinned_uins) === false) ? -1 : ((this.checkGroupsPinned_uins(b.pinned_uins) === true && this.checkGroupsPinned_uins(a.pinned_uins) === false) ? 1 : 0))\n      this.state.groups = arrGroupsPin\n      this.state.groupsDisplay = arrGroupsPin.slice(0, 20)\n      this.state.groups_origin = this.state.groups\n\n    } catch (e) { console.log(e) }\n\n    const contactsUsers = []\n    if (this.users && Object.keys(this.users).length > 0) {\n      for (const userid of Object.keys(this.users)) {\n        if (userid !== this.userid) {\n          contactsUsers.push(this.users[userid])\n        }\n      }\n\n      this.state.groupsNChat = this.state.groupsNChatOrigin = contactsUsers\n      this.state.groupsNChatCreate = this.state.groupsNChatOrigin = contactsUsers\n      this.state.groupsChat = contactsUsers\n      this.state.slickTrackLength = contactsUsers.length * 63\n    }\n\n    this.checkImage = {}\n    const timenow = Math.floor(Date.now() / 1000)\n    let checkImageObj = rxaget(this.props, 'netaBlobs.data', {}) || {}\n    if (checkImageObj && typeof (checkImageObj) === \"object\" && Object.keys(checkImageObj).length > 0) {\n      for (let keyImg of Object.keys(checkImageObj)) {\n        let created_at = rxaget(checkImageObj[keyImg], 'created_at', 0)\n        if ((timenow - created_at) < 43200) {\n          this.checkImage[keyImg] = checkImageObj[keyImg]\n        }\n      }\n    }\n    this.fetchGroups = this.fetchGroups.bind(this)\n    this.reSortGroup = this.reSortGroup.bind(this)\n    let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n    if (this.state.group.group_id && netaAuthSetting.groups[Number(this.state.group.group_id)]\n      && netaAuthSetting.groups[Number(this.state.group.group_id)].disableNoti) {\n      this.state.disableNoti = true\n    } else this.state.disableNoti = false\n\n    this.fetchGroupDetail(this.state.group_id)\n    this.scrollGroupsChat = this.scrollGroupsChat.bind(this);\n  }\n\n  componentDidMount() {\n\n    document.addEventListener(\"click\", this.mouseClickFunction, true);\n\n    // document.addEventListener('scroll', this.scrollGroupsChat, true);\n    // this.actionPer5s()\n\n    let occupants_uins = this.state.group.occupants_uins\n    this.loadGroupsTemp(occupants_uins, this.users)\n    this.reSortGroup(this.props.netaGroups)\n    if (this.token && this.userid) {\n      if (!rxio.connected && !rxio.init_connected) {\n        rxio.login(this.token, this.userid, (data) => {\n          this.fetchGroups()\n\n          rxio.getWaitGroup((data) => {\n            this.fetchGroups()\n          })\n        })\n      } else {\n        this.loadHandleSocket()\n      }\n    }\n\n    if (window && window.ipcRenderer) {\n      const groupneta = rxaget(this.props, 'netaGroups', {})\n      window.ipcRenderer.on('click_notification', (event, args) => {\n        if (args && args.group_id && rxaget(groupneta, 'groups.' + args.group_id, null)) {\n          let groupNoti = rxaget(groupneta, 'groups.' + args.group_id, {})\n          this.chooseGroup(groupNoti)\n        }\n      })\n\n      window.ipcRenderer.on('reload_page', (event, args) => {\n        if (this.token && this.userid) {\n          this.chooseGroup(this.state.group)\n          this.setState({ pg_group: 0 }, () => {\n            try {\n              this.fetchGroups()\n              this.fetchRegisteredUsers()\n              let that = this\n              fetchContact({ netaContact: rxaget(that.props, 'netaContact.data', {}), token: that.token }, (newContacts) => {\n                that.props.contactAdd(newContacts)\n              })\n              this.fetchCacheImg()\n              rxio.getWaitGroup((data) => {\n                this.fetchGroups()\n              })\n            } catch (error) { }\n          })\n        }\n      })\n\n      window.ipcRenderer.on('open_deeplink', (event, deepLinkUrl) => {\n        if (deepLinkUrl) {\n          try {\n            let arrRegexStr = deepLinkUrl.match(/\\?token=([a-z0-9\\-]+)\\&?/i)\n            if (arrRegexStr && arrRegexStr.length === 2 && arrRegexStr[1]) {\n              let tokenStr = arrRegexStr[1]\n              rxio.joinLink(tokenStr, (data) => {\n                if (data && data.result === 1) {\n                  alert(translate('Join Group Failed'))\n                }\n              })           \n            } else {\n              alert(translate('Join Group Failed'))\n            }\n          } catch (e) {\n            alert(translate('Join Group Failed'))\n          }\n        } else {\n          alert(translate('Join Group Failed'))\n        }\n      })\n    }\n\n    this.fetchRegisteredUsers()\n    let that = this\n    fetchContact({ netaContact: rxaget(that.props, 'netaContact.data', {}), token: that.token }, (newContacts) => {\n      that.props.contactAdd(newContacts)    })\n    this.fetchCacheImg()\n  }\n\n  componentWillUnmount() {\n\n    clearInterval(this.interval);\n    document.removeEventListener(\"click\", this.mouseClickFunction, false);\n    // document.removeEventListener('scroll', this.scrollGroupsChat, false);\n  }\n\n  compareContact(a, b) {\n    let userA = rxChangeSlug(checkNameUser(a, this.userid, this.props.netaauth))\n    let userB = rxChangeSlug(checkNameUser(b, this.userid, this.props.netaauth))\n\n    if (userA < userB) {\n      return -1;\n    }\n    if (userA > userB) {\n      return 1;\n    }\n    return 0;\n  }\n\n  groupsSearchBoxClick(){\n    this.setState({\n      groupsSearchBoxClickStatus: true,\n    })\n  }\n\n  getSearchBoxvalue(clickStatus, searchValue) {\n    this.setState({\n      groupsSearchBoxClickStatus: clickStatus,\n      searchValue: searchValue,\n    })\n  }\n\n  reSortGroup(netaGroups) {\n    this.netaGroups = JSON.parse(JSON.stringify(netaGroups))\n    if (netaGroups.groups) {\n      let groupsTmp = (netaGroups && netaGroups.groups) ? JSON.parse(JSON.stringify(netaGroups.groups)) : {}\n      let arrGroupsTmp = []\n\n      Object.keys(groupsTmp).forEach(keygroup => {\n        if (groupsTmp[keygroup].last_message) {\n          try {\n            groupsTmp[keygroup].timestamp = (groupsTmp[keygroup].last_message.created_at\n              && Number(groupsTmp[keygroup].last_message.created_at)) || new Date().getTime() * 1000\n            arrGroupsTmp.push(groupsTmp[keygroup])\n          } catch (error) { }\n        }\n        if (typeof groupsTmp[keygroup].unread_cnt === 'undefined') {\n          groupsTmp[keygroup].unread_cnt = 1\n        }\n      })\n\n      let arrGroups = arrGroupsTmp.sort((a, b) => (a.timestamp > b.timestamp) ? -1 : ((b.timestamp > a.timestamp) ? 1 : 0))\n      let arrGroupsPin = arrGroups.sort((a, b) => (this.checkGroupsPinned_uins(a.pinned_uins) === true && this.checkGroupsPinned_uins(b.pinned_uins) === false) ? -1 : ((this.checkGroupsPinned_uins(b.pinned_uins) === true && this.checkGroupsPinned_uins(a.pinned_uins) === false) ? 1 : 0))\n\n      arrGroups = arrGroupsPin\n      arrGroups.forEach(ogroup => {\n        ogroup.group_fullname = checkNameGroup(ogroup, this.users, this.userid)\n        if (ogroup && (ogroup.type === 3 || ogroup.type === 5) && !ogroup.avatar_url && rxaget(ogroup, 'occupants_uins', []).length === 2) {\n          const arrUins = rxaget(ogroup, 'occupants_uins', [])\n          ogroup['partner_id'] = (arrUins[0].toString() === this.userid.toString()) ? arrUins[1] : arrUins[0]\n          if(ogroup.type === 3){\n            this.props.netaUserSetGroupid(ogroup.partner_id,ogroup.group_id)  \n          }          \n        }\n      })\n      let index = this.state.groupsDisplay.length\n      if(index === 0){\n        index = 20\n      }\n      let groupsDisplay = arrGroups.slice(0, index)\n      this.setState({ groups: arrGroups, groups_origin: arrGroups ,groupsDisplay:groupsDisplay})\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // frst get contact \n    if (nextProps.user && nextProps.user.ids && nextProps.user.ids.length !== Object.keys(this.state.groupsNChat).length) {\n      let users = rxaget(nextProps, 'user.users', {}) || {}\n      this.users = users\n      if (users && Object.keys(users).length > 0) {\n        const contactsUsers = []\n        let arrGroups = JSON.parse(JSON.stringify(this.state.groups))\n\n        arrGroups.forEach(ogroup => {\n          ogroup.group_fullname = checkNameGroup(ogroup, this.users, this.userid)\n        })\n        for (const userid of Object.keys(users)) {\n          if (userid !== this.userid) {\n            contactsUsers.push(users[userid])\n          }\n        }\n\n        let index = this.state.groupsDisplay.length\n        if(index === 0){\n          index = 20\n        }\n        let groupsDisplay = arrGroups.slice(0, index)\n        this.setState({\n          groupsNChat: contactsUsers,\n          groupsNChatOrigin: contactsUsers,\n          groupsChat: contactsUsers,\n          slickTrackLength: contactsUsers.length * 63,\n          groups: arrGroups,\n          groupsDisplay:groupsDisplay,\n          groups_origin: arrGroups,\n        })\n        // console.log(\"contactsUsers\", contactsUsers.length)\n      }\n    }\n    if (nextProps.rxgroup.groupid !== this.state.group_id) {\n      let groupidtmp = Number(rxaget(nextProps, 'rxgroup.groupid', 0))\n      if (nextProps.netaGroups && nextProps.netaGroups.groups && nextProps.netaGroups.groups[groupidtmp]) {\n        try {\n          nextProps.netaGroups.groups[groupidtmp]['group_fullname'] = rxaget(nextProps, 'rxgroup.group.name', '')\n        } catch (e1) { }\n      }\n      if (nextProps.rxgroup && nextProps.rxgroup.group && nextProps.rxgroup.groupid !== this.state.group_id) {\n        let occupants_uins = nextProps.rxgroup.group.occupants_uins || []\n        this.loadGroupsTemp(occupants_uins, this.users)\n        this.fetchGroupDetail(nextProps.rxgroup.groupid)\n      }\n      this.setState({\n        group_id: nextProps.rxgroup.groupid,\n        group: rxaget(nextProps, 'rxgroup.group', {}) //neu khong .group, cai group nay se la rxgroup, ma rxgroup la obj \n      })\n    }\n\n    if (nextProps.netaGroups && nextProps.netaGroups.groups &&      \n      nextProps.netaGroups.status !== this.netaGroups.status) {\n      this.reSortGroup(nextProps.netaGroups)\n    }\n\n    if (this.netaContact.status !== nextProps.netaContact.status) {\n      let groupstmp = this.state.groups\n      groupstmp.forEach(ogroup => {\n        ogroup.group_fullname = checkNameGroup(ogroup, this.users, this.userid)\n        if (ogroup && (ogroup.type === 3 || ogroup.type === 5) && !ogroup.avatar_url && rxaget(ogroup, 'occupants_uins', []).length === 2) {\n          const arrUins = rxaget(ogroup, 'occupants_uins', [])\n          ogroup['partner_id'] = (arrUins[0].toString() === this.userid.toString()) ? arrUins[1] : arrUins[0]\n        }\n      })\n      this.netaContact = this.props.netaContact   \n      let index = this.state.groupsDisplay.length \n      if(index === 0){\n        index = 20\n      }\n      let groupsDisplay = groupstmp.slice(0, index) \n      this.setState({ groups_origin: groupstmp, groups: groupstmp, groupsDisplay:groupsDisplay })\n    }\n  }\n\n  scrollGroupsChat(event) {\n    const container = document.getElementById('zgroup_list')\n    if(container && (container.scrollTop + container.offsetHeight >= container.scrollHeight - 360)){\n      let groupsDisplay = this.state.groupsDisplay      \n      let index = groupsDisplay.length\n      let groupsArr = this.state.groups.slice(index,index + 20)\n      groupsDisplay= [...groupsDisplay, ...groupsArr]\n      this.setState({groupsDisplay:groupsDisplay})      \n    }\n  }\n\n  checkGroupsPinned_uins(pinned_uins) {\n    let flag = false\n    if (pinned_uins && pinned_uins.constructor === Array && pinned_uins.indexOf(String(this.userid)) !== -1) {\n      flag = true\n    }\n    return flag\n  }\n\n  loadHandleSocket() {\n    rxio.getWaitConnect((data) => {\n      if (data) {\n        this.fetchGroups()\n        rxio.getWaitGroup((data) => {\n          this.fetchGroups()\n        })\n        rxio.getUpdateMessage((data) => {\n          try {\n            if (typeof (window) !== 'undefined') {\n              window.ipcRenderer.send('remove_badge', data.group_id)\n            }\n          } catch (e) { }\n        })\n      } else {\n        setTimeout(() => {\n          this.loadHandleSocket()\n        }, 300)\n      }\n    })\n  }\n\n  async fetchRegisteredUsers() {\n    if (this.token) {\n      const api_registered_users = global.rxu.config.registered_users\n      const netaUserReg = rxaget(this.props, 'user.users', {})\n\n      const max_size = 100\n      let arrUser = []\n\n      for (let i = 0; i < 100; i++) {\n        let checkBreak = true\n        let offset = i\n        const params = {\n          offset: offset,\n          limit: max_size,\n          compact: 0\n        }\n        let tempBody = ''\n        for (const property in params) {\n          if (params.hasOwnProperty(property)) {\n            tempBody += `${property}=${params[property]}&`\n          }\n        }\n\n        let res = await fetch(api_registered_users + '?' + tempBody, { method: 'GET', headers: { Accept: 'application/json', 'TC-Token': this.token, Connection: 'Keep-Alive', 'Accept-Encoding': 'gzip' }, body: null })\n        try {\n          let json = await res.json()\n          if (res && [404, 401].indexOf(res.status) !== -1) {\n            break\n          }\n\n          if (json && json.items && json.items.constructor === Array && json.items.length > 0) {\n            for (const itemreg of json.items) {\n              const objreg = {\n                id: rxaget(itemreg, 'Id', ''),\n                email: rxaget(itemreg, 'email', ''),\n                phone: rxaget(itemreg, 'phone', ''),\n                full_name: rxaget(itemreg, 'full_name', ''),\n                profile_url: rxaget(itemreg, 'profile_url', ''),\n                name_contact: rxaget(itemreg, 'name_contact', '')\n              }\n\n              arrUser.push(objreg)\n\n              if (typeof (netaUserReg) === 'object' && typeof (netaUserReg[objreg.id]) === 'undefined') {\n                if (checkBreak === true) {\n                  checkBreak = false\n                }\n              }\n            }\n\n            if (json.items.length < max_size) { break }\n            if (checkBreak === true) { break }\n          }\n\n        } catch (e) {\n          break\n        }\n\n        await new Promise(r => setTimeout(r, 1000));\n      }\n\n      if (arrUser.length > 0) { this.props.userAddArr(arrUser) }\n    }\n  }\n\n  fetchCacheImg() {\n    const images = document.getElementsByClassName('ava-usergroup')\n    if (images && images.length > 0) {\n      for (let i = 0; i < images.length; i++) {\n        const valueAttr = images[i].getAttribute('data-id')\n        if (valueAttr && valueAttr.indexOf('userava') !== -1) {\n          const userid = valueAttr.replace('userava', '')\n          if (userid) {\n            const avatar_url = global.rxu.config.get_avatar + userid\n            this.fetchImage(avatar_url, (data) => {\n              if (data) {\n                images[i].src = data\n              }\n            })\n          }\n        }\n      }\n    }\n  }\n\n  // onClickAddFriend() {\n  //   const modalAddFriend = this.state.modalAddFriend\n  //   this.setState({\n  //     modalAddFriend: !modalAddFriend\n  //   })\n  // }\n\n  createNewChatGroup() {\n    let tabmore = rxaget(this.props, 'tabmore', false)\n    if( tabmore.data === true){\n      tabmore.data = false\n      this.setState({ flagShowDropDown: false }, () => {\n        this.props.changeStatusTabmore('false')\n        const user = rxaget(this.props, 'netaauth.user', {})\n        this.props.clickPopup('create_group', { data: { groups: this.state.groupsNChatOrigin, user: user } }, (data) => {\n          this.fetchGroups()\n        })\n      })\n    }else{\n      this.setState({ flagShowDropDown: false }, () => {\n        const user = rxaget(this.props, 'netaauth.user', {})\n        this.props.clickPopup('create_group', { data: { groups: this.state.groupsNChatOrigin, user: user } }, (data) => {\n          this.fetchGroups()\n        })\n      })\n    }\n  }\n\n  fetchGroupDetail(group_id, resolve, reject) {\n    if (group_id && this.token) {\n      let that = this\n      const api_group_detail = global.rxu.config.get_groups + '/' + group_id\n      fetch(api_group_detail, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'TC-Token': this.token,\n          Connection: 'Keep-Alive',\n          'Accept-Encoding': 'gzip'\n        },\n        body: null\n      }).then(res => res.json()).then((json) => {\n        let objUsers = []\n        if (json && json.users && json.users.constructor === Array && json.users.length > 0) {\n          for (const user of json.users) {\n            objUsers.push({ id: user.Id, ...user })\n          }\n        }\n        if (json && json.removed_users && json.removed_users.constructor === Array && json.removed_users.length > 0) {\n          for (const user of json.removed_users) {\n            objUsers.push({ id: user.Id, ...user })\n          }\n        }\n        if (that.state.group_id && json.Group && json.Group.group_id.toString() === group_id.toString()) {\n          let index = that.state.groups.findIndex(o => o.group_id.toString() === that.state.group_id.toString())\n          if (!objUsers.length) {\n            that.props.netaGroupsRemove(that.state.group_id)\n            index = index === 0 ? 1 : 0\n            that.props.chooseGroupAction(that.state.groups[index])\n          }\n          if (that.state.group && that.state.group.type === 3) {\n            let old_blocked_uins = JSON.parse(JSON.stringify(that.state.group.blocked_uins || []))\n            let blocked_uins = (json.Group.blocked_uins || []).map(i => i.toString())\n            if (JSON.stringify(blocked_uins) !== JSON.stringify(old_blocked_uins)) {\n              that.state.groups[index].blocked_uins = blocked_uins\n              that.props.chooseGroupAction(that.state.groups[index])\n            }\n          }\n        }\n        resolve ? resolve(objUsers) : that.props.userAddArr(objUsers)\n      }).catch(error => {\n        console.log(\"fetchGroupDetail error:\", error)\n        resolve && reject(error)\n      })\n    }\n  }\n\n  fetchGroups() {\n    const objCount = {}\n    if (this.userid) {\n      var psize = 20\n      let that = this\n      excefletch(this.state.pg_group)\n\n      function excefletch(pageIndex) {\n        if (rxio.connected) {\n          const msg = {\n            uin: that.userid,\n            sort_by: 1,\n            pindex: pageIndex,\n            psize: psize\n          }\n          rxio.socket.emit('list_group', msg, (data) => {\n            if (data && data.groups && data.groups.constructor === Array && data.groups.length > 0) {\n              var arrGroups = [...that.state.groups], newGroup = []\n              const groups = JSON.parse(JSON.stringify(data.groups))\n              for (const ogroup of groups) {\n                if (ogroup && ogroup.last_message) {\n                  ogroup.timestamp = (ogroup.last_message.created_at\n                    && Number(ogroup.last_message.created_at)) || new Date().getTime() * 1000\n                  ogroup.group_name = checkNameGroup(ogroup, that.users, that.userid)\n                  const findgroup = arrGroups.findIndex(o => o.group_id && ogroup.group_id &&\n                    (o.group_id.toString() === ogroup.group_id.toString()))\n                  if (findgroup !== -1) {\n                    arrGroups.splice(findgroup, 1)\n                    arrGroups.push(ogroup)\n                  } else {\n                    arrGroups.push(ogroup)\n                  }\n                  newGroup.push(ogroup.group_id)\n                  if (rxaget(ogroup, 'unread_cnt', 0) > 0) {\n                    if (!objCount[ogroup.group_id]) {\n                      objCount[ogroup.group_id] = 1\n                    }\n                  }\n                }\n              }\n              let pa = [], objUsers = []\n              for (const group_id of newGroup) {\n                if (/*!msg.pindex &&*/ !(that.props.netaGroups && that.props.netaGroups.groups && that.props.netaGroups.groups[Number(group_id)])) {\n                  pa.push(new Promise((resolve, reject) => {\n                    that.fetchGroupDetail(group_id, resolve, reject)\n                  }))\n                }\n              }\n              Promise.all(pa).then(values => {\n                values.map(i => {\n                  i.map(u => {\n                    objUsers.push(u)\n                  })\n                })\n                that.props.userAddArr(objUsers)\n              }, reason => { console.log(reason) });\n              arrGroups = arrGroups.sort((a, b) => (a.timestamp > b.timestamp) ? -1 : ((b.timestamp > a.timestamp) ? 1 : 0))\n              arrGroups = arrGroups.sort((a, b) => (that.checkGroupsPinned_uins(a.pinned_uins) === true && that.checkGroupsPinned_uins(b.pinned_uins) === false) ? -1 : ((that.checkGroupsPinned_uins(b.pinned_uins) === true && that.checkGroupsPinned_uins(a.pinned_uins) === false) ? 1 : 0))\n              let isStop = !(data.groups.length >= psize)\n              arrGroups.map((eg, i) => {\n                if (eg.occupants_uins && eg.occupants_uins.indexOf(that.userid.toString()) === -1) {\n                  eg.isDelete = true\n                }\n              })\n\n              that.props.netaGroupsUpdateArr(arrGroups, isStop)\n\n              that.setState({\n                pindex: pageIndex + 1,\n              }, () => {\n                if (that.state.group_id === '') {\n                  that.chooseGroup(data.groups[0])\n                }\n                if (!(that.props.netaGroups.init || isStop)) {\n                  setTimeout(function () {\n                    // console.log(\"excefletch\", that.props.netaGroups.init, isStop ,pageIndex,data.groups.length)\n                    excefletch(pageIndex + 1)\n                  }, 1000);\n                }\n                if (msg.pindex === 0 && objCount && Object.keys(objCount).length >= 0 && typeof (window) !== 'undefined') {\n                  try {\n                    window.ipcRenderer.send('count_badge', objCount)\n                  } catch (e) { }\n                }\n              })\n            }\n          })\n        }\n      }\n    }\n  }\n\n  checkGroupSeen(group) {\n    const unread = Number(rxaget(group, 'unread_cnt', 0))\n    if (unread > 0) {\n      return true\n    } else {\n      if (rxaget(group, 'count_unread', 0) > 0) {\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n\n  fetchImage(src, callback) {\n    const timenow = Math.floor(Date.now() / 1000)\n    try {\n      let timeCreateImg = (typeof this.checkImage[src] !== 'undefined') ? rxaget(this.checkImage[src], 'created_at', 0) : 0\n      if (!this.checkImage[src] || ((timenow - timeCreateImg) > 43200 && timeCreateImg > 0)) {\n        fetch(src, { headers: { 'TC-Token': this.token }, redirect: 'follow' })\n          .then(res => {\n            if (res && res.redirected && res.url && src) {\n              try {\n                callback(res.url)\n                this.props.netaBlobsUpdate(src, res.url)\n              } catch (e) {\n                callback('')\n              }\n            } else {\n              callback('')\n            }\n          })\n      } else {\n        callback(rxaget(this.checkImage[src], 'link', ''))\n      }\n    } catch (e) {\n      callback('')\n    }\n  }\n\n  searchBox_chooseGroup(group) {\n   \n    this.chooseGroup(group)\n    let timeSeach = Date.now()\n    // this.props.updateRecentSearchGroups(group.group_id, group, timeSeach)\n  }\n\n  chooseGroup(group) {\n    const group_id = group.group_id\n    let netaGroupsLastMess = global.rxu.json(rxgetLocal('netaGroupsLastMess'), {})\n    let last_message_id_tmp\n    if(group.group_id !== this.state.group_id){\n      if (typeof netaGroupsLastMess !== 'undefined' && typeof netaGroupsLastMess.groups !== 'undefined' && typeof netaGroupsLastMess.groups[group.group_id] !== 'undefined') {\n\n        last_message_id_tmp = netaGroupsLastMess.groups[group.group_id].last_message_id\n\n      } else {\n        last_message_id_tmp = group.last_message_id\n      }\n      if (group && group.last_message_id) {\n        this.checkReaded(group.group_id, last_message_id_tmp)\n      }\n      if (group.group_id) {\n        if (group.type === 3 && typeof (group.partner_id) === 'undefined') {\n          for (let i = 0; i < group.occupants_uins.length; i++) {\n            if (group.occupants_uins[i] !== String(this.userid)) {\n              group.partner_id = group.occupants_uins[i]\n            }\n          }\n        }\n        this.props.chooseGroupAction(group)\n\n        this.setState({\n          group_id: group_id,\n          group: group\n        }, () => {\n          if (last_message_id_tmp) {\n            this.checkReaded(group.group_id, last_message_id_tmp)\n          }\n        })\n\n        try {\n          if (typeof (window) !== 'undefined') {\n            window.ipcRenderer.send('remove_badge', group.group_id)\n          }\n        } catch (e) { }\n      }\n      \n    }\n  }\n\n  chooseContact() {\n    this.setState({ chooseContactAction: true })\n  }\n  \n  disableDrop = event => {\n    event.preventDefault();\n  }\n\n  checkReaded(group_id, mess_id) {\n    const groups = this.state.groups\n    const msg = {\n      group_id: group_id,\n      message_id: mess_id,\n      message: '',\n      status: 3\n    }\n\n    let findGroup = groups.find(o => o.group_id === group_id.toString())\n    if (findGroup && findGroup.last_message_id && findGroup.last_message_id.toString() !== mess_id.toString()) {\n      msg['message_id'] = findGroup.last_message_id\n    }\n\n    if (rxio.connected) {\n      let objGroup = groups.find(g => g.group_id === group_id)\n      if (objGroup) {\n        let cntNoti = rxaget(objGroup, 'count_unread', 0) + rxaget(objGroup, 'unread_cnt', 0)\n        if (cntNoti > 0) {\n          rxio.socket.emit('update_message', msg, (data) => {\n            if (groups && groups.constructor === Array && groups.length > 0) {\n              let checkchange = false\n              groups.forEach(group => {\n                if (group.group_id === group_id) {\n\n                  group.unread_cnt = 0\n                  group.count_unread = 0\n                  checkchange = true\n                  group.last_message_id = group.last_message.message_id\n                  this.props.netaGroupsUpdate(group.group_id, group, true)\n                }\n              })\n              if (checkchange) {\n                let index = this.state.groupsDisplay.length\n                if(index === 0){\n                  index = 20\n                }\n                let groupsDisplay = groups.slice(0, index)\n                this.setState({ groups:groups, groupsDisplay:groupsDisplay })\n              }\n            }\n          })\n        }\n      }\n    }\n  }\n\n  checkReadedOne(resolve, group_id, mess_id) {\n    const msg = {\n      group_id: group_id,\n      message_id: mess_id,\n      message: '',\n      status: 3\n    }\n\n    if (rxio.connected) {\n      rxio.socket.emit('update_message', msg, (data) => {\n        if (data && data.message && data.message.message_id) {\n          resolve(data.message.message_id)\n        }\n      })\n    }\n  }\n\n  loadMessTmp(group_id, callback) {\n    const msg = {\n      group_id: group_id,\n      pindex: 0,\n      psize: 30\n    }\n\n    if (rxio.connected) {\n      rxio.socket.emit('list_message', msg, (data) => {\n        if (data && data.last_message_id && data.messages && data.messages.constructor === Array && data.messages.length > 0) {\n          this.props.netaMessAdd(group_id, data.messages)\n          callback()\n        }\n      })\n    }\n  }\n\n  getNetaMessChecked(objGroup, cntNoti) {\n    let groupid = objGroup.group_id\n    this.props.netaMessGet(groupid, (objMess) => {\n      if (objMess) {\n        try {\n          let arrPromise = []\n          if (objMess && objMess.constructor === Object && Object.keys(objMess).length > 0) {\n            let arrMessTmp = Object.keys(objMess)\n            let amountMessNoti = ((arrMessTmp.length - cntNoti) > 0) ? cntNoti : arrMessTmp.length\n            objGroup.last_message_id = objMess[arrMessTmp[arrMessTmp.length - 1]]['message_id']\n            for (let i = (arrMessTmp.length - 1); i > (arrMessTmp.length - amountMessNoti - 1); i--) {\n              let omess = objMess[arrMessTmp[i]]['message_id']\n              arrPromise.push(new Promise((resolve, reject) => {\n                this.checkReadedOne(resolve, groupid, omess)\n              }))\n            }\n          }\n          if (arrPromise.length > 0) {\n            Promise.all(arrPromise).then((values) => {\n              if (values && values.constructor === Array && values.length > 0) {\n                objGroup.unread_cnt = 0\n                objGroup.count_unread = 0\n                this.props.netaGroupsUpdate(groupid, objGroup, true)\n              }\n            });\n          }\n        } catch (e) { }\n      } else {\n        this.loadMessTmp(groupid, () => {\n          setTimeout(() => {\n            this.getNetaMessChecked(objGroup, cntNoti)\n          }, 200)\n        })\n      }\n    })\n  }\n\n  checkedAllReaded(groupid) {\n    let groups = this.state.groups\n    let cntNoti = 0\n    let objGroup = groups.find(o => o.group_id === groupid)\n    if (objGroup) {\n      cntNoti = (rxaget(objGroup, 'count_unread', 0) > 0) ? rxaget(objGroup, 'count_unread', 0) : rxaget(objGroup, 'unread_cnt', 0)\n    }\n    if (cntNoti > 0) {\n      this.getNetaMessChecked(objGroup, cntNoti)\n    }\n  }\n\n  // check popup menu message group \n  onRightClickGroup(e, group) {\n    e.preventDefault();\n    document.oncontextmenu = function (e) {\n      return false;\n    }\n    // document.getElementById('menu-message').style.display = 'none'\n    const menuDiv = document.getElementById('context_menu-group')\n    // if(group.type === 2) {\n    if (menuDiv) {\n      menuDiv.style.top = e.clientY + 'px'\n      menuDiv.style.left = Number(e.clientX) + 'px'\n      menuDiv.style.display = 'block'\n    }\n    this.setState({ groupChooseItem_selected: group, group: group, flagRightMouse: true, groupRightMouse: group })\n    // } else {\n    //   menuDiv.style.display = 'none'\n    // }\n    // hide context-menu on message\n    const menuDivMessage = document.getElementById('menu-message')\n    if (menuDivMessage) {\n      menuDivMessage.style.top = e.clientY + 'px'\n      menuDivMessage.style.left = Number(e.clientX) + 'px'\n      menuDivMessage.style.display = 'none'\n    }\n  }\n\n  // checkTypeChooseGroup() {\n  //   let result = 0\n  //   let messSelectedType = rxaget(this.state, 'mess_selected.type', '')\n  //   if (rxaget(this.state, 'mess_selected.sender_uin', '').toString() === this.userid.toString()) {\n  //     if (messSelectedType === 12 || messSelectedType === 1 || messSelectedType === 6 || messSelectedType === 3 || messSelectedType === 4 || messSelectedType === 10) {\n  //       result = 1\n  //     } else {\n  //       result = 3\n  //     }\n  //   }\n  //   if (rxaget(this.state, 'mess_selected.status', 0) === 4) {\n  //     result = 2\n  //   }\n  //   if (rxaget(this.state, 'mess_selected.deleted_uins', []).indexOf(this.userid.toString()) !== -1) {\n  //     result = 2\n  //   }\n  //   if (result === 0 && rxaget(this.state, 'mess_selected.message', '') !== '') {\n  //     result = 3\n  //   }\n  //   if (result === 0 && rxaget(this.state, 'mess_selected.message', '') === '') {\n  //     if (messSelectedType === 12 || messSelectedType === 1 || messSelectedType === 6 || messSelectedType === 3 || messSelectedType === 4 || messSelectedType === 10) {\n  //       result = 1\n  //     } else {\n  //       result = 3\n  //     }\n  //   }\n  //   return result\n  // }\n\n  leaveGroupBtnClick() {\n    let tabmore = rxaget(this.props, 'tabmore', false)\n    if( tabmore.data === true){\n      tabmore.data = false\n      this.props.changeStatusTabmore('false')\n    }\n\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    let groupObjMemberIdArr = groupObj.occupants_uins\n    let contactsUsers = []\n    if (groupObj && groupObj.occupants_uins && groupObj.occupants_uins.constructor === Array && this.users && Object.keys(this.users).length > 0) {\n      for (const userid of Object.keys(this.users)) {\n        if (groupObjMemberIdArr.indexOf(userid.toString()) !== -1) {\n          contactsUsers.push(this.users[userid])\n        }\n      }\n      if (contactsUsers.length > 0) {\n        let user = rxaget(this.props, 'netaauth.user', {})\n        if (groupObj.type === 3) {\n          groupObj['delete_conversation'] = true  \n        }\n        \n        this.props.clickPopup('leave_group', { data: { groups: contactsUsers, user: user, group: groupObj } }, (data) => {\n          if (data) {\n            this.funcChooseLeader(groupObj, data)\n          } else {\n            if (groupObj.type === 3) {\n              this.deleteGroup(groupObj)\n            } else {\n              this.leaveGroup(groupObj)\n            }\n          }\n        })\n      }\n    }\n  }\n\n  funcChooseLeader(groupObjTmp, leaderChecked) {\n    let groupObj = groupObjTmp\n    let leaderMemberChecked = leaderChecked\n    let index = this.state.admin_uins_index\n\n    groupObj.admin_uins[index] = leaderMemberChecked.toString()\n    const params = {\n      group_id: Number(groupObj.group_id),\n      admin_uins: groupObj.admin_uins\n    }\n\n    rxio.addAdmin(params, (data) => {\n      if (data) {\n        try {\n          this.setState({ closeBtnClick: false, doneBtnClick: false })\n          const arrUsers = this.users\n          const user = rxaget(this.props, 'netaauth.user', {})\n          const objUser = arrUsers[user.id.toString()]\n          const paramsCreateMess = {\n            group_id: Number(this.state.group.group_id),\n            type: 6,\n            version: 1,\n            nonce: (Math.floor(Date.now()) * 1000).toString(),\n            sender_name: rxaget(objUser, 'full_name', ''),\n            attachments: JSON.stringify({\n              mediaType: 0, type: 'update_group',\n              admin_uins: [groupObj.admin_uins[index]]\n            }).replace(/\"/g, '\\\\\"'),\n            \"is_encrypted\": false, \"mentioned_all\": false\n          }\n          rxio.createMessage(paramsCreateMess, (dataMess) => {\n            if (dataMess) {\n              let groupObjNew = JSON.parse(JSON.stringify(groupObj))\n              groupObjNew.admin_uins = groupObjNew.admin_uins[index]\n              groupObjNew.last_message = dataMess.message\n              groupObjNew.last_message_id = dataMess.last_message_id\n              this.props.changeStatusLoadMess()\n              this.props.chooseGroupAction(groupObjNew)\n              this.props.netaGroupsUpdate(Number(groupObjNew.group_id), groupObjNew)\n              this.leaveGroup(groupObjNew)\n            }\n          })\n        } catch (error) { console.log(\"addAdmin\", error) }\n      }\n    })\n\n    this.setState({ displayLeaveGroupScreen: false })\n  }\n\n  leaveGroup(groupObjTmp=null) {\n    let groupObj = groupObjTmp\n    if (groupObj && groupObj.group_id) {\n      if (rxio.connected) {\n        const msgUpGroup = {\n          group_id: Number(groupObj.group_id)\n        }\n        let groupsStore = this.props.netaGroups\n\n        rxio.leaveGroup(msgUpGroup, (data) => {\n          if (data && [0, 1].indexOf(data.result) !== -1) {\n            this.setState({ displayLeaveGroupScreen: false }, () => {\n              this.props.netaGroupsRemove(groupObj.group_id)\n\n              if (groupsStore && groupsStore.groups) {\n                \n                let arrGroups = Object.keys(groupsStore.groups)\n                if (arrGroups.constructor === Array && arrGroups.length > 1) {\n                  arrGroups = arrGroups.filter(groupid => groupid !== groupObj.group_id.toString())\n                  if (groupsStore.groups && groupsStore.groups[arrGroups[0]]) {\n                    this.props.chooseGroupAction(groupsStore.groups[arrGroups[0]])\n                  }\n                }\n                if ([0,1].indexOf(arrGroups.length) !== -1)  {\n                  this.props.chooseGroupAction({group_id: ''})\n                }\n              } else {\n                this.props.chooseGroupAction({group_id: ''})\n              }\n            })\n          }\n        })\n\n      }\n    }\n  }\n\n  deleteGroup(groupObjTmp=null) {\n    let groupObj = groupObjTmp\n    if (groupObj && groupObj.group_id) {\n      if (rxio.connected) {\n        const msgUpGroup = {\n          group_id: Number(groupObj.group_id)\n        }\n        let groupsStore = this.props.netaGroups\n\n        rxio.deleteConversation(msgUpGroup, (data) => {\n          if (data && [0, 1].indexOf(data.result) !== -1) {\n            this.setState({ displayLeaveGroupScreen: false }, () => {\n              this.props.netaGroupsRemove(groupObj.group_id)\n              this.props.netaMessRemove(groupObj.group_id)\n              if (groupsStore && groupsStore.groups) {\n                let arrGroups = Object.keys(groupsStore.groups)\n                if (arrGroups.constructor === Array && arrGroups.length > 1) {\n                  arrGroups = arrGroups.filter(groupid => groupid !== groupObj.group_id.toString())\n                  if (groupsStore.groups && groupsStore.groups[arrGroups[0]]) {\n                    this.props.chooseGroupAction(groupsStore.groups[arrGroups[0]])\n                  }\n                } \n\n                if ([0,1].indexOf(arrGroups.length) !== -1)  {\n                  this.props.chooseGroupAction({group_id: ''})\n                }\n              } else {\n                this.props.chooseGroupAction({group_id: ''})\n              }\n            })\n          }\n        })\n\n      }\n    }\n  }\n\n  checkDisableNoti(group_id) {\n    let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n    let notificationStatus = this.state.notificationStatus\n    if (notificationStatus === true && netaAuthSetting && netaAuthSetting.groups && netaAuthSetting.groups[Number(group_id)]) {\n      let groupDisableNoti = netaAuthSetting.groups[Number(group_id)].disableNoti\n      return groupDisableNoti\n    } else {\n      return false\n    }\n\n  }\n\n  onChangeNotiGroup(group_id) {\n    try {\n      let disableNoti = !this.checkDisableNoti(group_id)\n      let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n      !netaAuthSetting.groups[Number(group_id)]\n        && (netaAuthSetting.groups[Number(group_id)] = {})\n      netaAuthSetting.groups[Number(group_id)].disableNoti = disableNoti\n      this.props.netaAuthSettingUpdate(netaAuthSetting)\n      this.props.changeStatusLoadMess()\n      this.setState({ disableNoti: disableNoti })\n    } catch (error) { console.log(\"onChangeNotiGroup\", error) }\n  }\n\n  groupChooseItem(e, value) {\n    let group_id_selected = this.state.groupChooseItem_selected.group_id\n    switch (value) {\n      case 'Mark as read':\n        console.log('Mark as read')\n        this.checkedAllReaded(group_id_selected)\n        break\n      case 'Turn off notifications':\n\n\n        this.onChangeNotiGroup(group_id_selected)\n        if (group_id_selected === this.state.group_id) {\n          this.props.chooseGroupAction(this.state.groupChooseItem_selected)\n        }\n\n        break\n      case 'Pin a conversation':\n        let groups = this.state.groups\n\n        for (let i = 0; i < groups.length; i++) {\n          if (groups[i].group_id === group_id_selected) {\n            if (this.checkGroupsPinned_uins(groups[i].pinned_uins) === true) {\n              rxio.unpinGroup(group_id_selected, (data) => {\n                if (data) {\n                  this.props.netaGroupsUpdateUnpin(String(this.userid), group_id_selected)\n                  this.setState({ pg_group: 0 }, () => {\n                    this.fetchGroups()\n                  })\n                }\n              })\n            } else {\n              rxio.pinGroup(group_id_selected, (data) => {\n                if (data) {\n                  this.setState({ pg_group: 0 }, () => {\n                    this.fetchGroups()\n                  })\n                }\n              })\n            }\n          }\n        }\n        break\n      case 'Hide a conversation':\n        console.log('Hide a conversation')\n        break\n      case 'Delete':\n        console.log('Delete')\n        break\n      default:\n        break\n\n    }\n  }\n\n  onClickShowPopup_ManageGroup() {\n    let tabmore = rxaget(this.props, 'tabmore', false)\n    if( tabmore.data === true){\n      tabmore.data = false\n      this.props.changeStatusTabmore('false')\n    }\n    this.setState({ isShowPopup_ManageGroup: true})\n  }\n\n  loadImgStatic(obj, name, url = global.rxu.config.cdn_endpoint) {\n    if (obj.sender_avatar) {\n      return global.rxu.config.get_static + obj.sender_avatar\n    } else if (obj.avatar_url) {\n      return global.rxu.config.get_static + obj.avatar_url\n    } else if (obj.type === 3 && !obj.avatar_url) {\n      const users = this.users\n      if (obj && obj.occupants_uins && obj.occupants_uins.constructor === Array && obj.occupants_uins.length === 2 && obj.occupants_uins.indexOf(this.userid.toString()) !== -1) {\n        const arruserid = obj.occupants_uins.filter(o => o !== this.userid.toString())\n        if (arruserid && arruserid.constructor === Array && arruserid[0] && users[arruserid[0]] && users[arruserid[0]].profile_url) {\n          return url + users[arruserid[0]].profile_url\n        }\n      } else {\n        return './images/default/static/avadefault.svg'\n      }\n    } else {\n      return './images/default/static/avadefault.svg'\n    }\n  }\n\n\n  // fixbug list member\n  loadGroupsTemp(occupants_uins, users) {\n    let groupId = occupants_uins//this.state.group.occupants_uins\n    let groups = users//this.users\n    let groupsTemp = []\n    let countMemberOnl = 0\n    if (groupId) {\n      for (const useridkey of Object.keys(groups)) {\n        for (let i = 0; i < groupId.length; i++) {\n          if (String(groupId[i]) === String(groups[(useridkey)].id)) {\n            groupsTemp.push(groups[(useridkey)])\n\n            if (groups[(useridkey)].online_status === 1) {\n              countMemberOnl++\n            }\n          }\n        }\n      }\n      this.setState({\n        groupsTemp: groupsTemp,\n        chooseLeader_groupsTemp: groupsTemp,\n        lg_chooseLeader_groupsTemp: groupsTemp,\n        countMemberOnl: countMemberOnl\n      })\n    }\n  }\n\n  closePopup() {\n    this.setState({ isShowPopup_ManageGroup: false })\n  }\n  // end choose leader\n\n  render() {\n    // console.log('Render Groups')\n    // console.log(\"group: Rerender\")\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  themeBackgroudValue: state.themeBackgroudValue,\n  langValue: state.langValue,\n  user: state.user,\n  netaauth: state.netaauth,\n  rxgroup: state.rxgroup,\n  netaGroups: state.netaGroups,\n  netaGroupsPin: state.netaGroupsPin,\n  netaContact: state.netaContact,\n  netaBlobs: state.netaBlobs,\n  tabmore: state.tabmore\n})\n\nconst mapDispatchToProps = {\n  userAdd,\n  userAddArr,\n  contactAdd,\n  netaGroupsUpdate,\n  netaGroupsUpdateArr,\n  netaBlobsUpdate,\n  chooseGroupAction,\n  changeStatusTabmore,\n  changeStatusLoadMess,\n  netaAuthSettingUpdate,\n  netaGroupsPinUpdate,\n  netaGroupsRemove,\n  netaGroupsUpdateUnpin,\n  clearRxContact,\n  clickPopup,\n  netaMessGet,\n  netaMessAdd,\n  netaUserSetGroupid,\n  netaMessRemove\n}\n\nconst GroupsWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default GroupsWrapped","import { connect } from 'react-redux'\nimport * as Jsx from './index.jsx'\n\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\nconst { rxaget, changeTheme } = global.rootRequire('classes/ulti')\nconst { netaCallHistoryUpdate, changeStatusTabmore, clickCall, updateRecentContactGroups } = global.rootRequire('redux')\nconst { checkBlock, updateUsersOnline } = global.rootRequire('classes/chat')\nconst themeData = global.rootRequire('classes/themeData.json')\nconst { rxgetLocal } = global.rootRequire('classes/request')\n\nclass Component_ extends RxComponent {\n  constructor(props, context) {\n    super(props, context, Jsx)\n    this.state = {\n      tabmore: rxaget(this.props, 'tabmore.data'),\n      group_id: rxaget(this.props, 'rxgroup.groupid', ''),\n      group: rxaget(this.props, 'rxgroup.group', {}),\n\n      listCallLog: [],\n      flagCalling: 0,\n      objsCalling: {},\n      objsGroupTmp: {},\n      showChatCall: false,\n      callType: 0, \n      flagTurnOffSoundCall: false,\n      typeCall: 1, \n      usersStatus:{},\n      countMemberOnl: 0,\n      isBlocked: false\n    }\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.users = rxaget(this.props, 'user.users', {}) || {}\n\n    this.config = {\n      iceServers: [{\n        urls: ['turn:dev.turn1.netalo.vn:3478'],\n        username: 'developer',\n        credential: 'password'\n      }, {\n        urls: ['stun:dev.stun1.netalo.vn:3478'],\n        username: 'developer',\n        credential: 'password'\n      }]\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!Object.is(this.users, nextProps.user.users)){\n      this.users = nextProps.user.users\n    }\n    let tabmore = (nextProps.tabmore === true || nextProps.tabmore.data === true) ? true : false\n    if (tabmore !== this.state.tabmore) {\n      this.setState({\n        tabmore: tabmore\n      })\n    }\n    if (nextProps.rxgroup && nextProps.rxgroup.group) {\n      let isBlocked = checkBlock(nextProps.rxgroup.group)\n      if (isBlocked !== this.state.isBlocked) {\n        this.setState({ isBlocked })\n      }\n    }\n    if (nextProps.usersStatus) {\n      try {\n        let groupTemp = nextProps.rxgroup.group || this.state.group\n        const { isChange, usersStatus, countMemberOnl } =\n          updateUsersOnline(groupTemp.occupants_uins, this.state.countMemberOnl, nextProps.usersStatus, this.state.usersStatus)\n        if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })   \n      } catch (error) { }\n    }\n    if (this.state.group_id && nextProps.netaGroups && nextProps.netaGroups.group_id_change === this.state.group_id) {\n      try {\n        let groupTemp = nextProps.netaGroups.groups[Number(this.state.group_id)]\n        this.setState({\n          group: groupTemp\n        })\n        if (groupTemp) {\n          const { isChange, usersStatus, countMemberOnl } = updateUsersOnline(groupTemp.occupants_uins, this.state.countMemberOnl, this.state.usersStatus)\n          if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })\n        }\n      } catch (error) { }\n    }\n  }\n\n  componentDidMount() {\n    const themeBackGround = global.rxu.json(rxgetLocal('netaThemeBackGround'), '')\n    let isBlocked = checkBlock(this.state.group)\n    if (isBlocked !== this.state.isBlocked) {\n      this.setState({ isBlocked })\n    }\n    if (themeBackGround==='darkTheme'){\n      changeTheme(themeData.nightTheme)\n    }else {\n      changeTheme(themeData.defaultTheme) \n    } \n    const { isChange, usersStatus, countMemberOnl } =\n      updateUsersOnline(this.state.group.occupants_uins, this.state.countMemberOnl, this.state.usersStatus)\n    if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })\n  }\n\n  componentDidUpdate(nextprop) {\n    const new_group = rxaget(nextprop, 'rxgroup.group', {})\n    if (new_group.group_id !== '' && new_group.group_id !== this.state.group_id) {\n      this.setState({ group: new_group, group_id: new_group.group_id })\n    }\n  }\n\n  onClickTabMore() {\n    const tabmore = this.state.tabmore\n    this.props.changeStatusTabmore(!tabmore)\n  }\n\n  onClickStartCall(typeCall) {\n    \n    // this.props.updateRecentContactGroups(this.state.group.partner_id,Date.now())\n    this.props.clickCall(typeCall, {\n      group_id: rxaget(this.state, 'group.group_id', '' ),\n      type: rxaget(this.state, 'group.type', 0 ),\n      occupants_uins: rxaget(this.state, 'group.occupants_uins', [] )\n    })\n  }\n\n  helpTimeText(timestamp) {\n    const a = new Date(timestamp * 1000)\n    const months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\n    const month = months[a.getMonth()]; const date = a.getDate(); const hour = a.getHours(); const min = a.getMinutes()\n    const time = `${date}/${month} ${hour}:${min}`\n    return time\n  }\n\n  loadImgStatic(obj, name, url=global.rxu.config.cdn_endpoint) {\n    if (obj.sender_avatar) {\n      return global.rxu.config.get_static + obj.sender_avatar\n    } else if (obj.avatar_url) {\n      return global.rxu.config.get_static + obj.avatar_url\n    } else if (obj.type === 3 && !obj.avatar_url) {\n      const users = this.users\n      if (obj && obj.occupants_uins && obj.occupants_uins.constructor === Array && obj.occupants_uins.length === 2 && obj.occupants_uins.indexOf(this.userid.toString()) !== -1) {\n        const arruserid = obj.occupants_uins.filter(o => o !== this.userid.toString())\n        if (arruserid && arruserid.constructor === Array && arruserid[0] && users[arruserid[0]] && users[arruserid[0]].profile_url) {\n          return url + users[arruserid[0]].profile_url\n        }\n      } else {\n        return './images/default/static/avadefault.svg'\n      }\n    } else {\n      return './images/default/static/avadefault.svg'\n    }\n  }\n\n  uniqArray(a) {\n   return Array.from(new Set(a));\n  }\n\n  render() {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  langValue: state.langValue,\n  rxgroup: state.rxgroup,\n  user: state.user,\n  netaauth: state.netaauth,\n  netaCallHistory: state.netaCallHistory,\n  netaGroups: state.netaGroups,\n  tabmore: state.tabmore,\n  usersStatus: state.usersStatus\n})\n\nconst mapDispatchToProps = {\n  netaCallHistoryUpdate,\n  changeStatusTabmore,\n  updateRecentContactGroups,\n  clickCall\n}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","/*global translate*/\nimport { connect } from 'react-redux'\nimport * as Jsx from './index.jsx'\nimport React, { Fragment } from 'react'\n\n\nconst stickerDataObj = global.rootRequire('classes/stickerData.json');\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\nconst { timeConverter, timeToDate, secondToTime, rxaget, formatBytes, subString, changeTheme, changeTheme_ThemeColor, changeThemeColor, rxconfig, isElectron, sortArrObj, timesUnixToDate, convertSecondUnix } = global.rootRequire('classes/ulti')\nconst { updateUserStatus, netaGroupsRemove, netaBlobsUpdate, netaMessAdd, netaMessPin, chooseGroupAction, netaUserUpdate, netaGroupsUpdate, netaGroupsUpdateLastMess, changeStatusTabmore, netaLinkAdd, netaMediaOneAdd,userClickUpdate } = global.rootRequire('redux')\nconst { checkIsOwner, parseMessageDesc, checkNameUser, checkNameGroup } = global.rootRequire('classes/chat')\nconst rxio = global.rootRequire('classes/socket').default\nconst { rxgetLocal, rxsetLocal } = global.rootRequire('classes/request')\nconst themeData = global.rootRequire('classes/themeData.json')\nconst themeColorData = global.rootRequire('classes/themeColorData.json')\nconst theme_themeColorData = global.rootRequire('classes/theme_themeColorData.json')\nlet zget = global.rxu.get\n\nwindow.ClickInfoUser = (useridtmp,userOwnerid,groupid) => {\n  if(useridtmp !== userOwnerid){\n    let user = window[useridtmp]\n    let partner_id = user.id\n    let userOwner = window[userOwnerid]\n    let userClick_group =window[groupid]\n    window.vmChat.setState({\n      infoUserScreen: true,\n      // currentAvatarUser: user.avatar, \n      // currentNameUser: user.name,\n      userInfo:user,\n      avatarClick_user: user,\n      currentSender_uin: useridtmp,\n      userClick_group:userClick_group,\n      tagIsClick: true,\n      // avatarClick_omess: user.msg,\n    })\n  }\n}\n\nclass Component_ extends RxComponent {\n  constructor(props, context) {\n    super(props, context, Jsx)\n    this.state = {\n      stickerFolderName: [],\n      arrTabsDisplay: [],\n      messages: {},\n      pinedMess: {},\n      group_id: rxaget(this.props, 'rxgroup.groupid', ''),\n      group: rxaget(this.props, 'rxgroup.group', {}),\n      groupfw: '',\n      scroll_mess: true,\n      scrollChatBoxStatus: false,\n      tabmore: rxaget(this.props, 'tabmore.data', false),\n      id_userclick: '',\n      groupid_forward_old: 'null',\n      tabmoreNextprop: false,\n      seenMess: false,\n      lastSeenMessId: '',\n      lastSeenMessObj: {},\n      userInfo: {},\n      screenUserInfo: false,\n      avatarClick_user: '',\n      avatarClick_omess: '',\n      pathImg: './images/sticker',\n      currentAvatarUser: '',\n      currentNameUser: '',\n      displayScrollDownBtn: false,\n      isForwardAudio:false,\n      tagnameClick_status:false,\n      arrData: [],\n      tabActive: 'images',\n      userClick_group:{},      \n      displaymodalpin:'',\n      displayDragAndDrop: false,\n    }\n    this.dropRef_Mess = React.createRef()\n\n    let tmp_stickerFolderName = rxgetLocal('netaStickerFolder')\n    if (tmp_stickerFolderName) {\n      tmp_stickerFolderName = global.rxu.json(rxgetLocal('tmp_stickerFolderName'), {})\n      this.state.stickerFolderName = tmp_stickerFolderName\n    }\n\n    let dataSticker = global.rxu.json(rxgetLocal('rxsticker'), {})\n    if (dataSticker.pathimg) {\n      this.state.pathImg = dataSticker.pathimg\n    }\n\n    \n    this.groupid_forward = 'null'\n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n    this.user = rxaget(this.props, 'netaauth.user', '')\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.users = rxaget(this.props, 'user.users', {})\n    this.groups = rxaget(this.props, 'netaGroups.groups', {})\n    this.pg_mess = 1\n    this.countNoti = {}\n    this.loadRenderer = 0\n    this.indexImageForward = -1\n    this.strImgForward = ''\n    this.timer = {}\n\n    this.state.mess_reply = {}\n    this.state.mess_selected = {}\n    this.state.mess_id = ''\n    this.state.pin_mess_id = ''\n    this.state.type_option = 0\n    this.state.audio = {}\n\n    this.checkImage = {}\n    this.checkLink = {}\n    this.blockDownload = false\n\n    this.keyClickFunction = this.keyClickFunction.bind(this);\n    this.changeMessage = this.changeMessage.bind(this)\n    this.scrollChatBox = this.scrollChatBox.bind(this)\n    this.playAudio = this.playAudio.bind(this)\n    this.downloadFile = this.downloadFile.bind(this)\n    this.openExternalLink = this.openExternalLink.bind(this)\n    this.showGallery = this.showGallery.bind(this)\n    this.getGallery = this.getGallery.bind(this)\n    this.handleMessage = this.handleMessage.bind(this)\n    this.reloadStateWhenRepMess = this.reloadStateWhenRepMess.bind(this)\n    this.resetSelectedMess = this.resetSelectedMess.bind(this)\n    this.unPin = this.unPin.bind(this)\n    this.convertTagName = this.convertTagName.bind(this)\n    this.parseMessage = this.parseMessage.bind(this)\n    this.loadHandleSocket = this.loadHandleSocket.bind(this)\n    this.onClickInfoUser = this.onClickInfoUser.bind(this)\n    this.onClickNameUser = this.onClickNameUser.bind(this)\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n\n    window.vmChat = this //register vm\n  }\n\n  componentDidMount() {\n    let div = this.dropRef_Mess.current\n    div.addEventListener('dragenter', this.handleDragIn)\n    if (rxio.socket) {\n      rxio.socket.on('user_status', (data) => {\n        console.log(\"user_status\",data)\n        this.props.updateUserStatus(data)\n      })\n      \n    }\n    try {\n      let stickerFolderName = []\n      let stickerDataTmp = global.rxu.json(rxgetLocal('rxsticker'), {})\n      let stickerData = (stickerDataTmp.version) ? stickerDataTmp : stickerDataObj\n      if (stickerData && stickerData.stickerData) {\n        stickerData.stickerData.forEach(o => {\n          if (o.type && o.type !== 'history' && o.type !== 'EmojiIcon') {\n            stickerFolderName.push(o.type)\n          }\n        })\n      }\n      let group = rxaget(this.props, 'rxgroup.group', {})\n\n      if (typeof group !== 'undefined') {\n        let lastSeenMessObj = global.rxu.json(rxgetLocal('netaLastSeenMessObj'), '')\n        let groupId = rxaget(this.props, 'rxgroup.groupid', '')\n        let rxlastSeenMessId = ''\n        if(group && group.last_message ){\n          rxlastSeenMessId = group.last_message.message_id\n        }\n        let seen_uins_list = []\n\n        if (group && group.seen_list && group.seen_list.constructor === Array && group.seen_list.length > 0) {\n          if(group.seen_list[1]){            \n            seen_uins_list = group.seen_list[1].message_id\n          }else{\n            if(group.seen_list[0]){\n              seen_uins_list  = group.seen_list[0].message_id \n            }\n          }\n        }\n        //<check seen mess>\n        if (typeof lastSeenMessObj === 'undefined' || !this.findGroup(groupId)) {\n          lastSeenMessObj[groupId] = { lastSeenMessId: rxlastSeenMessId, seen_uins_list: seen_uins_list }\n          rxsetLocal('netaLastSeenMessObj', JSON.stringify(lastSeenMessObj))\n        }\n        this.setState({ lastSeenMessObj: lastSeenMessObj, stickerFolderName: stickerFolderName, arrTabsDisplay: stickerData.stickerData })\n      }\n    }\n    catch (e) {\n      console.log(e)\n    }\n\n    this.loadDidMount()\n\n    if (window && window.ipcRenderer) {\n      window.ipcRenderer.on('reload_page', (event, args) => {\n        if (rxaget(this.state.group, 'group_id', '') !== '') {\n          this.countNoti = {}\n          this.chooseGroup(this.state.group)\n\n          if (this.loadRenderer < 2) {\n            rxio.getWaitMessage((data) => {\n              this.handleMessage(data, true)\n            })\n            rxio.getWaitMessDel((data) => {\n              this.handleMessage(data, false)\n            })\n          }\n\n          this.loadRenderer += 1\n\n        }\n      })\n      window.ipcRenderer.on('new_sticker', (event, args) => {\n        if (args) {\n          try {\n            let objSticker = JSON.parse(args)\n            if (objSticker.version) {\n              // this.updateSticker(objSticker)\n              this.setState({ pathImg: objSticker.pathimg })\n            }\n          } catch (e) {\n          }\n        }\n      })\n    }\n    const color = global.rxu.json(rxgetLocal('netaThemeColor'), '')\n    const themeBackGround = global.rxu.json(rxgetLocal('netaThemeBackGround'), '')\n\n    if (themeBackGround === 'darkTheme') {\n      changeTheme(themeData.nightTheme)\n      changeTheme_ThemeColor(theme_themeColorData.nightTheme)\n    } else {\n      changeTheme(themeData.defaultTheme)\n      if (color === 'blueColor') {\n        changeTheme_ThemeColor(theme_themeColorData.blueColor)\n      } else {\n        changeTheme_ThemeColor(theme_themeColorData.orangeColor)\n      }\n    }\n    if (color === 'blueColor') {\n      changeThemeColor(themeColorData.blueColor)\n    } else {\n      changeThemeColor(themeColorData.orangeColor)\n    }\n    this.chooseGroup(this.state.group)\n  }\n  \n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if( nextProps.rxgroup && \n        nextProps.rxgroup.group &&\n        nextProps.rxgroup.group.blocked_uins &&\n        this.state.group &&\n        this.state.group.blocked_uins &&\n        this.state.group.blocked_uins.length !== nextProps.rxgroup.group.blocked_uins.length){\n      let group = nextProps.rxgroup.group\n      this.groups[group.group_id]= group\n    }\n    if (Object.getOwnPropertyNames(this.users).length === 0) {\n      this.users = nextProps.user.users\n    }\n    let lastSeenMessObj = global.rxu.json(rxgetLocal('netaLastSeenMessObj'), '')\n\n    if (rxaget(nextProps, 'rxgroup.groupid', '') && \n      rxaget(nextProps, 'rxgroup.group.group_id', '') && \n      rxaget(nextProps, 'rxgroup.groupid', '') !== this.state.group_id) {\n      try {\n        let group = rxaget(nextProps, 'rxgroup.group', {})\n        if (typeof group !== 'undefined') {\n          let groupId = rxaget(nextProps, 'rxgroup.groupid', '')\n          let rxlastSeenMessId = ''\n          if(group.seen_list[1]){\n            rxlastSeenMessId  = group.seen_list[1].message_id \n          }else{\n            if(group.seen_list[0]){\n              rxlastSeenMessId  = group.seen_list[0].message_id \n            }\n          }\n          /*check seen mess*/\n          if (!this.findGroup(groupId)) {\n            let seen_uins_list = []\n            lastSeenMessObj[groupId] = { lastSeenMessId: rxlastSeenMessId, seen_uins_list: seen_uins_list }\n            rxsetLocal('netaLastSeenMessObj', JSON.stringify(lastSeenMessObj))\n          }\n        }\n      }\n      catch (e) {\n        console.log('error',e)\n      }\n      this.setState({ group: nextProps.rxgroup.group })\n      this.chooseGroup(rxaget(nextProps, 'rxgroup.group', {}))\n    }\n    let mess_selected = this.state.mess_selected\n    if (typeof mess_selected.groupfw === 'undefined') {\n      if (mess_selected.group_id && (mess_selected.group_id !== rxaget(nextProps, 'rxgroup.group.group_id', ''))) {\n        this.resetSelectedMess()\n      }\n    } else {\n      if (mess_selected.groupfw !== rxaget(nextProps, 'rxgroup.group.group_id', '')) {\n        this.resetSelectedMess()\n      }\n    }\n\n    if (rxaget(nextProps, 'loadmess.data', false) !== rxaget(this.props, 'loadmess.data', false)) {\n      this.loadDidMount()\n    }\n    if (JSON.stringify(nextProps.tabmore.data) !== JSON.stringify(this.state.tabmoreNextprop) ||\n      JSON.stringify(lastSeenMessObj) !== JSON.stringify(this.state.lastSeenMessObj)) {\n      this.setState({ tabmoreNextprop: nextProps.tabmore.data, lastSeenMessObj: lastSeenMessObj })\n    }\n    if (nextProps.netaGroups && \n      // JSON.stringify(nextProps.netaGroups) !== JSON.stringify(this.netaGroups)\n      nextProps.netaGroups.status !== rxaget(this.props, 'netaGroups.status', {})) {\n      this.groups = rxaget(nextProps, 'netaGroups.groups', {})\n      this.netaGroups = nextProps.netaGroups\n      let groupsTmp = JSON.parse(JSON.stringify(rxaget(nextProps, 'netaGroups.groups', {})))\n      let arrGroupsTmp = []\n      Object.keys(groupsTmp).forEach(keygroup => {\n        if (groupsTmp[keygroup].last_message) {\n          try {\n            groupsTmp[keygroup].timestamp = (groupsTmp[keygroup].last_message.created_at\n              && Number(groupsTmp[keygroup].last_message.created_at)) || new Date().getTime() * 1000\n            arrGroupsTmp.push(groupsTmp[keygroup])\n          } catch (error) { }\n        }\n      })\n      let arrGroups = arrGroupsTmp.sort((a, b) => (a.timestamp > b.timestamp) ? -1 : ((b.timestamp > a.timestamp) ? 1 : 0))\n      arrGroups.forEach(ogroup => {\n        ogroup.group_fullname = checkNameGroup(ogroup, this.users, this.userid)\n        if (ogroup && (ogroup.type === 3 || ogroup.type === 5) && !ogroup.avatar_url && rxaget(ogroup, 'occupants_uins', []).length === 2) {\n          const arrUins = rxaget(ogroup, 'occupants_uins', [])\n          ogroup['partner_id'] = (arrUins[0].toString() === this.userid.toString()) ? arrUins[1] : arrUins[0]\n        }\n      })\n    }\n  }\n\n  getGroupByUserId(partner_id){\n    let group = {}\n    let groupsTmp = this.users[partner_id]\n    if (groupsTmp) {\n      let group_id = groupsTmp.group_id\n      if(group_id){\n        group = this.groups[group_id]\n      }  \n    }\n    \n    return group\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyClickFunction, false);\n    document.removeEventListener('mousedown', this.handleClickOutside);\n    window.playAudio = null\n    window.downloadFile = null\n    window.showGallery = null\n    window.getGallery = null\n    window.openExternalLink = null\n\n    let div = this.dropRef_Mess.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n  }\n\n  handleDragIn = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.setState({displayDragAndDrop:true})\n  }\n\n  handleDragOut (e){\n    this.setState({displayDragAndDrop:false})\n  }\n\n  findGroup(groupid) {\n    let netaLastSeenMessObj = global.rxu.json(rxgetLocal('netaLastSeenMessObj'), '')\n    let flagGroupId = false\n    for (const groupId of Object.keys(netaLastSeenMessObj)) {\n      if (groupId === groupid) {\n        flagGroupId = true\n      }\n    }\n    return flagGroupId\n  }\n\n  findSeen_uins(seen_uins, groupid) {\n    let flag = false\n    try {\n      let netaLastSeenMessObj = global.rxu.json(rxgetLocal('netaLastSeenMessObj'), '')\n      if (typeof netaLastSeenMessObj !== 'undefined') {\n        let seen_uins_list = netaLastSeenMessObj[groupid].seen_uins_list\n        for (let i = 0; i < seen_uins_list.length; i++) {\n          if (seen_uins === seen_uins_list[i]) {\n            flag = true\n          }\n        }\n      }\n    }\n    catch (e) {\n\n    }\n\n    return flag\n  }\n\n  updatelastSeenMessObj(data) {\n    let lastSeenMessObj = global.rxu.json(rxgetLocal('netaLastSeenMessObj'), '')\n    let groupId = data.group_id\n    let seen_uins_list = []\n    let lastSeenMessId\n\n    if (typeof lastSeenMessObj[groupId] !== 'undefined') {\n      if (data.message_id === lastSeenMessObj[groupId].lastSeenMessIdTmp) {\n        seen_uins_list = lastSeenMessObj[groupId].seen_uins_list\n      } else {\n        seen_uins_list.push(data.seen_uins[0])\n      }\n\n      if (typeof data.seen_uins[0] === 'undefined') {\n        if (!this.findSeen_uins(data.sender_uin, groupId)) {\n          seen_uins_list.push(data.sender_uin)\n        }\n      } else {\n        if (!this.findSeen_uins(data.seen_uins[0], groupId)) {\n          seen_uins_list.push(data.seen_uins[0])\n        }\n      }\n\n      if (!this.findSeen_uins(String(this.userid), groupId)) {\n        seen_uins_list.push(String(this.userid))\n      }\n\n      if (this.state.group.type === 3) {\n        lastSeenMessId = data.message_id\n      } else {\n        if (seen_uins_list.length === this.state.group.occupants_uins.length) {\n          lastSeenMessId = data.message_id\n        } else {\n          lastSeenMessId = lastSeenMessObj[groupId].lastSeenMessId\n        }\n      }\n\n      lastSeenMessObj[groupId] = { lastSeenMessId: lastSeenMessId, lastSeenMessIdTmp: data.message_id, seen_uins_list: seen_uins_list }\n      rxsetLocal('netaLastSeenMessObj', JSON.stringify(lastSeenMessObj))\n      this.setState({ lastSeenMessObj: lastSeenMessObj })\n      this.props.netaGroupsUpdateLastMess(data.group_id, data.message_id, data)\n    } else {\n      let seen_uins_list = []\n      lastSeenMessId = ''\n\n      //<check seen mess>\n      lastSeenMessObj[groupId] = { lastSeenMessId: lastSeenMessId, seen_uins_list: seen_uins_list }\n      rxsetLocal('netaLastSeenMessObj', JSON.stringify(lastSeenMessObj))\n      this.updatelastSeenMessObj(data)\n\n    }\n  }\n\n  loadHandleSocket() {\n    rxio.getWaitConnect((data) => {\n      if (data) {\n        if (rxaget(this.props, 'rxgroup.group.group_id', '') !== '') {\n          this.chooseGroup(this.state.group)\n        }\n        rxio.getWaitMessage((data) => {\n          this.props.netaMessAdd(data.group_id, data)\n          this.handleMessage(data, true)\n          try {\n            this.updatelastSeenMessObj(data)\n          } catch (e) {}\n        })\n\n\n        rxio.getWaitLiveLocation((data) => {\n          this.props.netaMessAdd(data.group_id, data)\n          this.handleMessage(data, true)\n          try {\n            this.updatelastSeenMessObj(data)\n          } catch (e) {}\n\n        })\n\n        rxio.getUpdateMessage((data) => {\n          try {\n            if (data.seen_uins.length > 0) {\n              this.updatelastSeenMessObj(data)              \n            }\n          }\n          catch (e) {\n          }\n\n        })\n        rxio.getUpdateGroup((data) => {\n          try {\n            let groupObjSelected = this.state.group\n            const arrGroupObj = rxaget(this.props, 'netaGroups.groups', {})\n\n            // console.log(\"***data: \", data)\n            let groupObj = arrGroupObj[data.group_id]\n            if (groupObj) {\n              if (data.avatar_url || data.name) {\n                groupObj.avatar_url = data.avatar_url || groupObj.avatar_url\n                groupObj.name = data.name || groupObj.name\n                groupObj.group_name = data.group_name || data.name || groupObj.group_name\n                groupObj.group_fullname = data.group_fullname || data.name || groupObj.group_fullname\n                this.props.netaGroupsUpdate(data.group_id, groupObj)\n                if (groupObjSelected.group_id === data.group_id) this.props.chooseGroupAction(groupObj)\n              }\n              if (data.owner_uin && Number(data.owner_uin) > 0) {\n                groupObj.owner_uin = data.owner_uin\n                this.props.netaGroupsUpdate(data.group_id, groupObj)\n                if (groupObjSelected.group_id === data.group_id) this.props.chooseGroupAction(groupObj)\n              }\n              if (data.added_admin_all.length > 0) {\n                // let groupObj = this.state.group\n                let admin_uinsArr = groupObj.admin_uins\n                for (let i = 0; i < data.added_admin_all.length; i++) {\n                  let admin_uin = data.added_admin_all[i]\n                  admin_uinsArr.push(admin_uin.toString())\n                }\n                groupObj.admin_uins = admin_uinsArr\n\n                this.props.netaGroupsUpdate(data.group_id, groupObj)\n                if (groupObjSelected.group_id.toString() === data.group_id.toString()) {\n                  groupObjSelected.admin_uins = admin_uinsArr\n                  this.props.chooseGroupAction(groupObjSelected)\n                }\n              }\n              if (data.unblocked_all.length > 0 || data.blocked_all.length > 0) {\n                groupObj.blocked_uins = data.blocked_all.length > 0 ? [...data.blocked_all] : []\n                if (groupObjSelected.group_id.toString() === data.group_id.toString()) {\n                  groupObjSelected.blocked_uins = [...data.blocked_all]\n                  this.props.chooseGroupAction(groupObjSelected)\n                }\n                this.props.netaGroupsUpdate(data.group_id, groupObj)\n              }\n              if (data.pull_all.length > 0) {\n                // let groupObj = this.state.group\n                let groupObjMemberIdArr = JSON.parse(JSON.stringify(groupObj.occupants_uins))\n                let memberLeaveGroup = Number(data.pull_all[0])\n                let i = groupObjMemberIdArr.indexOf(memberLeaveGroup);\n                if (i === -1) i = groupObjMemberIdArr.indexOf(memberLeaveGroup.toString());\n                if (i !== -1) {\n                  groupObjMemberIdArr.splice(i, 1)\n                }\n                groupObj.occupants_uins = groupObjMemberIdArr\n\n                this.props.netaGroupsUpdate(data.group_id, groupObj)\n                if (groupObjSelected.group_id.toString() === data.group_id.toString()) {\n                  groupObjSelected.occupants_uins = groupObjMemberIdArr\n                  // console.log(\"   groupObjSelected.occupants_uins \",   groupObjSelected.occupants_uins )\n                  this.props.chooseGroupAction(groupObjSelected)\n                }\n\n                this.setState({ group: groupObjSelected })\n\n                if (data.pull_all.indexOf(this.userid.toString()) >= 0) {\n                  this.props.netaGroupsRemove(groupObj.group_id)\n                  if (groupObjSelected.group_id.toString() === data.group_id.toString()) {\n                    try {\n                      let arrGroups = []\n                      Object.keys(this.groups).forEach(keygroup => {\n                        if (this.groups[keygroup].last_message) {\n                          this.groups[keygroup].timestamp = (this.groups[keygroup].last_message.created_at\n                            && Number(this.groups[keygroup].last_message.created_at)) || new Date().getTime() * 1000\n                          arrGroups.push(this.groups[keygroup])\n\n                        }\n                      })\n                      arrGroups = arrGroups.sort((a, b) => (a.timestamp > b.timestamp) ? -1 : ((b.timestamp > a.timestamp) ? 1 : 0))\n                      const i = arrGroups.findIndex(o => o.group_id.toString() === data.group_id.toString())\n                      let curIndex = i ? 0 : 1\n                      this.props.chooseGroupAction(arrGroups[curIndex])\n                    } catch (error) { console.log(\"error\", error) }\n                  }\n                }\n              }\n\n              if (data.push_all.length > 0) {\n                if (groupObj) {\n                  let groupObjMemberIdArr = JSON.parse(JSON.stringify(groupObj.occupants_uins))\n                  let memberArrPush = data.push_all\n\n                  for (let i = 0; i < memberArrPush.length; i++) {\n                    groupObjMemberIdArr.push(String(memberArrPush[i]))\n                  }\n                  groupObj.occupants_uins = Array.from(new Set(groupObjMemberIdArr))\n                  // console.log(\"groupObj++++\", groupObj)\n                  this.props.netaGroupsUpdate(data.group_id, groupObj)\n\n                  if (rxaget(this.props, 'rxgroup.groupid', '') === data.group_id) {\n                    this.props.chooseGroupAction(groupObj) \n                  }\n\n                }\n              }\n\n              if (data.pinned_message && groupObjSelected.group_id === data.group_id) {\n                try {\n                  this.setState({ pinedMess: this.pushToObjMess(this.state.pinedMess, data.pinned_message, \"pinned_at\") }, () => {\n                  })\n                } catch (e) {\n                  console.log(e)\n                }\n              }\n              else if (data.unpinned_message_all && groupObjSelected.group_id === data.group_id) {\n                try {\n                  this.setState({ pinedMess: {} })\n                } catch (e) {\n                  console.log(e)\n                }\n              }\n            }\n          } catch (e) { console.log(\"e\", e) }\n        })\n        rxio.getWaitMessDel((data) => {\n          this.handleMessage(data, false)\n        })\n        rxio.getPinGroup((data) => {\n          this.handleMessage(data, false)\n        })\n        rxio.getUnpinGroup((data) => {\n          this.handleMessage(data, false)\n        })\n        // setTimeout(() => {\n        //   rxio.getUser_status((data) => {\n        //     this.updateOnlineStatus(data)\n        //   })\n        // }, 300)\n      } else {\n        setTimeout(() => {\n          this.loadHandleSocket()\n        }, 300)\n      }\n    })\n  }\n\n  loadDidMount() {\n    document.addEventListener('keydown', this.keyClickFunction, false);\n    document.addEventListener('mousedown', this.handleClickOutside);\n    if (this.token && this.userid) {\n      if (!rxio.connected && !rxio.init_connected) {\n        rxio.login(this.token, this.userid, (data) => {\n          if (rxaget(this.state.group, 'group_id', '') !== '') {\n            this.chooseGroup(this.state.group)\n          }\n          rxio.getWaitMessage((data) => {\n            this.handleMessage(data, true)\n          })\n\n          rxio.getWaitMessDel((data) => {\n            this.handleMessage(data, false)\n          })\n        })\n      } else {\n        this.loadHandleSocket()\n      }\n    }\n\n    if (window && window.ipcRenderer) {\n      window.ipcRenderer.on('click_notification', (event, args) => {\n        if (args && args.group_id && rxaget(this.groups, args.group_id, null)) {\n          let groupNoti = rxaget(this.groups, args.group_id, {})\n          this.chooseGroup(groupNoti)\n        }\n      })\n\n      window.ipcRenderer.on('set_link_review', (event, args) => {\n        let objlink = rxaget(this.props, 'netaLink.data.' + args.uid, {})\n        if (args && args.uid) {\n          if (!objlink.uid) {\n            this.props.netaLinkAdd(args.uid, args)\n          }\n        }\n      })\n    }\n    window.playAudio = this.playAudio\n    window.downloadFile = this.downloadFile\n    window.showGallery = this.showGallery\n    window.getGallery = this.getGallery\n    window.openExternalLink = this.openExternalLink\n  }\n\n  closeScreenUserInfo() {\n    this.setState({ screenUserInfo: false })\n  }\n\n  fetchImage(src, callback) {\n    const timenow = Math.floor(Date.now() / 1000)\n    try {\n      let timeCreateImg = (typeof this.checkImage[src] !== 'undefined') ? rxaget(this.checkImage[src], 'created_at', 0) : 0\n      if (!this.checkImage[src] || ((timenow - timeCreateImg) > 43200 && timeCreateImg > 0)) {\n        fetch(src, { headers: { 'TC-Token': this.token }, redirect: 'follow' })\n          .then(res => {\n            if (res && res.redirected && res.url && src) {\n              try {\n                callback(res.url)\n                this.props.netaBlobsUpdate(src, res.url)\n              } catch (e) {\n                callback('')\n              }\n            } else {\n              callback('')\n            }\n          })\n      } else {\n        callback(rxaget(this.checkImage[src], 'link', ''))\n      }\n    } catch (e) {\n      callback('')\n    }\n  }\n\n  avatarClick(omess) {\n    let usersinfo = zget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users') || {}\n    let userAvataClick = zget(usersinfo, [omess.sender_uin], {})\n    this.setState({\n      screenUserInfo: true,\n      avatarClick_user: userAvataClick,\n      avatarClick_omess: omess,\n    })\n  }\n\n  convertOmessUser(omess) {\n    let usersinfo = zget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users') || {}\n    let user = zget(usersinfo, [omess.sender_uin], {})\n    return user\n  }\n\n  keyClickFunction(event) {\n    if (event.keyCode === 27) {\n      this.closeGallery()\n    }\n  }\n\n  playAudio(audio_id) {\n    let audio = this.state.audio\n    audio[audio_id] = (!audio[audio_id]) ? true : false\n    this.setState({ audio: audio }, () => {\n      const iconAudioDiv = document.getElementById(audio_id)\n      if (iconAudioDiv) {\n        let idDivAudio = audio_id.replace('icon-', '')\n        let audioDiv = document.getElementById(idDivAudio)\n        if (audio[audio_id]) {\n          iconAudioDiv.src = './images/default/static/icon-media-pause.svg'\n          if (audioDiv) {\n            audioDiv.play()\n            audioDiv.ontimeupdate = () => {\n              const processAudioDiv = document.getElementById('process-' + idDivAudio)\n              if (processAudioDiv) {\n                processAudioDiv.style.width = ((audioDiv.currentTime / audioDiv.duration) * 100) + '%'\n              }\n              if (audioDiv.currentTime === audioDiv.duration) {\n                audioDiv.load()\n                iconAudioDiv.src = './images/default/static/icon-media-play.svg'\n                processAudioDiv.style.width = '0%'\n              }\n            }\n          }\n        } else {\n          iconAudioDiv.src = './images/default/static/icon-media-play.svg'\n          if (audioDiv) {\n            audioDiv.pause()\n          }\n        }\n      }\n    })\n  }\n\n  showGallery(strimages, index) {\n    this.setState({displaymodalpin:false, checkgallery: true, galleryImages: strimages, galleryPosition: Number(index) })\n  }\n\n  getGallery(strimages, index) {\n    this.indexImageForward = index\n    this.strImgForward = strimages\n  }\n\n  closeGallery() {\n    this.setState({ checkgallery: false, galleryImages: '' })\n  }\n\n  downloadFile(file_id, file_name) {\n    const src = global.rxu.config.get_static + '/' + file_id\n    try {\n      if (!this.blockDownload) {\n        this.blockDownload = true\n        // let downloadLink = document.createElement('a')\n        // document.body.appendChild(downloadLink)\n        // downloadLink.download = file_name\n        // downloadLink.href = src\n        // downloadLink.click()\n        // document.body.removeChild(downloadLink)\n        fetch(src)\n        .then(resp => resp.blob())\n        .then(blob => {\n          const url = window.URL.createObjectURL(blob)\n          const a = document.createElement('a')\n          a.style.display = 'none'\n          a.href = url\n          a.download = file_name\n          document.body.appendChild(a)\n          a.click()\n          window.URL.revokeObjectURL(url)\n          this.blockDownload = false\n        })\n        .catch(() => console.log('Error'))  \n      } else {\n        alert(translate('Downloading your file please wait ...'))\n      }\n      \n    } catch (e) { }\n  }\n\n  openExternalLink(url) {\n    if (window && window.ipcRenderer && url) {\n      window.ipcRenderer.send('open-external-link', { link: url })\n    } else if (window && url) {\n      window.open(url, '_blank') \n    }\n  }\n\n  scrollChatBox(e) {\n    const chatListDiv = document.getElementById('zchat_list')\n    let displayScrollDownBtn = false\n    let scrollChatBoxStatus = true\n    if (chatListDiv) {\n      const scrollHeight = chatListDiv.scrollHeight\n      const scrollTop = chatListDiv.scrollTop\n      let screen = window.screen\n      if (scrollHeight - scrollTop > screen.height/*511 + 150*/) {\n        displayScrollDownBtn = true\n      } else {\n        scrollChatBoxStatus = false\n      }\n      if ((scrollHeight - scrollTop === scrollHeight) && this.state.scroll_mess) {\n        this.pg_mess += 1\n        this.loadMessages(scrollHeight)\n      }\n      this.setState({ displayScrollDownBtn: displayScrollDownBtn, scrollChatBoxStatus })\n    }\n  }\n\n  onClickMouseRight(e, omess) {\n    const menuDiv = document.getElementById('menu-message')\n    const menuDivGroup = document.getElementById('context_menu-group')\n    if(!([5,6,7,16].indexOf(omess.type) !== -1)){\n      if (menuDiv && e.button === 2) {\n        if (omess && omess.status !== 4 && rxaget(omess, 'deleted_uins', []).indexOf(this.userid.toString()) === -1) {\n          document.oncontextmenu = function () {\n            return false;\n          }\n          // document.getElementById('popup-group').style.display = 'none'\n          menuDiv.style.top = e.clientY + 'px'\n          menuDiv.style.left = (Number(e.clientX) - 140) + 'px'\n          menuDiv.style.display = 'block'\n\n          let newOmess = JSON.parse(JSON.stringify(omess))\n          try {\n            if ([2, 9].indexOf(newOmess.type) && this.indexImageForward !== -1 && this.strImgForward !== '') {\n              let arrImgs = this.strImgForward.split('|')\n              if (arrImgs && arrImgs.constructor === Array && arrImgs.length > 0) {\n                let arrAttach = [{width: arrImgs[1], height: arrImgs[2], url: arrImgs[0]}]\n                newOmess.attachments = JSON.stringify({ images: arrAttach }).replace(/\\\\\"/g, '\"')\n                if (newOmess.type === 9) {\n                  newOmess.type = 2\n                }\n              }\n            } \n          } catch(e) {}\n\n          this.setState({ mess_selected: newOmess, mess_id: omess.message_id.toString() }, () => {\n            this.indexImageForward = -1\n            this.strImgForward = ''\n          })\n\n          // hide context-menu on group\n          if (menuDivGroup) {\n            menuDivGroup.style.top = e.clientY + 'px'\n            menuDivGroup.style.left = Number(e.clientX) + 'px'\n            menuDivGroup.style.display = 'none'  \n          }\n        }\n      }\n    }\n  }\n\n  handleClickOutside(event) {\n    if (this.state.mess_id && event.button === 0 && event.target.className !== 'menu-option') {\n      this.setState({ \n        mess_selected: {}, \n        mess_id: '' \n      })  \n    }\n  }\n\n  chooseOption(e, type) {\n    let option = 0\n    let popupGroup = false\n    let isForwardAudio = false\n    if (type === 'reply') {\n      option = 1\n    } else if (type === 'delete_all') {\n      this.deleteMessage(true)\n    } else if (type === 'delete_one') {\n      this.deleteMessage(false)\n    } else if (type === 'copy') {\n      let messCopy = (rxaget(this.state, 'mess_selected.message', ''))\n      if (messCopy.indexOf('@') !== -1) {\n        let userstag = messCopy.match(/(@\\d+\\b)/ig)\n        if (userstag && userstag.constructor === Array && userstag.length > 0) {\n          userstag.forEach(o => {\n            let useridtmp = o.replace('@', '') || ''\n            if (this.users[useridtmp]) {\n              messCopy = messCopy.replace(o, checkNameUser(rxaget(this.users, useridtmp, {})))\n            }\n          })\n        }\n      }\n      this.copyTextToClipboard(messCopy)\n    } else if (type === 'forward') {\n      if((rxaget(this.state, 'mess_selected.type', '')) === 3){\n        isForwardAudio = true\n      }\n      option = 2\n      popupGroup = true\n    } else if (type === 'share') {\n      this.setState({ displayShareScreen: true })\n    } else if (type === 'pin') {\n      this.pinMessage(true)\n    } else if (type === 'unpin') {\n      this.unPin(false)\n    }\n    this.setState({ type_option: option, popupGroup: popupGroup, isForwardAudio:isForwardAudio })\n  }\n\n  closePopupGroup() {\n    this.setState({ popupGroup: false, mess_selected: {}, mess_id: '' }, () => {\n      this.indexImageForward = -1\n      this.strImgForward = ''\n    })\n  }\n\n  copyTextToClipboard(text) {\n    let textArea = document.createElement('textarea')\n    textArea.style.position = 'fixed'\n    textArea.style.top = 0\n    textArea.style.left = 0\n    textArea.style.width = '2px'\n    textArea.style.height = '2px'\n    textArea.style.padding = 0\n    textArea.style.border = 'none'\n    textArea.style.outline = 'none'\n    textArea.style.boxShadow = 'none'\n    textArea.style.background = 'transparent'\n    textArea.value = text.replace(/[\\t\\r\\n]/g, '')\n    document.body.appendChild(textArea)\n    textArea.focus()\n    textArea.select()\n    try {\n      document.execCommand('copy')\n    } catch (err) {\n      console.log('Oops, unable to copy')\n    }\n    document.body.removeChild(textArea)\n  }\n\n  deleteMessage(type) {\n    const messages = this.state.messages\n    const omess = rxaget(this.state, 'mess_selected', {})\n    const created_at = convertSecondUnix(Number(rxaget(omess, 'created_at', 0)))\n    let datetime = timesUnixToDate(created_at, Number(rxaget(omess, 'created_at', 0)))\n    const group_id = this.state.group_id\n    let groups = rxaget(this.props, 'netaGroups.groups', {})\n    let groupObj = groups[group_id]\n\n    if (groups[group_id].last_message_id === omess.message_id) {\n      groupObj.last_message.status = 4\n      this.props.netaGroupsUpdate(Number(group_id), groupObj)\n    }\n    if (omess.message_id && group_id) {\n      const msg = {\n        group_id: Number(group_id),\n        message_id: omess.message_id.toString(),\n        delete_all: type\n      }\n      type && this.unPin(false)\n      if (rxio.connected) {\n        rxio.socket.emit('delete_message', msg, (data) => {\n          if (data && data.result === 0) {\n            if (messages[datetime.toString()] && messages[datetime.toString()].data && messages[datetime.toString()].data.constructor === Array) {\n              messages[datetime.toString()].data.forEach(mess => {\n                if (mess.message_id === omess.message_id) {\n                  mess.status = 4\n                }\n              })\n              this.setState({ messages: messages })\n            }\n          }\n        })\n      }\n\n    }\n  }\n\n  unPin(type) {\n    const group_id = this.state.group_id\n    var msg = {\n      group_id: Number(group_id),\n\n      unpin_all: type,\n    }\n    var username = checkNameUser(this.users[this.userid])\n    if (rxio.connected) {\n      var omess = rxaget(this.state, 'mess_selected', {}),\n        unpinmess = username + translate(\" unpin: \") + omess.message\n      if (!type) {\n        msg.message_id = omess.message_id.toString()\n      }\n\n      rxio.socket.emit(\"unpin_message\", msg, (data) => {\n        if (data && data.result === 0) {\n          if (type) {\n            this.setState({ pinedMess: {} })\n            this.props.netaMessPin(group_id, {})\n            unpinmess = translate(\"Group is unpin all message\")\n          }\n          else {\n            this.setState({ pinedMess: this.pullFromObjMess(this.state.pinedMess, omess) })\n          }\n          this.handleMessage({\n            created_at: (Math.floor(Date.now()) * 1000).toString(),\n            attachments: JSON.stringify({\n              \"mediaType\": 0,\n              \"pin_message\": { type: -1, content: unpinmess }\n            }),\n            deleted_uins: [], group_id, group_type: 3, is_encrypted: false, mentioned_all: false,\n            mentioned_uins: [], message: \"\",\n            message_id: (Math.floor(Date.now()) * 1000).toString(),\n            sender_uin: this.userid,\n            status: 0, type: 6, version: 0\n          })\n        }\n      })\n    }\n  }\n\n  checkPinMess() {\n    var checkCode = 0\n    try {\n      const data = this.state.mess_selected\n      if ([5, 6].indexOf(data.type) === -1) {\n        checkCode = 1\n        for (const key in this.state.pinedMess) {\n          const messages = this.state.pinedMess[key]\n          messages.data.some(o => o.message_id === data.message_id) && (checkCode = 2)\n        }\n        return checkCode\n      } else return checkCode\n\n    } catch (error) {\n      console.log(\"error\", error)\n      return checkCode\n    }\n  }\n\n  pullFromObjMess(messages, data) {\n    try {\n      for (const key in messages) {\n        if (messages[key] && messages[key].data) {\n          messages[key].data = messages[key].data.filter(o => o.message_id !== data.message_id)\n          if (messages[key].data && messages[key].data.length === 0) {\n            delete messages[key]\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e)\n    }\n    return messages\n  }\n\n  pushToObjMess(messages, data, sortField = 'created_at') {\n    try {\n      const datetime = timeToDate(Math.floor(Number(rxaget(data, sortField, 0)) / 1000000))\n      if (messages[datetime.toString()] && messages[datetime.toString()].data) {\n        const arrMess = messages[datetime.toString()].data.filter(o => o.message_id !== data.message_id)\n        arrMess.push(data)\n        messages[datetime.toString()].data = arrMess.sort((a, b) => Number(a[sortField]) < Number(b[sortField]) ? -1 : 1)\n      } else {\n        if (!messages[datetime.toString()]) {\n          messages[datetime.toString()] = { date: datetime, datestr: timeConverter(datetime, 'dateweek') }\n        }\n        if (messages[datetime.toString()] && !messages[datetime.toString()].data) {\n          messages[datetime.toString()].data = [data]\n        }\n      }\n    } catch (e) {\n      console.log(e)\n    }\n    return messages\n  }\n\n  pinMessage(type) {\n    let omess = rxaget(this.state, 'mess_selected', {})\n    const group_id = this.state.group_id\n    const msg = {\n      group_id: Number(group_id),\n      message_id: omess.message_id.toString(),\n      \"order_id\": 1\n    }\n    omess.pinned_at = (Math.floor(Date.now()) * 1000).toString()\n    if (rxio.connected) {\n      rxio.socket.emit('pin_message', msg, (data) => {\n        if (data && data.result === 0) {\n          var ownerSend = this.users[omess.sender_uin],\n            userSend = this.users[this.userid],\n            paramsCreateMess = {\n              \"group_id\": group_id, \"nonce\": (Math.floor(Date.now()) * 1000).toString(), \"sender_name\": checkNameUser(userSend),\n              \"type\": 6, \"version\": 1, \"is_encrypted\": false, \"mentioned_all\": false,\n              \"sender_avatar\": (userSend.profile_url) ? global.rxu.config.cdn_endpoint + userSend.profile_url : '',\n              \"attachments\": JSON.stringify({\n                \"mediaType\": 0,\n                \"pin_message\": {\n                  \"id\": omess.message_id.toString(),\n                  \"groupId\": group_id, \"type\": omess.type, \"content\": omess.message,\n                  \"owner\": {\n                    \"id\": ownerSend.id, \"username\": omess.sender_name,\n                    \"avatar\": omess.sender_avatar,\n                    \"phone\": ownerSend.phone, \"isonline\": false, \"email\": ownerSend.email,\n                    \"coloringroup\": 7,\n                    \"isregistered\": false, \"isblocked\": false, \"isdeleted\": false\n                  }, \"created_at\": omess.created_at,\n                  \"sendername\": checkNameUser(userSend),\n                  \"senderavatar\": (userSend.profile_url) ? global.rxu.config.cdn_endpoint + userSend.profile_url : '',\n                  \"updateat\": 0, \"status\": 1,\n                  \"version\": \"1\", \"messageUpdate\": \"\", \"isEncrypted\": false, \"isMentionAll\": false\n                }\n              }).replace(/\"/g, '\\\\\"')\n            }\n          rxio.socket.emit('create_message', paramsCreateMess, (dataMess) => {\n            if (dataMess && dataMess.result === 0) {\n              try {\n                this.handleMessage({\n                  created_at: (Math.floor(Date.now()) * 1000).toString(),\n                  attachments: paramsCreateMess.attachments.replace(/\\\\\"/g, \"\\\"\"),\n                  deleted_uins: [], group_id, group_type: 3, is_encrypted: false, mentioned_all: false,\n                  mentioned_uins: [], message: \"\",\n                  message_id: Number(omess.pinned_at),\n                  sender_uin: this.userid,\n                  status: 0, type: 6, version: 0\n                })\n                this.setState({ pinedMess: this.pushToObjMess(JSON.parse(JSON.stringify(this.state.pinedMess)), omess, \"pinned_at\") })\n              } catch (e) {\n                console.log(e)\n              }\n            }\n          })\n        }\n      })\n    }\n  }\n\n  handleMessage(data, scroll, cond) {\n    const group_id = this.state.group_id\n    const messages = JSON.parse(JSON.stringify(this.state.messages))\n    const messid = rxaget(data, 'message_id', '')\n    const created_at = convertSecondUnix(Number(rxaget(data, 'created_at', 0)))\n    const datetime = timesUnixToDate(created_at, Number(rxaget(data, 'created_at', 0)))\n    if (messid && datetime > 0 && data) {\n      if (data.group_id.toString() === group_id.toString()) {\n        try {\n          if (messages[datetime.toString()] && messages[datetime.toString()].data) {\n            const arrMess = messages[datetime.toString()].data.filter(o => o.message_id !== data.message_id)\n            const lastmess = arrMess[arrMess.length - 1]\n\n            if (data.sender_uin && lastmess.sender_uin && !lastmess.checked_ava) {\n              if ((data.sender_uin === lastmess.sender_uin) && ((Number(lastmess.created_at) - Number(data.created_at)) < 60000000)) {\n                data.checked_ava = true\n              }\n            }\n            arrMess.push(data)\n            messages[datetime.toString()].data = arrMess.sort((a, b) => Number(a.created_at) < Number(b.created_at) ? -1 : 1)\n          } else {\n            if (!messages[datetime.toString()]) {\n              messages[datetime.toString()] = { date: datetime, datestr: timeConverter(datetime, 'dateweek') }\n            }\n            if (messages[datetime.toString()] && !messages[datetime.toString()].data) {\n              messages[datetime.toString()].data = [data]\n            }\n          }\n\n          let stateObj = { messages: messages }\n          if (cond === 'footer') {\n            stateObj['type_option'] = 0\n            stateObj['mess_selected'] = {}\n            stateObj['mess_id'] = {}\n          }\n          this.setState(stateObj, () => {\n            if (scroll) {\n              const chatDiv = document.getElementById('zchat_list')\n              if (chatDiv) {\n                if (this.state.displayScrollDownBtn === false || data.sender_uin === String(this.userid) || chatDiv.scrollHeight - chatDiv.scrollTop < window.screen.height/*511 + 150*/) {\n                  chatDiv.scrollTop = chatDiv.scrollHeight\n                }\n              }  \n            }\n\n            \n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    } \n    \n    this.handleNoti(data)    \n  }\n\n  handleNoti(data) {\n    if (data) {\n      try {\n        let netalo_noti = JSON.parse(window.sessionStorage.getItem(\"netalo_noti\") || '{}')\n        if (!netalo_noti[data.message_id] &&\n          (!this.countNoti[data.group_id] || !this.countNoti[data.group_id][data.message_id])) {\n          if (!(data.type === 10 && !data.attachments) && data.sender_uin.toString() !== this.userid.toString()) {\n            let userSend = this.users[data.sender_uin]\n            let objNoti = {\n              group_id: data.group_id,\n              current_group_id: this.state.group_id || '',\n              message_id: data.message_id,\n              message: subString(parseMessageDesc(data, this.users, this.userid), 50),\n              sender_uin: data.sender_uin,\n              sender_name: checkNameUser(userSend),\n              sender_ava: (userSend.profile_url) ? global.rxu.config.cdn_endpoint + userSend.profile_url : ''\n            }\n\n            try {\n              let groupObjTmp = this.groups[objNoti['group_id']] \n              if (groupObjTmp && groupObjTmp['type'] === 2) {\n                objNoti['sender_name'] = checkNameGroup(groupObjTmp, this.users, this.userid)\n                objNoti['sender_ava'] = (groupObjTmp.avatar_url) ? global.rxu.config.cdn_endpoint + groupObjTmp.avatar_url : ''\n              }\n            } catch(e2) {}\n\n            let notificationStatus = rxgetLocal('netaNotificationStatus')\n            let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n            if (netaAuthSetting.groups[Number(data.group_id)]\n              && netaAuthSetting.groups[Number(data.group_id)].disableNoti)\n              notificationStatus = false\n            if (objNoti.message && notificationStatus === JSON.stringify(true)) {\n              // console.log(\"SEND NOTI\", data, objNoti)             \n              if (isElectron()) {\n                window.ipcRenderer.send('notification', objNoti)\n              } else {\n                if (window.Notification && Notification.permission !== \"denied\"\n                  && rxaget(data, 'sender_uin', '').toString() !== this.userid.toString()\n                  && data.message_id\n                  ) {\n                  let notification = new Notification(objNoti.sender_name, {\n                    body: objNoti.message,\n                    icon: objNoti.sender_ava,\n                    data: objNoti\n                  });\n                  notification.onclick = () => {\n                    this.props.callBackRedirectChat()\n                    let groupNoti = rxaget(this.groups, objNoti.group_id, {})\n                    groupNoti.count_unread = 0\n                    groupNoti.unread_cnt = 0\n                    this.chooseGroup(groupNoti)\n                    this.props.chooseGroupAction(groupNoti)\n                    window.focus();\n                  };\n                }\n              }\n              netalo_noti[data.message_id] = true\n              window.sessionStorage.setItem(\"netalo_noti\", JSON.stringify(netalo_noti));\n            }\n          }\n        }\n      } catch (e) {\n      }\n\n      if (data && data.group_id && data.message_id) {\n        let currentTime = (new Date()).getTime()\n        let groupsStore = rxaget(this.props, 'netaGroups.groups', {})\n        if (groupsStore[data.group_id] && !this.groups[data.group_id]) {\n          this.groups = groupsStore\n        }\n        if (this.groups[String(data.group_id)]) {\n          let groupnew = JSON.parse(JSON.stringify(this.groups[data.group_id]))\n\n          if (groupnew && groupnew.last_message_id) {\n\n            if (!this.countNoti[data.group_id]) {\n              this.countNoti[groupnew.group_id] = {}\n            }\n\n            this.countNoti[groupnew.group_id][groupnew.last_message_id] = groupnew.unread_cnt\n\n            if (rxaget(groupnew, 'last_message_id', '').toString() !== rxaget(data, 'message_id', '').toString()) {\n              this.countNoti[groupnew.group_id][data.message_id] = 1\n            }\n          }\n\n          let count = 0\n          if (this.countNoti[groupnew.group_id]) {\n            Object.keys(this.countNoti[groupnew.group_id]).forEach(key => {\n              if (rxaget(this.countNoti[groupnew.group_id], key, 0) === 0) {\n                count = 0\n              }\n              count += Number(rxaget(this.countNoti[groupnew.group_id], key, 0))\n            })\n          }\n          if (groupnew.group_id === this.state.group_id || data.sender_uin === JSON.stringify(this.userid)) {\n            groupnew.count_unread = 0\n            groupnew.timestamp = currentTime * 1000\n            groupnew.last_message = data\n            groupnew.unread_cnt = 0\n            groupnew.last_message_id = data.message_id\n            this.checkReaded(groupnew.group_id, data.message_id)\n          } else {\n\n            groupnew.count_unread = count\n            groupnew.timestamp = currentTime * 1000\n            groupnew.last_message = data\n          }\n          try {\n            this.props.netaGroupsUpdate(data.group_id, groupnew)\n          } catch (e) {\n            console.log(e)\n          }\n\n        } else {\n\n          this.fetchGroupDetail(data.group_id)\n          console.log('Don\\'t have Group Current')\n        }\n      }\n    }\n  }\n\n  parseMessage(objmsg, type) {\n    // let t0 = performance.now();\n    let message = ''\n    let attachments = {}\n    const userid = rxaget(this.props, 'netaauth.user.id', '').toString()\n    if (objmsg) {\n      if (!isNaN(objmsg.type)) {\n        try {\n          attachments = JSON.parse(rxaget(objmsg, 'attachments', '').replace(/[\\t\\r\\n]/g, ''))\n        } catch (e) {\n          if (typeof (rxaget(objmsg, 'attachments', '')) === 'object') {\n            attachments = rxaget(objmsg, 'attachments', '')\n          }\n        }\n        if (objmsg.status !== 4) {\n          if (objmsg.deleted_uins && objmsg.deleted_uins.constructor === Array && objmsg.deleted_uins.length > 0 && objmsg.deleted_uins.indexOf(userid) !== -1) {\n            message = ''\n          } else {\n            let mess = ''\n            switch (objmsg.type) {\n              case 1:\n                let call_name = ''\n                let icon_call_name = ''\n                if (attachments.media_type === 1) {\n                  call_name = translate('Voice call')\n                  icon_call_name = 'icon-phone'\n                } else if (attachments.media_type === 2) {\n                  call_name = translate('Video call')\n                  icon_call_name = 'icon-camrecorder'\n                }\n                let iconcall = ''\n                let stylecall = ''\n                if (rxaget(attachments, 'caller_uin', '') === this.userid.toString()) {\n                  iconcall = 'icon-call-out'\n                  if (zget(this.props, 'themeValue') === 'blueColor') {\n                    stylecall = '#d5f0ff'\n                  } else {\n                    if (rxconfig.theme === 'galo') {\n                      stylecall = '#d4f5f1'\n                    } else if (rxconfig.theme === 'default') {\n                      stylecall = '#fde4d8'\n                    }\n                  }\n                } else {\n                  iconcall = 'icon-call-in'\n                  if (zget(this.props, 'themeValue') === 'blueColor') {\n                    stylecall = '#ebf8ff'\n                  } else {\n                    if (rxconfig.theme === 'galo') {\n                      stylecall = '#d4f5f1'\n                    } else if (rxconfig.theme === 'default') {\n                      stylecall = '#fdf2ea'\n                    }\n                  }\n                }\n                message = `<div class='zchat-callmess' style='background: ${stylecall};'>\n                  <div class='zchat-callname'>${call_name}</div>`\n                if (attachments.accepted_at === '0') {\n                  message += `<div class='zchat-calltime' style='color:#d5192d;'><i class='${iconcall}'></i>${translate('Canceled')}</div>`\n                } else {\n                  const time = Number(rxaget(attachments, 'stopped_at', 0)) - Number(rxaget(attachments, 'accepted_at', 0))\n                  message += `<div class='zchat-calltime'><i class='${iconcall}' style='color:#2fb13e;'></i>${secondToTime(time)}</div>`\n                }\n                message += `<span class='zchat-callicon'><i class='${icon_call_name}'></i></span></div>`\n                if (type === 'desc') {\n                  mess = translate(' finished')\n                  message = call_name + mess\n                }\n                break\n              case 2:\n                try {\n                  if (attachments && attachments.images && attachments.images.constructor === Array && attachments.images.length > 0) {\n                    let arrurlimgs = rxaget(attachments, 'images', []).map(o => o.url)\n                    let strurlimgs = (arrurlimgs && arrurlimgs.constructor === Array && arrurlimgs.length > 0) ? arrurlimgs.join(',') : ''\n                    message = `<div> <div></div> <div class=\"img-message-row\" id=${objmsg.message_id}>`\n                    let indeximg = 0\n                    let imgHeight = 0\n                    for (const img of attachments.images) {\n                      if (!attachments.loading) {\n                        if (img.height >= 360 && img.width >= 240) {\n                          switch (img.height / img.width) {\n                            case 1.5:\n                              imgHeight += 360\n                              break;\n                            case 1:\n                              imgHeight += 240\n                              break;\n                            default:\n                              if (img.height / img.width > 1.5) {\n                                imgHeight += 360\n                              }\n                              if (img.height / img.width < 1.5) {\n                                let imgHeightTmp = 240 * (img.height / img.width)\n                                if (imgHeightTmp >= 360) {\n                                  imgHeight += 360\n                                } else {\n                                  imgHeight += imgHeightTmp\n                                }\n                              }\n                          }\n                        } else {\n                          if (img.height >= 360) {\n                            imgHeight += 360\n                          } else {\n                            if (img.width >= 240) {\n                              imgHeight += 240 * (img.height / img.width)\n                            } else {\n                              imgHeight += img.height\n                            }\n\n                          }\n\n                        }\n                      }\n                      if (attachments.loading)\n                        message += '<div class=\"loading\"></div>'                      \n                      \n                      let strImgForward = img.url + '|' + (img.width || 0) + '|' + (img.height || 0)\n                      message += `<img src='${((!attachments.loading ? global.rxu.config.get_static : \"\") + img.url)}' alt='' class='img-message' onclick=window.showGallery('${strurlimgs}','${indeximg}') onmousedown=\"window.getGallery('${strImgForward}','${indeximg}')\" />`\n                      indeximg += 1\n                    }\n                    message += '</div></div>'\n                    if (!(type === 'lastpin' || attachments.loading))\n                      message = message.replace('class=\"img-message-row\"', 'class=\"img-message-row\"style=\"height:' + imgHeight + 'px;\"')\n                    if (type === 'desc') {\n                      message = translate('Image')\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                break\n              case 3:\n                let audio = (attachments && attachments.audio) || objmsg.audio\n                const url = rxaget(audio, 'url', '')\n                const src = global.rxu.config.get_static + url\n                message = `<div class='zchat-audiomess'>`\n                let id = objmsg.message_id\n                if (objmsg.rpId) id += objmsg.rpId\n                message += `\n                  <div class='zchat-audioicon filter_img_class' onclick=window.playAudio('icon-audio-${id}')>\n                    <img id='icon-audio-${id}'  src='./images/default/static/icon-media-play.svg'/>\n                  </div>`\n\n                message +=\n                  `\n                  <div class='zchat-audiobar'>\n                    <div class='zchat-audioprocess' id='process-audio-${id}'>\n                    </div>\n                  </div>\n                  <div class='zchat-audiotime'>\n                    ${secondToTime(rxaget(audio, 'duration', 0))}\n                  </div>\n                `\n                message += `\n                  <audio id='${'audio-' + id}' >\n                    <source id='${'audio' + url}' src='${src}' type='audio/mpeg'/>\n                  </audio>\n                `\n                message += `</div>`\n                if (type === 'desc') {\n                  message = 'Audio'\n                }\n                break\n              case 4:\n                try {                  \n                  if (attachments && attachments.video && attachments.video.url) {\n                    const url = attachments.video.url\n                    let src \n                    // let videoControls = \"controls='controls'\"\n                    let videoControls = 'controls'\n                    let videoObj = attachments.video\n                    let videoHeight = 241* (videoObj.height / videoObj.width)\n\n                    message = '<div class=\"img-message-row\">'\n                    if (attachments.loading){\n                      src = url\n                      message += '<div class=\"loading\"></div>'   \n                      videoControls = ''                              \n                    } else{\n                      src = global.rxu.config.get_static + url\n                    }                       \n                    message += `\n                        <video class ='zchat-mess-video' id='${'video' + objmsg.message_id}' height='${videoHeight}' width='320' ${videoControls} preload='metadata'>\n                          <source id='${'video' + url}' src='${src}#t=0.1' />\n                          Your browser does not support HTML5 video.\n                        </video>\n                      `\n                    message += '</div>'\n                    if (type === 'desc') {\n                      message = 'Video'\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                break\n              case 5:\n                mess = translate(' created a group')\n                message = checkNameUser(rxaget(this.users, objmsg.sender_uin.toString(), {})) + mess\n                break\n              case 6:\n                const userins = []\n                try {\n                  if (attachments && attachments.added_uins && attachments.added_uins.constructor === Array && attachments.added_uins.length > 0) {\n                    for (const uid of attachments.added_uins) {\n                      const uname = checkNameUser(rxaget(this.users, uid.toString(), {}))\n                      if (uname) {\n                        userins.push(uname)\n                      }\n                    }\n                  }\n                  else if (attachments.removed_uins && attachments.removed_uins.constructor === Array && attachments.removed_uins.length > 0) {\n                    let rmMem = []\n                    for (const uid of attachments.removed_uins) {\n                      const uname = checkNameUser(rxaget(this.users, uid.toString(), {}))\n                      if (uname) {\n                        rmMem.push(uname)\n                      }\n                    }\n                    if (rmMem.length > 0) {\n                      mess = translate(' removed ')\n                      message = checkNameUser(rxaget(this.users, objmsg.sender_uin.toString(), {})) + mess + rmMem.join(', ')\n                    }\n                  }\n                  else if (attachments.pin_message) {\n                    mess = attachments.pin_message.type === -1 ? attachments.pin_message.content :\n                      (checkNameUser(rxaget(this.users, objmsg.sender_uin.toString(), {})) + (attachments.pin_message.content ? (translate(' pinned') + \": \" + attachments.pin_message.content) :\n                        translate(' pinned one message')))\n                    message = mess\n                  }\n                  else if (attachments && attachments.updated_group_avatar) {\n                    message = (checkNameUser(rxaget(this.users, objmsg.sender_uin.toString(), {}))) + translate(' update avatar')\n                  }\n                  else if (attachments && attachments.updated_group_name) {\n                    message = (checkNameUser(rxaget(this.users, objmsg.sender_uin.toString(), {}))) + translate(' update group name')\n                  }\n                  else if (attachments && attachments.type === 'update_group' && (attachments.owner_uin || attachments.admin_uins)) {\n                    message = (checkNameUser(rxaget(this.users, objmsg.sender_uin.toString(), {}))) + translate(' change group admin to: ')\n                      + (checkNameUser(rxaget(this.users, (attachments.owner_uin || attachments.admin_uins[0]).toString(), {})))\n                  } else if (attachments && attachments.group_id && attachments.push_all && attachments.push_all.constructor === Array && attachments.push_all.length > 0 ) {\n                    try {\n                      const arrUserNameAdd = []\n                      for (const uid of attachments.push_all) {\n                        const unameNew = checkNameUser(rxaget(this.users, uid.toString(), {}))\n                        if (unameNew) {\n                          arrUserNameAdd.push(unameNew)\n                        }\n                      }\n                      if (arrUserNameAdd.length > 0) {\n                        message = arrUserNameAdd.join(', ') + translate(' joined group with link')  \n                      }\n                    } catch(e1) {}\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                if (userins.length > 0) {\n                  mess = translate(' added ')\n                  message = checkNameUser(rxaget(this.users, objmsg.sender_uin.toString(), {})) + mess + userins.join(', ')\n                }\n                break\n              case 7:\n                mess = translate(' has left the group')\n                message = checkNameUser(rxaget(this.users, objmsg.sender_uin.toString(), {})) + mess\n                break\n              case 8:\n                message = '<div class=\\'row-reply\\'>'\n                message += `<div class='sender-reply'> <img class='filter_img_class' alt='icon-reply' src='./images/default/icons/reply-icon.svg'> ${translate('Answer for')} ${checkNameUser(rxaget(this.users, attachments.sender_uin, {})) || ''} </div>`\n\n\n                if (attachments.type === 8 || attachments.type === 9) {\n                  attachments.type = 0\n                }\n                attachments.rpId = objmsg.message_id\n                const attachments_tmp = this.parseMessage(attachments)\n                if (attachments_tmp !== '') {\n\n                  let message_reply_content_class = ''\n                  let file_reply_content_class = ''\n                  if(attachments_tmp.indexOf('img-message-row')!== -1 || attachments_tmp.indexOf('zchat-filemess')!== -1 || attachments_tmp.indexOf('zchat-audiomess')!== -1){                      \n                    file_reply_content_class = ' file-reply_content'\n\n                  }\n                  if (checkIsOwner(objmsg, this.userid)) {\n                    message_reply_content_class = 'message-reply_content_right' + file_reply_content_class\n                  } else {\n                    message_reply_content_class = 'message-reply_content' + file_reply_content_class\n                  }\n\n                  message += `\n                      <div class='clearfix message-reply'>\n                        <div></div>\n                        <div class='${message_reply_content_class}''>\n                          ${attachments_tmp}\n                        </div>\n                      </div>`\n                } else {\n                  if (checkIsOwner(objmsg, this.userid)) {\n                    message += `\n                    <div class='message-reply'>\n                      <div></div>\n                      <div class='message-reply_content_right' >\n                        &nbsp;\n                      </div>\n                    </div>`\n                  }\n                  else {\n                    message += `\n                    <div class='message-reply'>\n                      <div></div>\n                      <div class='message-reply_content'>\n                        &nbsp;\n                      </div>\n                    </div>`\n                  }\n                }\n                message += '</div>'\n                if (this.userid.toString() === objmsg.sender_uin.toString()) {\n                  message += '<div class=\\'zmessage-reply-anwser my_message\\'>' + objmsg.message + '<div class=\\'zmessage_time\\'> '+timeConverter(objmsg.created_at, 'minute')+' </div></div>' || ''\n                } else {\n                  if (objmsg.message.length === 0) {\n                    message += '<div class=\\'zmessage-reply-anwser another_message\\'><div class=\\'another_message_box\\'>&#160<div class=\\'zmessage_time\\'> '+timeConverter(objmsg.created_at, 'minute')+' </div></div></div>' || ''\n                  }\n                  else {\n                    message += '<div class=\\'zmessage-reply-anwser another_message\\'><div class=\\'another_message_box\\'>' + this.convertTagName(objmsg.message) + '<div class=\\'zmessage_time\\'> '+timeConverter(objmsg.created_at, 'minute')+' </div> </div></div>' || ''\n                  }\n\n                }\n                if (type === 'desc') {\n                  message = objmsg.message\n                }\n                break\n              case 9:\n                let sender_name\n                let sender_name_mess = translate('You')\n                sender_name = checkIsOwner(attachments, this.userid) ? sender_name_mess : checkNameUser(rxaget(this.users, objmsg.sender_uin, {}))\n                message = '<div class=\\'row-reply\\'>'\n                message += `<div class='sender-reply '> <img class='filter_img_class' alt='icon-reply' src='./images/default/icons/forward-icon.svg'/> ${sender_name || ''} ${translate('forwarded a message')} </div>`  \n                \n                attachments.rpId= objmsg.message_id\n                if (attachments.type === 9 || attachments.type === 8) {\n                  attachments.type = 0\n                }\n                const attachments_forward = this.parseMessage(attachments)\n                if (attachments_forward !== '') {\n\n                  let message_reply_content_class = ''\n                  let file_reply_content_class = ''\n                  if(attachments_forward.indexOf('img-message-row')!== -1 ||attachments_forward.indexOf('zchat-filemess')!== -1 ||attachments_forward.indexOf('zchat-audiomess')!== -1){                      \n                    file_reply_content_class = ' file-reply_content'\n\n                  }\n                  if (checkIsOwner(objmsg, this.userid)) {\n                    message_reply_content_class = 'message-reply_content_right' + file_reply_content_class\n                  } else {\n                    message_reply_content_class = 'message-reply_content' + file_reply_content_class\n                  }\n\n                  message += `\n                      <div class='clearfix message-reply'>\n                        <div></div>\n                        <div class='${message_reply_content_class}''>\n                          ${attachments_forward}\n                        </div>\n                      </div>`\n                }\n                message += '</div>'\n                if (this.userid.toString() === objmsg.sender_uin.toString()) {\n                  if (objmsg.message) {\n                    message += '<div class=\\'zmessage-reply-anwser my_message\\'>' + objmsg.message + '<div class=\\'zmessage_time\\'> '+timeConverter(objmsg.created_at, 'minute')+' </div></div>' || ''  \n                  }\n                } else {\n                  if (objmsg.message.length === 0) {\n                    // message += '<div class=\\'zmessage-reply-anwser another_message\\'><div class=\\'another_message_box\\'>&nbsp;</div></div>' || ''\n                  } else {\n                    message += '<div class=\\'zmessage-reply-anwser another_message\\'><div class=\\'another_message_box\\'>' + objmsg.message + '<div class=\\'zmessage_time\\'> '+timeConverter(objmsg.created_at, 'minute')+' </div></div></div>' || ''\n                  }\n\n\n                }\n                if (type === 'desc') {\n                  message = objmsg.message\n                }\n                break\n              case 10:\n                try {\n                  if (attachments && attachments.sticker) {\n                    const namesticker = attachments.sticker || ''\n                    if (namesticker && typeof (namesticker) === 'string') {\n                      let indexPath = namesticker.indexOf('_')\n                      let stickerStr = indexPath < 0 ? '' : namesticker.slice(0, indexPath)\n                      let imgsticker = indexPath < 0 ? '' : namesticker.slice(indexPath + 1)\n                      if (indexPath !== -1) {\n                        if (this.checkSticker(stickerStr, imgsticker)) {\n                          message = `<img src='${this.state.pathImg}/${stickerStr}/${imgsticker}' alt='sticker' class='img-sticker' />`\n                        } else {\n                          message = `<img src='./images/tabs/default.jpg' alt='sticker' class='img-sticker' />`\n                        }\n\n                      }\n\n                      break\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                if (type === 'desc') {\n                  message = 'Sticker'\n                }\n                break\n              case 12:\n                let file = (attachments && attachments.file) || objmsg.file\n                if (file) {\n                  let file_name = rxaget(file, 'file_name', '').toString()\n                  let fileNameExt = rxaget(file, 'file_name', '') + '.'+ rxaget(file, 'file_extension', '')\n                  file_name = file_name.replace(/[\\s]/g, '-')\n                  if (attachments.loading) {\n                    message = `<div class=\"img-message-row\" id=${objmsg.message_id}>`\n                    message += '<div class=\"loading\"></div>'     \n                    message += `<div class='zchat-filemess'>\n                    <div class='zchat-filename'>${rxaget(file, 'file_name', '')}</div>`\n                    message += `<div class='zchat-calltime' style='color:#a6a6a7;'>${formatBytes(rxaget(file, 'size', 0))}</div>`\n                    message += `<span class='zchat-docicon'><i class='icon-doc'></i></span></div>`\n                    message += '</div>'                           \n                  } else {\n                    message = `<div class='zchat-filemess'>\n                    <div class='zchat-filename'>${rxaget(file, 'file_name', '')}.${rxaget(file, 'file_extension', '')}</div>`\n                    message += `<div class='zchat-calltime' style='color:#a6a6a7;'>${formatBytes(rxaget(file, 'size', 0))}</div>`\n                    message += `<span class='zchat-docicon' onclick=window.downloadFile('${rxaget(file, 'url', '').toString()}','${fileNameExt}')><i class='icon-doc'></i></span></div>`                    \n                  }\n\n                  if (type === 'desc') {\n                    message = translate('File')\n                  }\n                }\n                break\n              case 14:\n                try {\n                  if (attachments && attachments.location) {\n                    message = `<div> <div></div> <div class=\"img-message-row\" id=${objmsg.message_id}>`\n                    let imgHeight = 240\n                    \n                    if (attachments.location && attachments.location.image_url) {\n                      let linkMap = ''\n                      if (rxaget(attachments, 'location.lat', 0) && rxaget(attachments, 'location.long', 0)) {\n                        linkMap = `https://www.google.com/maps/search/?api=1&query=${rxaget(attachments, 'location.lat', 0)},${rxaget(attachments, 'location.long', 0)}`\n                      }\n                      message += `<img src='${(global.rxu.config.get_static + attachments.location.image_url)}' alt='' class='img-message' onclick=window.openExternalLink('${linkMap}') />`  \n                    }\n                    \n                    \n                    message += '</div></div>'\n                    if (!(type === 'lastpin' || attachments.loading))\n                      message = message.replace('class=\"img-message-row\"', 'class=\"img-message-row\" style=\"height:' + imgHeight + 'px;\"')\n                    if (type === 'desc') {\n                      message = translate('Position')\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                break\n              case 15:\n                try {\n                  if (attachments) {\n                    message = `<div> <div></div> <div class=\"img-message-row\" id=${objmsg.message_id}>`\n                    let imgHeight = 240\n                    \n                    if (attachments.image_url) {\n                      let linkMap = ''\n                      if (rxaget(attachments, 'latitude', 0) && rxaget(attachments, 'longitude', 0)) {\n                        linkMap = `https://www.google.com/maps/search/?api=1&query=${rxaget(attachments, 'latitude', 0)},${rxaget(attachments, 'longitude', 0)}`\n                      }\n                      \n                      message += `<img src='${(global.rxu.config.get_static + attachments.image_url)}' alt='' class='img-message' onclick=window.openExternalLink('${linkMap}') />`  \n                    }\n\n                    let endTime = (attachments.ended_at) ? Number(attachments.ended_at) : 0\n                    let currentTime = Math.floor(Date.now() / 1000)\n                    let flagTime = endTime - currentTime\n\n                    if (flagTime > 0) {\n                      let strTime = ''\n                      let percentTime = 0\n\n                      if (flagTime < 60) {\n                        strTime = flagTime+'s'\n                      } else if (flagTime >= 60 && flagTime < 3600) {\n                        strTime = Math.floor(flagTime/60)+'m'\n                      } else if (flagTime > 3600) {\n                        strTime = Math.floor(flagTime/3600)+'h'\n                      }  \n                      \n                      if (attachments.duration && !isNaN(attachments.duration) && Number(attachments.duration) > flagTime) {\n                        percentTime = parseFloat((100 - ((flagTime / Number(attachments.duration)) * 100)).toFixed(2))\n                      }\n                      let degCircle = Math.floor((360/100)*percentTime)\n                      let rightTime = (percentTime < 50) ? degCircle : 180\n                      let clipStr = (percentTime > 50) ? 'clip: rect(auto, auto, auto, auto);' : ''   \n                      let leftTime = (percentTime > 50) ? 'transform:rotate('+degCircle+'deg);' : 'display:none'                 \n\n                      message += `<div class='position-message-row'>\n                        <span class='position-record-point'></span>\n                        <div class='position-desc'>\n                          <div>Đang chia sẻ hành trình</div>\n                          <div class='zlocation_desc'>Cập nhật liên tục</div>\n                        </div>\n                        <div class='position-timer-process'>\n                          <div class='position-pie-wrapper'>\n                            <span class='position-label'>${strTime}</span>\n                            <div class='position-pie' style='${clipStr}'>\n                              <div class='position-half-circle' style='${leftTime}'></div>\n                              <div class='position-half-circle' style='transform:rotate(${rightTime}deg);'></div>\n                            </div>\n                            <div class='position-shadow'></div>\n                          </div>\n                        </div>\n                      </div>`\n                    } else {\n                      message += `<div class='position-message-row'>\n                        <div>Hành trình trực tiếp</div>\n                        <div class='zlocation_desc'>Đã kết thúc</div>\n                      </div>`  \n                    }\n                    \n                    message += '</div></div>'\n                    if (!(type === 'lastpin' || attachments.loading))\n                      message = message.replace('class=\"img-message-row\"', 'class=\"img-message-row\" style=\"height:' + imgHeight + 'px;\"')\n                    if (type === 'desc') {\n                      message = translate('Current Position')\n                    }\n                  }\n                } catch (e) {\n                  console.log(e)\n                }\n                break\n\n              case 16:\n                let stylecallgroup = ''\n                if (zget(this.props, 'themeValue') === 'blueColor') {\n                  stylecallgroup = '#ebf8ff'\n                } else {\n                  if (rxconfig.theme === 'galo') {\n                    stylecallgroup = '#d4f5f1'\n                  } else if (rxconfig.theme === 'default') {\n                    stylecallgroup = '#fdf2ea'\n                  }\n                }\n                message = `<div class='zchat-callmess' style='background: ${stylecallgroup};'>\n                  <div class='zchat-callname'>${translate('Call Group')}</div>`\n                \n                  const time = Number(rxaget(attachments, 'stopped_at', 0)) - Number(rxaget(attachments, 'accepted_at', 0))\n                  message += `<div class='zchat-calltime'><i class='icon-call-in' style='color:#2fb13e;'></i>${secondToTime(0)}</div>`\n                \n                message += `<span class='zchat-callicon'><i class='icon-phone'></i></span></div>`\n                if (type === 'desc') {\n                  mess = translate(' finished')\n                  message = call_name + mess\n                }\n                break\n\n              default:\n                let messagetmp = objmsg.message || ''\n                if (messagetmp && messagetmp.length < 50) {\n                  let resMess = messagetmp.match(/(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g)\n                  if (resMess && resMess.constructor === Array && resMess.length > 0) {\n                    let uniemoji = [...new Set(resMess)]\n                    for (let emoji of uniemoji) {\n                      let regEmoji = new RegExp(emoji, 'g')\n                      messagetmp = messagetmp.replace(regEmoji, '<span>' + emoji + '</span>')\n                    }\n                  }\n                }\n\n                if (messagetmp.indexOf('http') !== -1 && type !== 'pin_model') {\n                  try {\n                    let urls = messagetmp.match(/(\\b(https?|http|ftp|file):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])/ig)\n                    if (urls && urls.constructor && urls.length > 0) {\n                      let objReview = {\n                        uid: objmsg.group_id + '-' + objmsg.message_id,\n                        url: urls[0]\n                      }\n                      let objLink = rxaget(this.props, 'netaLink.data.' + objReview.uid, {})\n                      if (objLink && !objLink.uid) {\n                        if (window && window.ipcRenderer && !this.checkLink[objReview.uid]) {\n                          window.ipcRenderer.send('linkpreview', objReview)\n                        }\n                        this.checkLink[objReview.uid] = true\n                      } else {\n                        if (objLink.title !== '') {\n                          const strmessagetmp = messagetmp\n                          const strtitle = subString(rxaget(objLink, 'title', ''), 80)\n                          const strdesc = subString(rxaget(objLink, 'description', ''), 100)\n\n                          messagetmp = `<div class='media_review'>\n                            <div>${strmessagetmp}</div>\n                            <div class='media_review_box' onclick=window.openExternalLink('${rxaget(objLink, 'url', '')}')>\n                              <div class='review_box-title'>${strtitle}</div>\n                              <div class='review_box-image'><img src='${objLink.img}' alt='' class='review_box-img' /></div>              \n                              <div class='review_box-desc'>${strdesc}</div>\n                            </div>\n                          </div>`\n                        }\n                      }\n\n                    }\n                  } catch (eurl) {\n                    console.log(eurl)\n                  }\n                }\n\n                message = `<div class='zchat-textmess'>${messagetmp}</div>`\n\n                break\n            }\n          }\n        } else {\n          message = ''\n        }\n      } else {\n        if (objmsg.status !== 4) {\n          if (objmsg.deleted_uins && objmsg.deleted_uins.constructor === Array && objmsg.deleted_uins.length > 0 && objmsg.deleted_uins.indexOf(userid) !== -1) {\n            message = ''\n          } else {\n            message = objmsg.message || ''\n          }\n        } else {\n          message = ''\n        }\n      }\n      if (message.indexOf('@') !== -1) {\n        let userstag = message.match(/(@\\d+\\b)/ig)\n        if (userstag && userstag.constructor === Array && userstag.length > 0) {\n          userstag.forEach(o => {\n            let useridtmp = o.replace('@', '') || ''\n            if (this.users[useridtmp]) {              \n              window[useridtmp] = this.users[useridtmp]\n              window[this.userid] = rxaget(this.props, 'netaauth.user', {})\n              let useridtmp_group = this.getGroupByUserId(useridtmp)\n              let partnerIdTmp = ''\n              if(useridtmp_group && useridtmp_group.group_id){\n                partnerIdTmp = useridtmp_group.group_id\n                window[partnerIdTmp] = useridtmp_group  \n              }              \n\n              message = objmsg.type === 6 ? message.replace(o, checkNameUser(rxaget(this.users, useridtmp, {})))\n                : message.replace(o, `<b onClick=\"ClickInfoUser('${useridtmp}','${this.userid}','${partnerIdTmp}')\">${checkNameUser(rxaget(this.users, useridtmp, {}))}</b>`)\n            }\n          })\n        }\n      }\n      // let t1 = performance.now();\n      // console.log(\"chat mess parsemess\" + '(t1 - t0)' + \" milliseconds.\")\n      return message\n    } else {\n      return ''\n    }\n  }\n\n  checkSticker(sticker, imgsticker) {\n    let arrTabsDisplay = this.state.arrTabsDisplay\n    for (let i = 0; i < arrTabsDisplay.length; i++) {\n      if (arrTabsDisplay[i].type === sticker && arrTabsDisplay[i].data.indexOf(imgsticker) === -1) {\n        return false\n      }\n    }\n    return true\n  }\n\n  convertTagName(message) {\n    let userstag = message.match(/(@\\d+\\b)/ig)\n    if (userstag && userstag.constructor === Array && userstag.length > 0) {\n      userstag.forEach(o => {\n        let useridtmp = o.replace('@', '') || ''\n        if (this.users[useridtmp]) {\n          let useridtmp_group = this.getGroupByUserId(useridtmp)\n          if(useridtmp_group  && useridtmp_group .group_id){\n            window[useridtmp_group.group_id] = useridtmp_group  \n          }\n          \n          message = message.replace(o, '<b onClick=\"ClickInfoUser(' + useridtmp + ',' + this.userid + ',' + useridtmp_group.group_id +')\">' + checkNameUser(rxaget(this.users, useridtmp, {})) + '</b>')\n        }\n      })\n    }\n    return message\n  }\n\n  fetchGroupDetail(group_id) {\n    if (group_id && this.token) {\n      const api_group_detail = global.rxu.config.get_groups + '/' + group_id\n      fetch(api_group_detail, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'TC-Token': this.token,\n          Connection: 'Keep-Alive',\n          'Accept-Encoding': 'gzip'\n        },\n        body: null\n      })\n        .then(res => res.json())\n        .then((json) => {\n          if (json && json.users && json.users.constructor === Array && json.users.length > 0) {\n            // console.log(\"**********\", rxaget(json, 'Group', {}))\n            this.props.netaGroupsUpdate(json.Id, rxaget(json, 'Group', {}))\n\n          }\n        }).catch(error => console.log(error))\n    }\n  }\n\n  loadMessages(oldheight) {\n    const msg = {\n      group_id: this.state.group_id,\n      pindex: this.pg_mess,\n      psize: 30\n    }\n    this.checkImage = this.checkImage || {}\n    const objDate = this.state.messages || {}\n    if (this.state.scroll_mess) {\n      if (rxio.connected) {\n        rxio.socket.emit('list_message', msg, (data) => {\n          if (data && data.last_message_id && data.messages && data.messages.constructor === Array && data.messages.length > 0) {\n            const messages = data.messages.sort((a, b) => Number(a.created_at) > Number(b.created_at) ? -1 : 1)\n            for (const imess in messages) {\n              const omess = messages[imess]\n              if ((imess < (messages.length - 2)) && [5, 6, 7].indexOf(omess.type) === -1) {\n                const newomess = messages[Number(imess) + 1]\n                if (omess.sender_uin && newomess.sender_uin && !newomess.checked_ava) {\n                  if ((omess.sender_uin === newomess.sender_uin) && ((Number(newomess.created_at) - Number(omess.created_at)) < 60000000)) {\n                    messages[Number(imess) + 1].checked_ava = true\n                  }\n                }\n              }\n              if (omess && omess.created_at) {\n                const created_at = convertSecondUnix(Number(omess.created_at))\n                const date = timesUnixToDate(created_at, Number(omess.created_at))\n                if (!objDate[date]) { objDate[date] = { data: [], date: date, datestr: timeConverter(date, 'dateweek') } }\n                const findMess = objDate[date].data.find(o => o.message_id === omess.message_id)\n                if (!findMess) {\n                  objDate[date].data.unshift(omess)\n                }\n              }\n            }\n            this.setState({ messages: objDate }, () => {\n              const chatListDiv = document.getElementById('zchat_list')\n              if (chatListDiv) {\n                try {\n                  if (chatListDiv.scrollHeight && (chatListDiv.scrollHeight - oldheight) > 0) {\n                    chatListDiv.scrollTop = chatListDiv.scrollHeight - oldheight\n                  }\n                } catch (e) { }\n              }\n            })\n          } else {\n            this.setState({ scroll_mess: false })\n          }\n        })\n      }\n\n    }\n  }\n\n  chooseGroup(group) {\n    let netaMess = this.props.netaMess\n    let netaPinMess = this.props.netaPinMess\n    const group_id = group.group_id\n    let netaGroupsLastMess = global.rxu.json(rxgetLocal('netaGroupsLastMess'), {})\n    let last_message_id_tmp\n    if (typeof netaGroupsLastMess !== 'undefined' && typeof netaGroupsLastMess.groups !== 'undefined' && typeof netaGroupsLastMess.groups[group.group_id] !== 'undefined') {\n\n      last_message_id_tmp = netaGroupsLastMess.groups[group.group_id].last_message_id\n\n    } else {\n      last_message_id_tmp = group.last_message_id\n    }\n\n\n    if (group && group.last_message_id) {\n      this.checkReaded(group.group_id, last_message_id_tmp)\n    }\n    if (group.group_id !== this.state.group_id) {\n      this.setState({ group_id: group_id, group: group }, () => {\n        if (last_message_id_tmp) {\n          this.checkReaded(group.group_id, last_message_id_tmp)\n        }\n      })\n    }\n\n    const msg = {\n      group_id: group_id,\n      pindex: 0,\n      psize: 30\n    }\n    let objMessTmp = {}\n    if (group_id && netaMess && netaMess['data'] && netaMess['data'][group_id.toString()] && netaMess['data'][group_id.toString()]['messages']) {\n      for (let keyCreate of Object.keys(netaMess['data'][group_id.toString()]['messages'])) {\n        const createdAt = convertSecondUnix(Number(keyCreate))\n        const dateTmp = timesUnixToDate(createdAt, Number(keyCreate))\n        if (!objMessTmp[dateTmp]) { objMessTmp[dateTmp] = { data: [], date: dateTmp, datestr: timeConverter(dateTmp, 'dateweek') } }\n        objMessTmp[dateTmp]['data'].push(netaMess['data'][group_id.toString()]['messages'][keyCreate])\n      }\n    }\n    let objMessPin = {}\n    if (group_id && netaPinMess && netaPinMess['data'] && netaPinMess['data'][group_id.toString()] && netaPinMess['data'][group_id.toString()]['messages']) {\n      for (let keyCreate of Object.keys(netaPinMess['data'][group_id.toString()]['messages'])) {\n        const createdAt = convertSecondUnix(Number(keyCreate))\n        const dateTmp = timesUnixToDate(createdAt, Number(keyCreate))\n        if (!objMessPin[dateTmp]) { objMessPin[dateTmp] = { data: [], date: dateTmp, datestr: timeConverter(dateTmp, 'dateweek') } }\n        objMessPin[dateTmp]['data'].push(netaPinMess['data'][group_id.toString()]['messages'][keyCreate])\n      }\n    }\n    // console.log(\"netaPinMess\",netaPinMess,objMessPin)\n    this.checkImage = {}\n    this.pg_mess = 0\n    // this.setState({ popupGroup: false })\n    this.setState({popupGroup: false, group_id: group_id, group: group, messages: objMessTmp, pinedMess: objMessPin, scroll_mess: false, mess: '' }, () => {\n      const chatDiv = document.getElementById('zchat_list')\n      if (chatDiv) {\n        chatDiv.scrollTop = chatDiv.scrollHeight\n      }\n      if (rxio.connected) {\n        const getObjMess = (data, sortField = 'created_at') => {\n          const messages = data.messages.sort((a, b) => Number(a[sortField]) < Number(b[sortField]) ? -1 : 1)\n          const objDate = {}\n          let messArrProps = []\n          for (const imess in messages) {\n            const omess = messages[imess]\n            if ((imess < (messages.length - 2)) && [5, 6, 7].indexOf(omess.type) === -1) {\n              const newomess = messages[Number(imess) + 1]\n              if (omess.sender_uin && newomess.sender_uin && !newomess.checked_ava) {\n                if ((omess.sender_uin === newomess.sender_uin) && ((Number(newomess[sortField]) - Number(omess[sortField])) < 60000000)) {\n                  messages[Number(imess) + 1].checked_ava = true\n                }\n              }\n            }\n            if (omess && omess[sortField]) {\n              const created_at = convertSecondUnix(Number(omess[sortField]))\n              const date = timesUnixToDate(created_at, Number(omess[sortField]))\n              if (!objDate[date]) { objDate[date] = { data: [], date: date, datestr: timeConverter(date, 'dateweek') } }\n              objDate[date].data.push(omess)\n              messArrProps.push(omess)\n            }\n            // }\n          }\n          return { objDate, messArrProps }\n        }\n        rxio.socket.emit('list_message', msg, (data) => {\n          if (group_id === this.state.group_id) {\n            if (data && data.last_message_id && data.messages && data.messages.constructor === Array && data.messages.length > 0) {\n              const { objDate, messArrProps } = getObjMess(data)\n              this.setState({ messages: objDate, scroll_mess: true }, () => {\n                this.props.netaMessAdd(group.group_id, messArrProps)\n              })\n              const chatDivTmp = document.getElementById('zchat_list')\n              if (chatDivTmp) {\n                chatDivTmp.scrollTop = chatDivTmp.scrollHeight\n              }\n            }\n          }\n        })\n        rxio.socket.emit('list_pinned_message', { group_id }, (data) => {\n          if (group_id === this.state.group_id) {\n            if (data && data.result === 0) {\n              const { objDate, messArrProps } = getObjMess(data, \"pinned_at\")\n              this.setState({ pinedMess: objDate }, () => {\n                this.props.netaMessPin(group.group_id, messArrProps)\n              })\n            }\n          }\n        })\n      }\n\n    })\n  }\n\n  checkReaded(group_id, mess_id) {\n\n    let groups = this.state.groups\n    const msg = {\n      group_id: group_id,\n      message_id: mess_id,\n      message: '',\n      status: 3\n    }\n    if (!groups) {\n      try {\n        const groupneta = rxaget(this.props, 'netaGroups', {})\n        const arrGroups = []\n        if (groupneta && groupneta.groups) {\n          for (const idgroup of Object.keys(groupneta.groups)) {\n            if (groupneta.groups[idgroup]) {\n              let ogroup = groupneta.groups[idgroup]\n              ogroup['group_fullname'] = checkNameGroup(ogroup, this.users, this.userid)\n              if (ogroup && (ogroup.type === 3 || ogroup.type === 5) && !ogroup.avatar_url && rxaget(ogroup, 'occupants_uins', []).length === 2) {\n                const arrUins = rxaget(ogroup, 'occupants_uins', [])\n                ogroup['partner_id'] = (arrUins[0].toString() === this.userid.toString()) ? arrUins[1] : arrUins[0]\n              }\n              arrGroups.push(ogroup)\n            }\n          }\n        }\n\n        groups = sortArrObj(arrGroups, 'last_message.created_at', 'desc').slice(0, 20)\n      } catch (e) { console.log(e) }\n    }\n\n    if (rxio.connected) {\n      // if (groups && groups[group_id]) {\n      //   let objGroup = groups[group_id]\n      //   let cntNoti = rxaget(objGroup, 'count_unread', 0) + rxaget(objGroup, 'unread_cnt', 0)\n      //   if (cntNoti > 0) {\n          rxio.socket.emit('update_message', msg, (data) => {\n            if (groups && groups.constructor === Array && groups.length > 0) {\n              groups.forEach(group => {\n                if (group.group_id === group_id) {\n                  group.unread_cnt = 0\n                  group.count_unread = 0\n                  group.last_message_id = group.last_message.message_id\n                  this.props.netaGroupsUpdate(group.group_id, group, true)\n                }\n              })\n              this.setState(groups)\n            }\n          })    \n      //   }\n      // }      \n    }\n  }\n\n  changeMessage(e) {\n    const group_id = this.state.group_id\n    if (this.userid && group_id) {\n      const me_typing = this.state.me_typing\n      if (e.currentTarget.textContent) {\n        if (me_typing === false) {\n          rxio.sendGroupEvent(group_id, this.userid, 9)\n        }\n        const value = e.currentTarget.textContent\n        this.setState({ mess: value, me_typing: true }, () => {\n          setTimeout(() => {\n            if ((value === this.state.mess) && me_typing) {\n              rxio.sendGroupEvent(group_id, this.userid, 10)\n              this.setState({ me_typing: false })\n            }\n          }, 2000)\n        })\n      }\n    }\n  }\n\n  checkTypeDelMess() {\n    let result = 0\n    let messSelectedType = rxaget(this.state, 'mess_selected.type', '')\n    let exclude = [1,/* 5, 6, 7*/,10]\n    if (rxaget(this.state, 'mess_selected.sender_uin', '').toString() === this.userid.toString()) {\n      if (exclude.indexOf(messSelectedType) !== -1 ) {\n        result = 1\n      } else {\n        if([5,6,7].indexOf(messSelectedType)  !== -1){\n          result = 4        \n        }else{\n          result = 3\n        }\n      }\n    }\n    if (rxaget(this.state, 'mess_selected.status', 0) === 4) {\n      result = 2\n    }\n    if (rxaget(this.state, 'mess_selected.deleted_uins', []).indexOf(this.userid.toString()) !== -1) {\n      result = 2\n    }\n    if (result === 0 && rxaget(this.state, 'mess_selected.message', '') !== '') {\n      result = 3\n    }\n    if (result === 0 && rxaget(this.state, 'mess_selected.message', '') === '') {\n      if (exclude.indexOf(messSelectedType) >= 0) {\n        result = 1\n      } else {\n        if([5,6,7].indexOf(messSelectedType)  !== -1){\n          result = 4        \n        }else{\n          result = 3\n        }\n      }\n    }\n\n    // if (result === 3 && messSelectedType === 3) {\n    //   result = 4\n    // }\n    return result\n  }\n\n  reloadStateWhenRepMess(data) {\n    // this.setState({ type_option: 0, mess_selected: {}, mess_id: '' }, () => {\n    //   // this.handleMessage(data.message, true)\n    // })\n  }\n\n  resetSelectedMess() {\n    this.setState({ type_option: 0, mess_selected: {}, mess_id: '' })\n  }\n\n  forwardAudio(group_id,audioAttachments){\n    const arrUsers = this.users\n    const user = rxaget(this.props, 'netaauth.user', {})\n    const objUser = arrUsers[user.id.toString()]\n    \n    let msg = {}\n    let audioAttachmentsTmp = audioAttachments\n    let arrImg =[]\n\n    audioAttachmentsTmp = audioAttachmentsTmp.replaceAll('\\\\\"', '\"')\n    audioAttachmentsTmp = JSON.parse(audioAttachmentsTmp)    \n    arrImg[0]=audioAttachmentsTmp.audio   \n\n    if (arrImg && arrImg.constructor === Array && arrImg.length > 0 ) {\n      msg = {\n        group_id: Number(group_id),\n        type: 3,\n        version: 1,\n        nonce: (Math.floor(Date.now()) * 1000).toString(),\n        sender_name: rxaget(objUser, 'full_name', ''),\n        attachments: JSON.stringify({ audio: arrImg[0] }).replace(/\"/g, '\\\\\"')\n      }\n    }\n\n    if (msg && msg.group_id) {\n      if (rxio.connected) {\n        rxio.socket.emit('create_message', msg, (data) => {\n          if (data && data.message) {\n            try {\n              let objMedia = {\n                group_id: Number(group_id),\n                media_type: msg.type,\n                message_id: Number(data.message.message_id),\n                msg_create_at: Number(data.message.created_at),\n                url: rxaget(arrImg, '0.url', '')\n              }\n\n              this.props.netaMediaOneAdd(Number(group_id), objMedia)\n            } catch(e) {\n              console.log(e)\n            }\n\n            this.handleMessage(data.message, true)\n          }\n        })  \n      }\n      \n    }\n  }\n\n  chooseGroupForward(groupfw) {\n    let isForwardAudio = this.state.isForwardAudio\n    let mess_selected = {}\n    if(isForwardAudio === true){\n      let audioAttachments = this.state.mess_selected.attachments\n      this.forwardAudio(groupfw.group_id, audioAttachments)\n      isForwardAudio = false\n    }else{\n      mess_selected = this.state.mess_selected\n      mess_selected['groupfw'] = groupfw.group_id  \n    }\n    \n    this.setState({ mess_selected: mess_selected, popupGroup: false, type_option: 2, isForwardAudio:isForwardAudio })\n  }\n\n  onClickAva(_id) {\n    this.setState({ tabmore: !this.state.tabmore, id_userclick: _id })\n  }\n\n  onClose() {\n    this.setState({ tabmore: false })\n  }\n\n  showGalleryCurrentUser({ index, type }) {\n    this.setState({ checkgallery: true, galleryPosition: Number(index), type: type })\n  }\n\n  changeTabActive(type) {\n    const group_id = rxaget(this.state.group, 'group_id', '')\n    const netaMedia = rxaget(this.props.netaMedia, 'data.' + group_id, { images: {}, videos: {}, files: {} })\n    let arrData = []\n    if (netaMedia && netaMedia[type]) {\n      for (const key of Object.keys(netaMedia[type] || {})) {\n        if (netaMedia[type][key]) { arrData.push(netaMedia[type][key]) }\n      }\n    }\n    arrData = arrData.sort((a, b) => (a.msg_create_at > b.msg_create_at) ? -1 : ((b.msg_create_at > a.msg_create_at) ? 1 : 0))\n    this.setState({ tabActive: type, arrData: arrData })\n  }\n\n  onClickInfoUser(userInfo) {\n    let userOwner = rxaget(this.props, 'netaauth.user', {})    \n    let partner_id = userInfo.id\n    let userClick_group =this.getGroupByUserId(partner_id)\n    this.setState({ \n      infoUserScreen: true, \n      userInfo: userInfo,\n      userClick_group:userClick_group\n    })\n  }\n\n  onClickNameUser(userId) {\n    let userInfo = rxaget(this.users, userId, {})\n    let userOwner = rxaget(this.props, 'netaauth.user', {})    \n    let partner_id = userInfo.id\n    let userClick_group =this.getGroupByUserId(partner_id)\n    this.setState({ \n      infoUserScreen: true, \n      userInfo: userInfo,\n      userClick_group:userClick_group\n    })\n  }\n\n  closePopupInfoUser() {\n    this.setState({ \n      infoUserScreen: false \n    })\n  }\n\n  getStringsImages(arrData) {\n    let galleryImages = ''\n    arrData.forEach(element => {\n      galleryImages += element.url.replace(/\\s/g, '') + ','\n    })\n    return (\n      galleryImages\n    )\n  }\n\n  scrollDownChatList(e) {\n    const chatListDiv = document.getElementById('zchat_list')\n    if (chatListDiv) {\n      chatListDiv.scrollTop = chatListDiv.scrollHeight\n    }\n  }\n\n  render() {\n    // console.log('Render Messages')\n    return (\n      <Fragment>\n        {this.renderComponent()}\n      </Fragment>)\n  }\n}\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  langValue: state.langValue,\n  rxgroup: state.rxgroup,\n  user: state.user,\n  netaauth: state.netaauth,\n  netaMess: state.netaMess,\n  netaPinMess: state.netaPinMess,\n  tabmore: state.tabmore,\n  group_id: state.group_id,\n  netaGroups: state.netaGroups,\n  netaLink: state.netaLink,\n  loadmess: state.loadmess\n})\nconst mapDispatchToProps = {\n  netaBlobsUpdate,\n  netaMessAdd,\n  netaMessPin,\n  chooseGroupAction,\n  netaUserUpdate,\n  netaGroupsUpdate,\n  netaGroupsUpdateLastMess,\n  changeStatusTabmore,\n  netaLinkAdd,\n  netaGroupsRemove,\n  updateUserStatus,\n  netaMediaOneAdd,\n  userClickUpdate\n}\nconst MessagesWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\nexport default MessagesWrapped","import { combineReducers, createStore } from 'redux'\nimport { } from './global'\n\nconst { rxsetLocal, rxgetLocal } = global.rootRequire('classes/request')\n\nlet initialState = {\n  activeComponent: 'chat',\n  user: { status: false, users: {}, ids: [] },\n  auth: { status: false, user: {} },\n  rxSearch: { params: {} },\n  viewed: { status: false, products: {} },\n  rxgroup: { status: false, group: {}, groupid: '' },\n  tabmore: { status: false, data: false },\n  loadmess: { status: false, data: false },\n  groupMess: { status: false, data: {} },\n  netaauth: { status: false, user: {} },\n  netaRegisteredUsers: { status: false, data: [] },\n  netaCallHistory: { status: false, data: [] },\n  netaGroups: { status: false, groups: {}, group_id_change: '' },\n  netaGroupsLastMess: { groups: {} },\n  netaContact: { status: false, data: {} },\n  netaBlobs: { status: false, data: {} },\n  netaMess: { status: false, data: {} },\n  netaPinMess: { status: false, data: {} },\n  netaCalling: { status: false, data: {} },\n  netaMedia: { status: false, data: {} },\n  netaLink: { status: false, data: {} },\n  netaCall: { status: false, type_call: '', payload: {} },\n  netaAuthSetting: { groups: {} },\n  recentSearchGroups: { groups: {} },\n  recentContactGroups: { groups: {} },\n  usersStatus: {},\n  netaPopup: { status: false, type_popup: '', data: {} },\n  userClickInfo:{}\n}\n\nconst initialStateLate = {\n  activeComponent: rxgetLocal('activeComponent') || 'chat',\n  user: global.rxu.json(rxgetLocal('rxusers'), { status: false, users: {}, ids: [] }),\n  auth: global.rxu.json(rxgetLocal('rxuser'), { status: false, user: {} }),\n  rxSearch: global.rxu.json(rxgetLocal('rxsearch'), { params: {} }),\n  viewed: global.rxu.json(rxgetLocal('rxviewed'), { status: false, products: {} }),\n  rxgroup: global.rxu.json(rxgetLocal('rxgroup'), { status: false, group: {}, groupid: '' }),\n  tabmore: global.rxu.json(rxgetLocal('rxtabmore'), { status: false, data: false }),\n  loadmess: global.rxu.json(rxgetLocal('rxloadmess'), { status: false, data: false }),\n\n  netaauth: global.rxu.json(rxgetLocal('rxuserneta'), { status: false, user: {} }),\n  netaRegisteredUsers: global.rxu.json(rxgetLocal('netaRegisteredUsers'), { status: false, data: [] }),\n  netaCallHistory: global.rxu.json(rxgetLocal('netaCallHistory'), { status: false, data: [] }),\n  netaGroups: global.rxu.json(rxgetLocal('netaGroups'), { status: false, init: false, groups: {}, group_id_change: '' }),\n  netaGroupsLastMess: global.rxu.json(rxgetLocal('netaGroupsLastMess'), { groups: {} }),\n  netaContact: global.rxu.json(rxgetLocal('netaContacts'), { status: false, data: {} }),\n  netaBlobs: global.rxu.json(rxgetLocal('rxnetaBlobs'), { status: false, data: {} }),\n  netaMess: global.rxu.json(rxgetLocal('netaMess'), { status: false, data: {} }),\n  netaPinMess: global.rxu.json(rxgetLocal('netaPinMess'), { status: false, data: {} }),\n  netaCalling: global.rxu.json(rxgetLocal('netaCalling'), { status: false, data: {} }),\n  netaMedia: global.rxu.json(rxgetLocal('netaMedia'), { status: false, data: {} }),\n  netaLink: global.rxu.json(rxgetLocal('netaLink'), { status: false, data: {} }),\n  langValue: global.rxu.json(rxgetLocal('netaLang'), 'vi'),\n  pageValue: global.rxu.json(rxgetLocal('netaPage'), ''),\n  themeValue: global.rxu.json(rxgetLocal('netaThemeColor'), ''),\n  themeBackgroudValue: global.rxu.json(rxgetLocal('netaThemeBackGround'), ''),\n  notificationStatusValue: global.rxu.json(rxgetLocal('netaNotificationStatus'), ''),\n  netaAuthSetting: global.rxu.json(rxgetLocal('netaAuthSetting'), { groups: {} }),\n  usersStatus: global.rxu.json(rxgetLocal('netaUsersStatus'), {}),\n  recentSearchGroups: global.rxu.json(rxgetLocal('netaRecentSearchGroups'), {}),\n  recentContactGroups: global.rxu.json(rxgetLocal('netaRecentContact'), {}),\n}\n\nexport const setComp = comp => ({\n  type: 'SET_COMP',\n  comp\n})\n\nexport const activateGeod = geod => ({\n  type: 'ACTIVATE_GEOD',\n  geod\n})\n\nexport const closeGeod = () => ({\n  type: 'CLOSE_GEOD'\n})\n\nexport const loginAction = (user) => ({\n  type: 'LOGIN',\n  user: user\n})\n\nexport const logoutAction = () => ({\n  type: 'LOGOUT'\n})\n\nexport const netaloginAction = (user) => {\n  return ({\n    type: 'NETALOGIN',\n    user: user\n  })\n}\n\nexport const userClickUpdate = (user) => {\n  return ({\n    type: 'USER_CLICK_UPDATE',\n    user: user\n  })\n}\n\nexport const netaUpdateProfileAction = (data) => {\n  return ({\n    type: 'NETA_UPDATE_PROFILE',\n    data\n  })\n}\n\nexport const netaAuthSettingUpdate = (data) => ({\n  type: 'NETA_AUTH_SETTING_UPDATE',\n  data: data\n})\n\nexport const netaAuthSettingSoundUpdate = (data) => ({\n  type: 'NETA_AUTH_SETTING_SOUND_UPDATE',\n  data: data\n})\n\nexport const netalogoutAction = () => ({\n  type: 'NETALOGOUT'\n})\n\nexport const chooseGroupAction = (group) => ({\n  type: 'CHOOSE_GROUP',\n  group: group\n})\n\nexport const netaRegisteredUsersUpdate = (data) => ({\n  type: 'NETA_REGISTERED_USERS_UPDATE',\n  data: data\n})\n\nexport const netaAddRegisteredUser = (data) => ({\n  type: 'NETA_ADD_REGISTERED_USER',\n  data: data\n})\n\nexport const netaCallHistoryUpdate = (data) => ({\n  type: 'NETA_CALL_HISTORY_UPDATE',\n  data: data\n})\n\nexport const netaGroupsUpdate = (id, data, updateOnly) => ({\n  type: 'NETA_GROUPS_UPDATE',\n  id: id,\n  data: data,\n  updateOnly: updateOnly\n})\n\nexport const updateRecentSearchGroups = (id, data, time) => ({\n  type: 'UPDATE_RECENT_SEARCH_GROUPS',\n  id: id,\n  data: data,\n  time: time\n})\n\nexport const updateRecentContactGroups = (id, time) => ({\n  type: 'UPDATE_RECENT_CONTACT_GROUPS',\n  id: id,\n  time: time\n})\n\nexport const createRecentContactGroups = (data) => ({\n  type: 'CREATE_RECENT_CONTACT_GROUPS',\n  data: data\n})\n\nexport const netaGroupsRemove = (id) => ({\n  type: 'NETA_GROUPS_REMOVE',\n  id: id\n})\n\nexport const netaGroupsUpdateLastMess = (id, data_id, data) => ({\n  type: 'NETA_GROUPS_UPDATE_LAST_MESS',\n  id: id,\n  data_id: data_id,\n  data: data\n})\n\nexport const netaUserUpdate = (data) => ({\n  type: 'USER_UPDATE',\n  data: data\n})\n\nexport const netaUserSetGroupid = (userid,group_id) => ({\n  type: 'USER_SET_GROUPID',\n  userid:userid,\n  group_id: group_id\n})\n\nexport const netaGroupsUpdateArr = (data, init) => ({\n  type: 'NETA_GROUPS_UPDATE_ARR',\n  data: data,\n  init: init\n})\n\nexport const netaGroupsUpdateUnpin = (user_id, group_id) => ({\n  type: 'NETA_GROUPS_UPDATE_UNPIN',\n  user_id: user_id,\n  group_id: group_id\n})\n\nexport const netaBlobsUpdate = (id, data) => ({\n  type: 'NETA_BLOBS_UPDATE',\n  id: id,\n  data: data\n})\n\nexport const netaBlobsUpdateArr = (id, data) => ({\n  type: 'NETA_BLOBS_UPDATE_ARR',\n  id: id,\n  data: data\n})\n\nexport const netaMediaAdd = (id, data) => ({\n  type: 'NETA_MEDIA_ADD',\n  id: id,\n  data: data\n})\n\nexport const netaMediaOneAdd = (id, data) => ({\n  type: 'NETA_MEDIA_ONE_ADD',\n  id: id,\n  data: data\n})\n\nexport const netaLinkAdd = (id, data) => ({\n  type: 'NETA_LINK_ADD',\n  id: id,\n  data: data\n})\n\nexport const netaMessAdd = (groupid, mess) => ({\n  type: 'NETA_MESS_ADD',\n  id: groupid,\n  mess: mess\n})\n\nexport const netaMessRemove = (groupid, mess) => ({\n  type: 'NETA_MESS_REMOVE',\n  id: groupid\n})\n\nexport const netaMessGet = (groupid, callback) => ({\n  type: 'NETA_MESS_GET',\n  id: groupid,\n  callback: callback\n})\n\nexport const netaMessClear = () => ({\n  type: 'NETA_MESS_CLEAR'\n})\n\nexport const netaMessPin = (groupid, mess) => ({\n  type: 'NETA_MESS_PIN',\n  id: groupid,\n  mess: mess\n})\n\nexport const netaMessPinClear = () => ({\n  type: 'NETA_MESS_PIN_CLEAR'\n})\n\nexport const netaCallingStart = (data) => ({\n  type: 'NETA_CALLING_START',\n  data: data\n})\n\nexport const netaCallingStop = (data) => ({\n  type: 'NETA_CALLING_STOP',\n  data: data\n})\n\nexport const rxsearchChange = (id, payload) => ({\n  type: 'SEARCH_CHANGE',\n  id: id,\n  params: payload\n})\n\nexport const rxsearchClear = () => ({\n  type: 'SEARCH_CLEAR'\n})\n\nexport const viewedAdd = (id, payload) => ({\n  type: 'VIEWED_ADD',\n  id: id,\n  product: payload\n})\n\nexport const userAdd = (id, payload) => ({\n  type: 'USER_ADD',\n  id: id,\n  user: payload\n})\n\nexport const userAddArr = (payload) => ({\n  type: 'USER_ADD_ARR',\n  users: payload\n})\n\nexport const userSub = (id, payload) => ({\n  type: 'USER_SUB',\n  id: id,\n  user: payload\n})\n\nexport const userDelete = (id) => ({\n  type: 'USER_DELETE',\n  id: id\n})\n\nexport const userClear = () => ({\n  type: 'USER_CLEAR'\n})\n\nexport const updateUserStatus = (data) => ({\n  type: 'USER_STATUS_UPDATE',\n  data\n})\n\nexport const clickCall = (typecall, payload) => ({\n  type: 'CLICK_CALL',\n  type_call: typecall,\n  payload: payload\n})\n\nexport const closePopup = (typepopup) => ({\n  type: 'CLOSE_POPUP',\n  type_popup: typepopup\n})\n\nexport const changeStatusTabmore = (data) => ({\n  type: 'TABMORE_CHANGE',\n  data: data\n})\n\nexport const changeStatusLoadMess = () => ({\n  type: 'LOADMESS_CHANGE'\n})\n\nexport const saveLanguage = (data) => ({\n  type: 'CHANGE_LANG',\n  data: data\n})\n\nexport const savePage = (data) => ({\n  type: 'CHANGE_PAGE',\n  data: data\n})\n\nexport const saveTheme = (data) => ({\n  type: 'CHANGE_THEME',\n  data: data\n})\n\nexport const saveThemeBackgroud = (data) => ({\n  type: 'CHANGE_THEMEBACKGROUD',\n  data: data\n})\n\nexport const saveNotificationStatus = (data) => ({\n  type: 'CHANGE_NOTIFICATION_STATUS',\n  data: data\n})\n\nexport const contactAdd = (payload) => ({\n  type: 'CONTACT_ADD',\n  contacts: payload\n})\n\nexport const addNewMessAction = (data) => ({\n  type: 'ADD_MESS_GROUP',\n  mess: data\n})\n\nexport const geod = (state = {}, action) => {\n  switch (action.type) {\n    case 'ACTIVATE_GEOD':\n      return action.geod\n\n    case 'CLOSE_GEOD':\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport const user = (state = initialStateLate.user, action) => {\n  switch (action.type) {\n    case 'USER_ADD': {\n      if (!state) { state = { status: false, users: {}, ids: [] } }\n      if (typeof (state.users) === 'undefined') { state.users = {} }\n      if (typeof (state.ids) === 'undefined') { state.ids = [] }\n\n      if (state && state.users && action.id) {\n        if (action && action.user && action.user.data) {\n          state.users[action.id] = {\n            id: action.id, email: action.user.data.email || '',\n            full_name: action.user.data.full_name || '', profile_url: action.user.data.profile_url || '',\n            name_contact: action.user.data.name || '', phone: action.user.data.phone || ''\n          } || state.users[action.id]\n        }\n\n        const newState = { status: !state.status, users: state.users, ids: Object.keys(state.users) }\n        rxsetLocal('rxusers', JSON.stringify(newState))\n\n        return newState\n      } else {\n        return state\n      }\n    }\n\n    case 'USER_ADD_ARR': {\n      if (!state) { state = { status: false, users: {}, ids: [] } }\n      if (typeof (state.users) === 'undefined') { state.users = {} }\n      if (typeof (state.ids) === 'undefined') { state.ids = [] }\n\n      let checkChange = false\n      if (action && action.users && action.users.constructor === Array && action.users.length > 0) {\n        for (let user of action.users) {\n          if (state.users[user.id] && (state.users[user.id]['full_name'] === user['full_name'] && state.users[user.id]['profile_url'] === user['profile_url'])) {\n            // checkChange = checkChange\n          } else {\n            checkChange = true\n            state.users[user.id] = { id: user.id, email: user.email || '', full_name: user.full_name || '', profile_url: user.profile_url || '', name_contact: user.name || '', phone: user.phone || '' }\n          }\n        }\n      }\n      if (checkChange) {\n        const newState = { status: !state.status, users: state.users, ids: Object.keys(state.users) }\n        rxsetLocal('rxusers', JSON.stringify(newState))\n        return newState\n      } else {\n        return state\n      }\n\n\n    }\n\n    case 'USER_UPDATE': {\n      if (!state) { state = { status: false, users: {}, ids: [] } }\n      if (typeof (state.users) === 'undefined') { state.users = {} }\n      if (typeof (state.ids) === 'undefined') { state.ids = [] }\n\n      if (state && state.users) {\n        if (action && action.data) {\n          state.users[action.data.id] = action.data\n        }\n\n        const newState = { status: !state.status, users: state.users, ids: Object.keys(state.users) }\n        rxsetLocal('rxusers', JSON.stringify(newState))\n\n        return newState\n      } else {\n        return state\n      }\n    }\n    case 'USER_SET_GROUPID': {\n      if (!state) { state = { status: false, users: {}, ids: [] } }\n      if (typeof (state.users) === 'undefined') { state.users = {} }\n      if (typeof (state.ids) === 'undefined') { state.ids = [] }\n\n      if (state && state.users) {\n        if (action && action.userid && action.group_id) {\n          if(state.users[action.userid]){\n           if(action.userid==='281474977724903'){\n           }\n            state.users[action.userid].group_id = action.group_id  \n          }          \n        }\n        const newState = { status: !state.status, users: state.users, ids: Object.keys(state.users) }\n        rxsetLocal('rxusers', JSON.stringify(newState))\n\n        return newState\n      } else {\n        return state\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaCall = (state = initialState.netaCall, action) => {\n  switch (action.type) {\n    case 'CLICK_CALL': {\n      if (!state) { state = { status: false, type_call: action.type_call || '', payload: action.payload || {} } }\n      return { status: !state.status, type_call: action.type_call || '', payload: action.payload || {} }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const clickPopup = (typepopup, data, callback) => ({\n  type: 'CLICK_POPUP',\n  type_popup: typepopup,\n  data: data,\n  callback: callback\n})\n\nexport const netaPopup = (state = initialState.netaPopup, action) => {\n  switch (action.type) {\n    case 'CLICK_POPUP': {\n      if (!state) { //nếu state null\n        state = { status: true, type_popup: action.type_popup || '', data: action.data || {} } //khởi tạo state với 3 field \n      }\n      let newState = { status: !state.status, type_popup: action.type_popup || '' } //phủ định lại field status\n      if (action.data && action.data.data) { //action.data.data không null\n        newState.data = action.data.data\n      }\n      if (['create_group', 'add_member', 'leave_group'].includes(action.type_popup)) {\n        newState.callback = action.callback\n      }\n      return newState\n    }\n\n    case 'CLOSE_POPUP': {\n      if (!state) { state = { status: false, type_popup: action.type_popup || '', data: action.data || {} } }\n      let newState = { status: !state.status, type_popup: '', data: {} }\n\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaContact = (state = initialStateLate.netaContact, action) => {\n  switch (action.type) {\n    case 'CONTACT_ADD': {\n      if (!state) { state = { status: false, data: {} } }\n      if (typeof (state.data) === 'undefined') { state.data = {} }\n      let checkChange = false\n      if (action && action.contacts && action.contacts.constructor === Array && action.contacts.length > 0) {\n        for (let contact of action.contacts) {\n          if (state.data[contact.phone] && state.data[contact.phone] === contact.name) {\n            // checkChange = checkChange\n          } else {\n            if (contact && contact.phone) {\n              checkChange = true\n              state.data[contact.phone] = contact.name || ''\n            }\n          }\n        }\n      }\n      // console.log(\"CONTACT_ADD\",state.data)\n      if (checkChange) {\n        const newState = { status: !state.status, data: state.data }\n        rxsetLocal('netaContacts', JSON.stringify(newState))\n        return newState\n      } else {\n        return state\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const auth = (state = initialState.auth, action) => {\n  switch (action.type) {\n    case 'LOGIN': {\n      if (!state) { state = { status: false, user: {} } }\n      if (typeof (state.user) === 'undefined') { state.user = {} }\n\n      if (typeof (action.user) !== 'undefined') {\n        state.user = action.user\n      }\n\n      const newState = { status: !state.status, user: state.user }\n      rxsetLocal('rxuser', JSON.stringify(newState))\n      return newState\n    }\n\n    case 'LOGOUT': {\n      const newState = { status: !state.status, user: {} }\n      rxsetLocal('rxuser', JSON.stringify(newState))\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaauth = (state = initialState.netaauth, action) => {\n  switch (action.type) {\n    case 'NETALOGIN': {\n      if (!state) { state = { status: false, user: {} } }\n      if (typeof (state.user) === 'undefined') { state.user = {} }\n\n      if (typeof (action.user) !== 'undefined') {\n        state.user = action.user\n      }\n\n      const newState = { status: !state.status, user: state.user }\n      rxsetLocal('rxuserneta', JSON.stringify(newState))\n\n      if (!rxgetLocal('rxusers')) {\n        const rxusers = { status: false, users: {}, ids: [] }\n        rxsetLocal('rxusers', JSON.stringify(rxusers))\n      }\n      if (!rxgetLocal('netaGroups')) {\n        const groupsNeta = { status: false, groups: {}, group_id_change: '' }\n        rxsetLocal('netaGroups', JSON.stringify(groupsNeta))\n      }\n\n      return newState\n    }\n    case 'NETA_UPDATE_PROFILE': {\n      if (!state) { state = { status: false, user: {} } }\n\n      if (action.data) {\n        state.user = { ...state.user, ...action.data }\n      }\n      const newState = { status: !state.status, user: state.user }\n      rxsetLocal('rxuserneta', JSON.stringify(newState))\n\n      return newState\n    }\n    case 'NETALOGOUT': {\n      const newState = { status: !state.status, user: {} }\n      rxsetLocal('rxuserneta', JSON.stringify(newState))\n\n      const netaBlobs = { status: false, data: {} }\n      rxsetLocal('rxnetaBlobs', JSON.stringify(netaBlobs))\n\n      const groupsNeta = { status: false, init: false, groups: {}, group_id_change: '' }\n      rxsetLocal('netaGroups', JSON.stringify(groupsNeta))\n\n      const rxusers = { status: false, users: {}, ids: [] }\n      rxsetLocal('rxusers', JSON.stringify(rxusers))\n\n      const netaMess = { status: false, data: {} }\n      rxsetLocal('netaMess', JSON.stringify(netaMess))\n      rxsetLocal('netaGroupsLastMess', JSON.stringify({ groups: {} }))\n\n      const netaMedia = { status: false, data: {} }\n      rxsetLocal('netaMedia', JSON.stringify(netaMedia))\n      rxsetLocal('netaLink', JSON.stringify(netaMedia))\n      rxsetLocal('netaContacts', JSON.stringify(netaMedia))\n\n      const netaCallHistory = { status: false, data: [] }\n      rxsetLocal('netaCallHistory', JSON.stringify(netaCallHistory))\n      rxsetLocal('netaRegisteredUsers', JSON.stringify(netaCallHistory))\n\n      const newGroupOne = { status: false, group: {}, groupid: '' }\n      rxsetLocal('rxgroup', JSON.stringify(newGroupOne))\n\n      const rxgroupsneta = { status: false, groups: {} }\n      rxsetLocal('rxgroupsneta', JSON.stringify(rxgroupsneta))\n\n      rxsetLocal('groupsTemp', JSON.stringify({}))\n      rxsetLocal('netaUserStatus', JSON.stringify({}))\n      rxsetLocal('rxemoji', JSON.stringify({}))\n      rxsetLocal('rxsticker', JSON.stringify({}))\n\n      rxsetLocal('netaThemeBackGround', 'defaultTheme')\n      rxsetLocal('netaThemeColor', 'orangeColor')\n      rxsetLocal('netaNotificationStatus', true)\n      rxsetLocal('netaLastSeenMessObj', JSON.stringify({}))\n\n      rxsetLocal('netaPinMess', JSON.stringify({ status: false, data: {} }))\n      rxsetLocal('netaAuthSetting', JSON.stringify({ groups: {} }))\n      rxsetLocal('netaRecentContact', JSON.stringify({ groups: {} }))\n      rxsetLocal('netaRecentSearchGroups', JSON.stringify({ groups: {} }))\n      rxsetLocal('netaUsersStatus', JSON.stringify({}))\n      rxsetLocal('netaPage', '')\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaCalling = (state = initialState.netaCalling, action) => {\n  switch (action.type) {\n    case 'NETA_CALLING_START': {\n      state.data = action.data\n      state.data.calling = true\n      const newState = { status: !state.status, data: state.data }\n      return newState\n    }\n\n    case 'NETA_CALLING_STOP': {\n      state.data = action.data\n      state.data.calling = false\n      const newState = { status: !state.status, data: state.data }\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaBlobs = (state = initialState.netaBlobs, action) => {\n  switch (action.type) {\n    case 'NETA_BLOBS_UPDATE': {\n      if (!state) { state = { status: false, data: {} } }\n      if (typeof (state.data) === 'undefined') { state.data = {} }\n      const created_at = Math.floor(Date.now() / 1000)\n      if (action && action.id && action.data) {\n        const key = action.id.replace(global.rxu.config.get_blobs + '/', '')\n        if (!state.data[key] || (state.data[key] && (created_at - state.data[key].created_at) > 43200)) {\n          state.data[key] = { link: action.data, created_at: created_at }\n        }\n      }\n\n      const newState = { status: state.status, data: state.data }\n      rxsetLocal('rxnetaBlobs', JSON.stringify(newState))\n      return newState\n    }\n\n    case 'NETA_BLOBS_UPDATE_ARR': {\n      if (!state) { state = { status: false, groups: {} } }\n      if (typeof (state.data) === 'undefined') { state.data = {} }\n\n      if (action && action.data && action.data.constructor === Array && action.data.length > 0) {\n        const created_at = Math.floor(Date.now() / 1000)\n        for (const obj of action.data) {\n          if (obj && obj.id && obj.link) {\n            const key = obj.id.replace(global.rxu.config.get_blobs + '/', '')\n            if (!state.data[key] || (state.data[key] && (created_at - state.data[key].created_at) > 43200)) {\n              state.data[key] = { link: obj.link, created_at: created_at }\n            }\n          }\n        }\n      }\n\n      const newState = { status: !state.status, data: state.data }\n      rxsetLocal('rxnetaBlobs', JSON.stringify(newState))\n\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaMedia = (state = initialState.netaMedia, action) => {\n  switch (action.type) {\n    case 'NETA_MEDIA_ADD': {\n      if (!state) { state = { status: false, data: {} } }\n      if (typeof (state.data) === 'undefined') { state.data = {} }\n\n      if (action && action.id && action.data) {\n        if (state.data && !state.data[action.id]) { state.data[action.id] = { images: {}, videos: {}, files: {} } }\n        if (action.data) {\n          state.data[action.id] = action.data\n        }\n      }\n\n      const newState = { status: !state.status, data: state.data }\n      rxsetLocal('netaMedia', JSON.stringify(newState))\n\n      return newState\n    }\n\n    case 'NETA_MEDIA_ONE_ADD': {\n      if (!state) { state = { status: false, data: {} } }\n      if (typeof (state.data) === 'undefined') { state.data = {} }\n      let type = ''\n      if (action && action.id && action.data) {\n        if (state.data && !state.data[action.id]) { state.data[action.id] = { images: {}, videos: {}, files: {} } }\n        type = (action.data.media_type === 2) ? 'images' : (action.data.media_type === 12) ? 'files' : (action.data.media_type === 4) ? 'videos' : ''\n        if (action.data && action.data.url && type) {\n          try {\n            state.data[action.id][type][action.data.url] = action.data\n          } catch (e) { }\n        }\n      }\n\n      const newState = { status: !state.status, data: state.data, change: action.data.url }\n      rxsetLocal('netaMedia', JSON.stringify(newState))\n\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaLink = (state = initialState.netaLink, action) => {\n  switch (action.type) {\n    case 'NETA_LINK_ADD': {\n      if (!state) { state = { status: false, data: {} } }\n      if (typeof (state.data) === 'undefined') { state.data = {} }\n\n      if (action && action.id && action.data) {\n        if (state.data && !state.data[action.id]) { state.data[action.id] = action.data }\n      }\n\n      const newState = { status: !state.status, data: state.data }\n      rxsetLocal('netaLink', JSON.stringify(newState))\n\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaRegisteredUsers = (state = initialState.netaRegisteredUsers, action) => {\n  switch (action.type) {\n    case 'NETA_ADD_REGISTERED_USER': {\n      let newState = { ...state }\n      if (action.data) {\n        const index = newState.data.findIndex(i => Number(i.Id) === Number(action.data.Id))\n        if (index === -1)\n          newState.data.push(action.data)\n        else newState.data[index] = { ...action.data }\n      }\n      return newState\n    }\n    case 'NETA_REGISTERED_USERS_UPDATE': {\n      const newState = { status: !state.status, data: action.data }\n      rxsetLocal('netaRegisteredUsers', JSON.stringify(newState))\n      return newState\n    }\n\n    default: { return state }\n  }\n}\n\nexport const netaCallHistory = (state = initialState.netaCallHistory, action) => {\n  switch (action.type) {\n    case 'NETA_CALL_HISTORY_UPDATE': {\n      const newState = { status: !state.status, data: action.data }\n      rxsetLocal('netaCallHistory', JSON.stringify(newState))\n      return newState\n    }\n\n    default: { return state }\n  }\n}\n\nexport const netaGroups = (state = initialState.netaGroups, action) => {\n  if (!(state && state.groups)) { state = { status: false, groups: {}, group_id_change: '' } }\n  state.init = state.init || (Object.keys(state.groups).length >= 1000)\n  switch (action.type) {\n    case 'NETA_GROUPS_UPDATE': {\n      try {\n        if (typeof (state.groups) === 'undefined') { state.groups = {} }\n\n        if (!state.groups[action.id.toString()] && !action.updateOnly) {\n          if (action && action.id && action.data) {\n            state.groups[action.id] = action.data\n          }\n        } else if (action.id && state.groups[action.id]) {\n          Object.keys(action.data).forEach(key => {\n            state.groups[action.id][key] = action.data[key]\n          })\n        }\n        if (state.groups[action.id] && state.groups[action.id].group_id)\n          state.groups[action.id].group_id = state.groups[action.id].group_id.toString()\n        if (state.groups[action.id].admin_uins) state.groups[action.id].admin_uins = state.groups[action.id].admin_uins.map(i => { return i.toString() })\n\n        if (state.groups[action.id].occupants_uins) state.groups[action.id].occupants_uins = state.groups[action.id].occupants_uins.map(i => { return i.toString() })\n\n        if (state.groups[action.id].owner_uin) state.groups[action.id].owner_uin = state.groups[action.id].owner_uin.toString()\n      } catch (error) { }\n\n      const newState = { status: !state.status, init: state.init, groups: state.groups, group_id_change: action.id + '' }\n      rxsetLocal('netaGroups', JSON.stringify(newState))\n      return newState\n    }\n    case 'NETA_GROUPS_UPDATE_UNPIN': {\n      try {\n        if (typeof (state.groups) === 'undefined') { state.groups = {} }\n        let pinned_uinsArr = state.groups[action.group_id].pinned_uins\n        for (let i = 0; i < pinned_uinsArr.length; i++) {\n          if (String(pinned_uinsArr[i]) === action.user_id) {\n            pinned_uinsArr.splice(i, 1);\n          }\n        }\n        state.groups[action.group_id].pinned_uins = pinned_uinsArr\n      } catch (error) { }\n      const newState = { status: !state.status, init: state.init, groups: state.groups, group_id_change: action.id + '' }\n      rxsetLocal('netaGroups', JSON.stringify(newState))\n      return newState\n    }\n    case 'NETA_GROUPS_UPDATE_ARR': {\n      if (action && action.data && action.data.constructor === Array && action.data.length > 0) {\n        for (const obj of [...action.data]) {\n          if (obj.group_id) {\n            if (obj.isDelete) {\n              delete state.groups[obj.group_id.toString()]\n            } else {\n              state.groups[obj.group_id] = obj\n            }\n          }\n        }\n      }\n      // if init=== true => stop\n      const newState = { status: !state.status, init: (state.init || action.init), groups: state.groups, group_id_change: '' }\n      rxsetLocal('netaGroups', JSON.stringify(newState))\n      return newState\n    }\n\n    case 'NETA_GROUPS_REMOVE': {\n      if (typeof (state.groups) === 'undefined') { state.groups = {} }\n\n      if (action && action.id && state.groups[action.id]) {\n        delete state.groups[action.id]\n      }\n      // console.log(\"NETA_GROUPS_REMOVE\")\n      const newState = { status: !state.status, init: state.init, groups: { ...state.groups }, group_id_change: action.id + '' }\n\n      rxsetLocal('netaGroups', JSON.stringify(newState))\n      return newState\n    }\n\n    default: { return state }\n  }\n}\n\nexport const rxgroup = (state = initialState.rxgroup, action) => {\n  switch (action.type) {\n    case 'CHOOSE_GROUP': {\n      if (action && action.group && action.group.group_id) {\n        if (!state) { state = { status: false, group: {}, groupid: '' } }\n        if (typeof (state.group) === 'undefined') { state.group = {} }\n        if (typeof (state.groupid) === 'undefined') { state.groupid = '' }\n        if (state.group && Object.keys(state.group).length > 0) { state.group = {} }\n\n        try {\n          if (action.group.admin_uins) {\n            action.group.admin_uins = action.group.admin_uins.map(i => { return i.toString() })\n          }\n          if (action.group.occupants_uins) {\n            let occupants_uins = action.group.occupants_uins.map(i => { return i.toString() })\n            action.group.occupants_uins = Array.from(new Set(occupants_uins))\n          }\n          if (action.group.owner_uin) {\n            action.group.owner_uin = action.group.owner_uin.toString()\n          }\n        } catch (error) {\n\n        }\n\n        state.group = action.group\n        state.groupid = action.group.group_id.toString()\n\n        const newState = {\n          status: !state.status,\n          group: state.group,\n          groupid: state.groupid\n        }\n\n        rxsetLocal('rxgroup', JSON.stringify(newState))\n        return newState\n      } else if (action && action.group && action.group.group_id === '') {\n        const newGroupOne = { status: !state.status, group: {}, groupid: '' }\n        rxsetLocal('rxgroup', JSON.stringify(newGroupOne))\n        return newGroupOne\n      } else {\n        return state\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const tabmore = (state = initialState.tabmore, action) => {\n  switch (action.type) {\n    case 'TABMORE_CHANGE': {\n      if (!state) { state = { status: false, data: false } }\n      state.data = !state.data\n      const newState = { status: !state.status, data: action.data }\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const loadmess = (state = initialState.loadmess, action) => {\n  switch (action.type) {\n    case 'LOADMESS_CHANGE': {\n      if (!state) { state = { status: false, data: false } }\n      const newState = { status: !state.status, data: !state.status }\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const rxSearch = (state = initialState.rxSearch, action) => {\n  switch (action.type) {\n    case 'SEARCH_CHANGE': {\n      const newState = { params: action.params }\n      rxsetLocal('rxsearch', JSON.stringify(newState))\n      return newState\n    }\n\n    case 'SEARCH_CLEAR': {\n      const newState = { params: { st_full: 'created_at:desc', st_col: 'created_at', st_type: -1, pg_page: 1, pg_size: 12, price: { min: 100, max: 10000 } } }\n      rxsetLocal('rxsearch', JSON.stringify(newState))\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nconst getMessState = (state, action, sortField = 'created_at') => {\n  if (!state) { state = { status: false, data: {} } }\n  if (typeof (state.data) === 'undefined') { state.data = {} }\n  state.data[action.id] = state.data[action.id] || { time: [], messages: {} }\n  if (!state.data[action.id].time) { state.data[action.id].time = [] }\n  if (!state.data[action.id].messages) { state.data[action.id].messages = {} }\n  if (action.mess && action.mess.constructor === Array && action.mess.length > 0) {\n    for (const omess of action.mess) {\n      if (omess && omess[sortField]) {\n        const arrTime = state.data[action.id].time.sort((a, b) => { return a - b })\n        const objMess = JSON.parse(JSON.stringify(state.data[action.id].messages))\n        objMess[omess[sortField].toString()] = omess\n\n        if (arrTime.indexOf(Number(omess[sortField])) === -1) {\n          arrTime.push(Number(omess[sortField]))\n          if (arrTime.length > 30) {\n            arrTime.shift()\n            delete state.data[action.id].messages[omess[sortField].toString()]\n          }\n        }\n\n        state.data[action.id].time = arrTime\n        const messages_tmp = {}\n\n        for (const created_at of arrTime) {\n          messages_tmp[created_at.toString()] = objMess[created_at.toString()]\n        }\n        state.data[action.id].messages = messages_tmp\n      }\n    }\n  }\n\n  if (action && action.mess && action.mess.constructor === Object && action.mess.message_id) {\n    let groupid = global.rxu.get(action, 'mess.group_id', '')\n    let messtime = global.rxu.get(action, 'mess.created_at', '')\n    if (state.data && state.data[groupid] && state.data[groupid]['time'] && state.data[groupid]['time'].constructor === Array && state.data[groupid]['time'].indexOf(Number(messtime)) === -1) {\n      state.data[groupid]['messages'][Number(messtime)] = action.mess\n      state.data[groupid]['time'].push(Number(messtime))\n\n      try {\n        let arrTimeMess = state.data[groupid]['time'].sort((a, b) => { return a - b })\n        if (arrTimeMess.length > 30) {\n          for (let i = 0; i < (arrTimeMess.length - 29); i++) {\n            delete state.data[groupid]['messages'][Number(arrTimeMess[i])]\n            state.data[groupid]['time'].splice(i, 1)\n          }\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n\n  return state\n}\n\nexport const netaMess = (state = initialStateLate.netaMess, action) => {\n  switch (action.type) {\n    case 'NETA_MESS_ADD': {\n      const { status, data } = getMessState(state, action)\n      const newState = { status: !status, data: data }\n      rxsetLocal('netaMess', JSON.stringify(newState))\n      return newState\n    }\n\n    // case 'NETA_MESS_REMOVE': {\n    //   const { status, data } = getMessState(state, action)\n    //   const newState = { status: !status, data: data }\n    //   rxsetLocal('netaMess', JSON.stringify(newState))\n    //   return newState\n    // }\n\n    case 'NETA_MESS_REMOVE': {\n      if (typeof (state.data) === 'undefined') { state.data = {} }\n\n      if (action && action.id && state.data[action.id]) {\n        delete state.data[action.id]\n      }\n      const newState = { status: !state.status, data: { ...state.data }}\n\n      rxsetLocal('netaMess', JSON.stringify(newState))\n      return newState\n    }\n\n    case 'NETA_MESS_GET': {\n      let getMess = action.callback\n      try {\n        if (state.data && state.data[action.id] && state.data[action.id]) {\n          getMess(state.data[action.id]['messages'])\n        } else {\n          getMess(null)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n\n      return {}\n    }\n\n    case 'NETA_MESS_CLEAR': {\n      const newState = { status: !state.status, data: {} }\n      rxsetLocal('netaMess', JSON.stringify(newState))\n\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaPinMess = (state = initialStateLate.netaPinMess, action) => {\n  switch (action.type) {\n    case 'NETA_MESS_PIN': {\n      const { status, data } = getMessState({ status: false, data: {} }, action, \"pinned_at\")\n      const newState = { status: !status, data: data }\n      rxsetLocal('netaPinMess', JSON.stringify(newState))\n\n      return newState\n    }\n\n    case 'NETA_MESS_PIN_CLEAR': {\n      const newState = { status: !state.status, data: {} }\n      rxsetLocal('netaPinMess', JSON.stringify(newState))\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const viewed = (state = initialState.viewed, action) => {\n  switch (action.type) {\n    case 'VIEWED_ADD': {\n      if (!state) { state = { status: false, products: {} } }\n      if (typeof (state.products) === 'undefined') { state.products = {} }\n      state.products[action.id] = state.products[action.id] || { id: action.id }\n\n      if (typeof (action.product) !== 'undefined' && typeof (action.product.data) !== 'undefined' && action.product.data.img_landscape) {\n        state.products[action.id].data = action.product.data\n      }\n\n      const newState = { status: !state.status, products: state.products }\n      if (Object.keys(newState.products).length > 10) {\n        delete (newState.products[Object.keys(newState.products)[0]])\n      }\n\n      rxsetLocal('rxviewed', JSON.stringify(newState))\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const groupMess = (state = initialState.groupMess, action) => {\n  switch (action.type) {\n    case 'ADD_MESS_GROUP': {\n      if (!state) { state = { status: false, data: {} } }\n      if (action && action.mess && action.mess.message_id && action.mess.group_id) {\n        if (!state.data[action.mess.group_id]) {\n          state.data[action.mess.group_id] = action.mess\n          state.status = !state.status\n        } else if (state.data[action.mess.group_id]['message_id'] !== action.mess.message_id) {\n          state.data[action.mess.group_id] = action.mess\n          state.status = !state.status\n        }\n      }\n      const newState = { status: state.status, data: state.data }\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const reset = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_OUT': {\n      const newState = initialState\n      return newState\n    }\n\n    case 'RESET_STORE': {\n      const newState = initialStateLate\n      return newState\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaGroupsLastMess = (state = initialStateLate.netaGroupsLastMess, action) => {\n  switch (action.type) {\n    case 'NETA_GROUPS_UPDATE_LAST_MESS': {\n      if (!state) { state = { groups: {} } }\n      if (typeof (state.groups) === 'undefined') { state.groups = {} }\n\n      if (action && action.id && action.data) {\n        state.groups[action.id] = { last_message_id: action.data_id, last_message: action.data }\n      }\n\n      const newState = { groups: state.groups }\n      rxsetLocal('netaGroupsLastMess', JSON.stringify(newState))\n      return newState\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const recentSearchGroups = (state = initialState.recentSearchGroups, action) => {\n  switch (action.type) {\n    case 'UPDATE_RECENT_SEARCH_GROUPS': {\n      if (!state) {\n        state = { group: {} }\n      }\n      if (typeof state.groups === 'undefined') {\n        state.groups = {}\n      }\n      if (action && action.data && action.id) {\n        state.groups[action.id] = action.data\n        state.groups[action.id].timeSearch = action.time\n        const newState = { groups: state.groups }\n        rxsetLocal('netaRecentSearchGroups', JSON.stringify(newState))\n        return newState\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const recentContactGroups = (state = initialState.recentContactGroups, action) => {\n  switch (action.type) {\n    case 'UPDATE_RECENT_CONTACT_GROUPS': {\n      if (!state) {\n        state = { group: {} }\n      }\n      if (typeof state.groups === 'undefined') {\n        state.groups = {}\n      }\n      if (action && action.id) {\n        if (!state.groups[action.id]) { state.groups[action.id] = {} }\n        state.groups[action.id].timeContact = action.time\n        const newState = { groups: state.groups }\n        rxsetLocal('netaRecentContact', JSON.stringify(newState))\n        return newState\n      } else {\n        return state\n      }\n    }\n    case 'CREATE_RECENT_CONTACT_GROUPS': {\n      if (!state) {\n        state = { group: {} }\n      }\n      if (typeof state.groups === 'undefined') {\n        state.groups = {}\n      }\n      if (action && action.data && Object.keys(state.groups).length === 0) {\n        state.groups = action.data\n        const newState = { groups: state.groups }\n        rxsetLocal('netaRecentContact', JSON.stringify(newState))\n        return newState\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const userClickInfo = (state = initialState.userClickInfo, action) => {\n  switch (action.type) {\n    case 'USER_CLICK_UPDATE': {\n      if (action && action.user) {\n        let group = action.user\n        console.log(action.user,'action dien')\n        const newState ={group:group}\n        console.log(newState,'xin chao')\n        // rxsetLocal('netaLang', JSON.stringify(lang))\n        return newState\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const langValue = (state = initialStateLate.langValue, action) => {\n  switch (action.type) {\n    case 'CHANGE_LANG': {\n      if (action && action.data) {\n        let lang = action.data\n        rxsetLocal('netaLang', JSON.stringify(lang))\n        return lang\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const pageValue = (state = initialStateLate.pageValue, action) => {\n  switch (action.type) {\n    case 'CHANGE_PAGE': {\n      if (action && action.data) {\n        let page = action.data\n        rxsetLocal('netaPage', JSON.stringify(page))\n        return page\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const themeValue = (state = initialStateLate.themeValue, action) => {\n  switch (action.type) {\n    case 'CHANGE_THEME': {\n      if (action && action.data) {\n        let page = action.data\n        rxsetLocal('netaThemeColor', JSON.stringify(page))\n        return page\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const themeBackgroudValue = (state = initialStateLate.themeBackgroudValue, action) => {\n  switch (action.type) {\n    case 'CHANGE_THEMEBACKGROUD': {\n      if (action && action.data) {\n        let page = action.data\n        rxsetLocal('netaThemeBackGround', JSON.stringify(page))\n        return page\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const notificationStatusValue = (state = initialStateLate.notificationStatusValue, action) => {\n  switch (action.type) {\n    case 'CHANGE_NOTIFICATION_STATUS': {\n      if (action && action.data) {\n        let notificationStatus = action.data\n        rxsetLocal('netaNotificationStatus', notificationStatus)\n        return notificationStatus\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const usersStatus = (state = initialState.usersStatus, action) => {\n  switch (action.type) {\n    case 'USER_STATUS_UPDATE': {\n      if (!state) state = initialState.usersStatus\n      let netaUsersStatus = { ...state }\n      if (action.data && action.data.uin) {\n        netaUsersStatus[Number(action.data.uin)] = action.data.user_status\n        delete netaUsersStatus[Number(action.data.uin)].uin\n        // console.log(\"USER_STATUS_UPDATE\", action.data)\n        rxsetLocal('netaUsersStatus', JSON.stringify(netaUsersStatus))\n      }\n      return netaUsersStatus\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const netaAuthSetting = (state = initialState.netaAuthSetting, action) => {\n  switch (action.type) {\n    case 'NETA_AUTH_SETTING_UPDATE': {\n      if (action && action.data) {\n        let netaAuthSetting = action.data\n        rxsetLocal('netaAuthSetting', JSON.stringify(netaAuthSetting))\n        return netaAuthSetting\n      } else {\n        return state\n      }\n    }\n    case 'NETA_AUTH_SETTING_SOUND_UPDATE': {\n      if (action && action.data) {\n        let netaAuthSetting = action.data\n        rxsetLocal('netaAuthSetting', JSON.stringify(netaAuthSetting))\n        return netaAuthSetting\n      } else {\n        return state\n      }\n    }    \n    default: {\n      return state\n    }\n  }\n}\n\nexport const activeComponent = (state = initialStateLate.activeComponent, action) => {\n  switch (action.type) {\n    case 'SET_COMP': {\n      if (action && action.comp) {\n        rxsetLocal('activeComponent', action.comp)\n        return action.comp\n      } else {\n        return state\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const reducers = combineReducers({\n  geod, auth, rxgroup, rxSearch, viewed, user, netaauth, netaRegisteredUsers, netaCallHistory, netaGroups, netaBlobs, \n  netaMess, netaCalling, tabmore, loadmess, netaMedia, langValue, recentSearchGroups, recentContactGroups, pageValue, themeValue, \n  themeBackgroudValue, notificationStatusValue, netaAuthSetting, netaContact, netaLink, netaGroupsLastMess, netaPinMess, activeComponent, \n  netaCall, usersStatus, netaPopup, userClickInfo, groupMess\n})\n\nexport const rootReducer = (state, action) => {\n  if (action.type === 'RESET_STORE') {\n    return reducers(initialStateLate, action)\n  } else if (action.type === 'NETALOGOUT') {\n    return reducers(initialState, action)\n  } else {\n    return reducers(state, action)\n  }\n}\n\nexport function configureStore(initialState = {}) {\n  const store = createStore(rootReducer, initialState)\n  store.subscribe(() => { })\n\n  if (typeof window !== 'undefined') {\n    window.store = store\n  }\n\n  initialState = initialStateLate\n  store.dispatch({ type: 'RESET_STORE' })\n  return store\n}\n\nif (typeof window !== 'undefined') {\n  window.storeReset = () => {\n    initialState = initialStateLate\n    window.store.dispatch({ type: 'RESET_STORE' })\n  }\n}\n\nexport const store = configureStore()\n","/* global localStorage */\nimport fetch from 'isomorphic-fetch'\n\nexport function apiget (url, params, callbacks) {\n  if (typeof window === 'undefined') return {}\n\n  url = url || ''\n  params = (typeof (params) === 'object') ? params : {}\n\n  // Make params\n  let tempBody = ''\n  for (let property in params) {\n    if (params.hasOwnProperty(property)) {\n      tempBody += `${property}=${params[property]}&`\n    }\n  }\n\n  // Add authorization\n  let match = document.cookie.match(new RegExp('authorize=([^;]+)'))\n  if (match) {\n    tempBody += `authorization=${match[1]}&`\n  }\n\n  tempBody += `timeseed=${Date.now()}`\n  fetch(url + '?' + tempBody, { method: 'GET', headers: { 'Accept': 'application/json' }, body: null })\n    .then(res => res.json())\n    .then((json) => {\n      if (typeof (callbacks) !== 'undefined') {\n        let callbackIndex = json.success.toString()\n        if (typeof (callbacks[callbackIndex]) !== 'undefined') {\n          callbacks[callbackIndex](json)\n        } else if (typeof (callbacks['default']) !== 'undefined') {\n          callbacks['default'](json)\n        }\n      }\n      if (json.success === -3) {\n        window.location.href = '/admin/login'\n      }\n    }).catch(error => console.log(error))\n}\n\nexport function apicall (method, url, params, headers, callbacks) {\n  if (typeof window === 'undefined') return {}\n\n  url = url || ''\n  params = (typeof (params) === 'object') ? params : {}\n\n  // Make params\n  let tempBody = ''\n  for (let property in params) {\n    if (params.hasOwnProperty(property)) {\n      tempBody += `${property}=${params[property]}&`\n    }\n  }\n\n  // Add authorization\n  let match = document.cookie.match(new RegExp('authorize=([^;]+)'))\n  if (match) {\n    tempBody += `authorization=${match[1]}&`\n  }\n\n  headers = headers === {} ? { 'Accept': 'application/json' } : headers\n  fetch(url + '?' + tempBody, { method: method, headers: headers, body: null })\n    .then(res => res.json())\n    .then((json) => callbacks(json)).catch(error => console.log(error))\n}\n\nexport function apipost (url, params, callbacks) {\n  if (typeof window === 'undefined') return {}\n\n  url = url || ''\n  params = (typeof (params) === 'object') ? params : {}\n\n  // Add authorization\n  let match = document.cookie.match(new RegExp('authorize=([^;]+)'))\n  if (match) {\n    params['authorization'] = match[1]\n  }\n\n  params['timeseed'] = Date.now()\n  fetch(url, { method: 'POST', body: JSON.stringify(params), headers: { 'Accept': 'application/json', 'Content-Type': 'application/json; charset=utf-8' } })\n    .then((res) => { return res.json() })\n    .then((json) => {\n      if (typeof (callbacks) !== 'undefined') {\n        let callbackIndex = json.success.toString()\n        if (typeof (callbacks[callbackIndex]) !== 'undefined') {\n          callbacks[callbackIndex](json)\n        } else if (typeof (callbacks['default']) !== 'undefined') {\n          callbacks['default'](json)\n        }\n      }\n      if (json.success === -3) {\n        window.location.href = '/admin/login'\n      }\n    }).catch(error => console.log(error))\n}\n\nexport function rxput (url, params, callback) {\n\n}\n\nexport function rxdelete (url, params, callback) {\n\n}\n\nexport function rxoption (url, params, callback) {\n\n}\n\nexport function rxsetCookie (cname, cvalue, minutes) {\n  if (typeof (document) !== 'undefined') {\n    let d = new Date()\n    d.setTime(d.getTime() + (minutes * 60 * 1000))\n    let expires = 'expires=' + d.toUTCString()\n    document.cookie = cname + '=' + cvalue + '; ' + expires\n  }\n}\n\nexport function rxgetCookie (cname) {\n  if (typeof (document) !== 'undefined') {\n    var value = '; ' + document.cookie\n    var parts = value.split('; ' + cname + '=')\n    if (parts.length === 2) return parts.pop().split(';').shift()\n  }\n}\n\nexport function rxsetLocal (cname, cvalue) {\n  if (typeof window !== 'undefined') {\n    localStorage.setItem(cname, cvalue)\n  }\n}\n\nexport function rxgetLocal (cname, cdefault) {\n  if (typeof window !== 'undefined') {\n    return localStorage.getItem(cname) || cdefault\n  } else {\n    return cdefault\n  }\n}\n\nexport function rxJson (json, cdefault) {\n  let tempReturn = {}\n  try {\n    tempReturn = JSON.parse(json)\n  } catch (e) {\n    tempReturn = cdefault\n  }\n\n  return tempReturn\n}\n\nexport function rxaget(variable, keys, defaultVal) {\n  defaultVal = defaultVal || \"\";\n  let resultVal = defaultVal;\n\n  try {\n    // Keys is array of index\n    if (Array.isArray(keys)) {\n      let tempResult = variable;\n      for (let i in keys) {\n        tempResult = tempResult[keys[i]];\n      }\n      resultVal = tempResult;\n\n      // Keys is a string\n    } else {\n      keys = keys.split(\".\");\n      let tempResult = variable;\n      for (let i in keys) {\n        tempResult = tempResult[keys[i]];\n      }\n      resultVal = tempResult;\n    }\n\n    // Case exception, access undefined variable\n  } catch (e) {\n    resultVal = defaultVal;\n  }\n\n  // Case undefined after all\n  if (resultVal === undefined) {\n    resultVal = defaultVal;\n  }\n\n  // HAPPYENDING\n  return resultVal;\n}\n","import React from 'react'\nimport { Switch } from 'react-router-dom'\nimport { renderRoutes } from 'react-router-config'\n\nconst Product = ({ route }) => (\n  <Switch>\n    {renderRoutes(route.routes)}\n  </Switch>\n)\n\nexport default Product\n","/*eslint-disable no-undef*/\n/*global translate*/\nimport { connect } from 'react-redux'\nimport React, { Component, Fragment } from 'react'\n\nconst { rxaget, timeConverter, rxChangeSlug, stringToColour, idToColor, formatBytes, secondToTime, rxconfig } = global.rootRequire('classes/ulti')\nconst { checkAvatarSender, checkIsOwner, checkName, checkNameUser } = global.rootRequire('classes/chat')\n\nlet zget = global.rxu.get\n\nclass MessageItem extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n\n    }\n    this.currentMsg = {}\n    this.lastSeenMessId = ''\n    this.urllinkId = ''\n  }\n\n  shouldComponentUpdate(nextProps, nextState) { \n    if (\n        zget(nextProps.currentMsg, 'message_id', '') === zget(this.currentMsg, 'message_id', '') ||\n        zget(nextProps.currentMsg, 'status', '') === zget(this.currentMsg, 'status', '') ||\n        zget(nextProps.currentMsg, 'type', '') === zget(this.currentMsg, 'type', '')\n\n    ) {      \n      let group_id = this.props.group_id\n      if( group_id &&\n        nextProps.lastSeenMessObj && \n        this.props.lastSeenMessObj &&\n        this.props.lastSeenMessObj[group_id] &&\n        nextProps.lastSeenMessObj[group_id] &&\n        (Number(zget(this.currentMsg, 'message_id', ''))  > Number(this.props.lastSeenMessObj[group_id].lastSeenMessId)) && \n        (Number(zget(this.currentMsg, 'message_id', ''))  <= Number(nextProps.lastSeenMessObj[group_id].lastSeenMessId))   \n      ) {\n        return true\n      } else if (nextProps.netaLink && nextProps.netaLink.uid && this.urllinkId !== nextProps.netaLink.uid ) {\n        this.urllinkId = nextProps.netaLink.uid\n        return true\n      } else {\n        return false   \n      }\n    } else {\n      return true\n    } \n  }\n\n  render() {\n    console.log('Render Message Item')\n    \n    const occupants_uins = rxaget(this.props, 'group.occupants_uins', [])    \n    const currentMsg = JSON.parse(JSON.stringify(this.props.currentMsg)) || {} \n    this.currentMsg = currentMsg\n    const lastSeenMessObj = this.props.lastSeenMessObj\n    const group_id = this.props.group_id\n    let lastSeenMessId = ''\n    \n    if(lastSeenMessObj && group_id && lastSeenMessObj[group_id]){\n      lastSeenMessId = lastSeenMessObj[group_id].lastSeenMessId\n    }  \n    \n    return (\n      <div className={checkIsOwner(currentMsg, this.props.userid) ? 'zmessage_content_right' : 'zmessage_content'}>\n        <div className='zmessage_box'>\n          <div className={(currentMsg.type === 0) ? (this.props.userid.toString() === currentMsg.sender_uin.toString()) \n            ? 'zmessage_text my_message' : 'zmessage_text another_message' : 'zmessage_text static_message'}>\n            <div className='another_message_box'>\n              { ((this.props.index > 0 && currentMsg.sender_uin !== this.props.arr[this.props.index-1].sender_uin) || this.props.index === this.props.firstMessageIndex || this.props.isShowUserName5Minute) &&\n                ((this.props.occupants_uins && this.props.occupants_uins.length > 2) \n                && (this.props.userid.toString() !== currentMsg.sender_uin.toString())) \n                ?\n                  <div className={currentMsg.type === 0 ? 'zbg_mess' : ''}>\n                    <div id='stsender_name' className={(currentMsg.type !== 0) ? (currentMsg.type === 9 ? ' zsender_name_type9 ' : 'zsender_name_basic mess_type0') : 'zsender_name_basic'} style={{ color: `${idToColor(currentMsg.sender_uin.toString())}` }} onClick={e => this.props.onClickNameUser(currentMsg.sender_uin)} >\n                      {checkNameUser(rxaget(this.props.users, currentMsg.sender_uin, {})) || currentMsg.sender_name.toString()}\n                    </div>\n                    <div dangerouslySetInnerHTML={{ __html: this.props.strMessage }} />\n                  </div>\n                :\n                  <div dangerouslySetInnerHTML={{ __html: this.props.strMessage }} />\n              }\n\n              {([8,9].indexOf(currentMsg.type) === -1 ) && <div className='zmessage_time'> {timeConverter(currentMsg.created_at, 'minute')} </div>}\n            </div>\n          </div>\n          {\n            (\n              checkIsOwner(currentMsg, this.props.userid) &&\n              (\n                ( this.props.lastSeenMessObj && this.props.lastSeenMessObj[this.props.group_id] && Number(currentMsg.message_id) <= Number(lastSeenMessId)) \n                || occupants_uins.length < 2\n              )\n            )         \n            && <div className='zmessage_seen'>\n              <img className='zmessage_seen_icon filter_img_class' alt='readed-icon' src={'./images/default/icons/readed-icon.svg'}/> \n              </div>\n          }\n          {\n            checkIsOwner(currentMsg, this.props.userid) && this.props.lastSeenMessObj && this.props.lastSeenMessObj[this.props.group_id]                      \n            && Number(currentMsg.message_id) > Number(lastSeenMessId)    \n            && occupants_uins.length >= 2        \n            && <div className='zmessage_seen'>\n              <img className='zmessage_seen_icon filter_img_class' alt='readed-icon' src={'./images/default/static/icon-checked.svg'}/> \n            </div>\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MessageItem","import React, { useEffect, useState } from 'react'\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n/*global translate*/\nconst { timeConverter, rxaget, rxChangeSlug, stringToColour,idToColor } = global.rootRequire('classes/ulti')\nconst { checkAvatarSender, checkIsOwner, checkName, checkNameUser } = global.rootRequire('classes/chat')\nconst { parseMessageDesc } = global.rootRequire('classes/chat')\n\nglobal.isclient && require('./index.css')\nexport default (props) => {\n  const [modalPin, setModalPin] = useState(false)\n  const [pinedMess, setPinedMess] = useState([])\n  const [isSort, setIsSort] = useState(false)\n  let closeModalpin = false\n  useEffect(() => {\n    if (!Object.keys(props.pinedMess).length)\n      setModalPin(props.modalPin)\n    let temp = []\n    const obj = props.pinedMess\n    var pinedMessPos = JSON.parse(localStorage.getItem(\"netaPinedMessPos\") || \"{}\")\n    Object.keys(obj).map((odate) => {\n      let firstMessageIndex = 0\n      obj && obj[odate] && obj[odate]['data']\n        && obj[odate]['data'].map((omess, i) => {\n          if ([5, 6, 7].indexOf(omess.type) !== -1) firstMessageIndex = 1\n          omess.firstMessageIndex = firstMessageIndex\n          omess.position = pinedMessPos[props.group_id] && pinedMessPos[props.group_id][omess.message_id] >= 0 ?\n            pinedMessPos[props.group_id][omess.message_id] : i\n          temp.push(omess)\n        })\n    })\n    temp = temp.sort((a, b) => Number(a.position) < Number(b.position) ? -1 : 1)\n    setPinedMess(temp)\n  }, [JSON.stringify(props.pinedMess)])\n  useEffect(()=>{\n    setIsSort(false)\n  },[props.group_id])\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    const temp = arrayMove(pinedMess, oldIndex, newIndex)\n    setPinedMess(temp);\n  };\n  useEffect(() => {\n    if (!isSort && modalPin) {\n      var pinedMessPos = JSON.parse(localStorage.getItem(\"netaPinedMessPos\") || \"{}\")\n      pinedMessPos[props.group_id] = {}\n      pinedMess.map((item, i) => {\n        pinedMessPos[props.group_id][item.message_id] = i\n      })\n      localStorage.setItem(\"netaPinedMessPos\", JSON.stringify(pinedMessPos))\n    }\n  }, [isSort])\n  if(props.checkgallery === true){\n    closeModalpin = true\n  }else{\n    closeModalpin = false\n  }\n  const SortableItem = SortableElement(({ omess, i, arr }) => {\n    return (<div key={omess.message_id} style={{ cursor: isSort ? \"pointer\" : \"inherit\" }}\n      className={(props.parseMessage(omess).length === 0 ? 'parseMessage_hiden' :\n        ((props.pin_mess_id !== omess.message_id.toString()) ?\n          'zmessage_row' : 'zmessage_row zchat_row-selected'))}>\n      {([5, 6, 7].indexOf(omess.type) === -1)\n        ? <div>\n          {((i > 0 && omess.sender_uin !== arr[i - 1].sender_uin) || i === omess.firstMessageIndex)\n            && !checkIsOwner(omess, props.userid) &&\n            <div className='zmessage_colava' >\n              <div className='zmessage_avasender' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkName(omess.sender_uin, props.users, 'avatar'))}, #FFFFFF)` }}>\n              {checkAvatarSender(omess, props.users)\n                && <img src={global.rxu.config.cdn_endpoint + props.users[omess.sender_uin.toString()].profile_url} alt=''\n                  data-id={'sender' + omess.sender_uin} className={'ava-sender images-static'}\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = global.rxu.config.get_static + props.users[omess.sender_uin.toString()].profile_url\n                  }} />}\n              <span className='avatar-sender'>{rxChangeSlug(checkNameUser(props.convertOmessUser(omess))).slice(0, 2).toUpperCase()}</span>\n              </div>\n            </div>\n          }\n          <div className={checkIsOwner(omess, props.userid) ? 'zmessage_content_right' : 'zmessage_content'}>\n            <div className='zmessage_box'>\n              <div className={(omess.type === 0) ? (props.userid.toString() === omess.sender_uin.toString())\n                ? 'zmessage_text my_message' : 'zmessage_text another_message' : 'zmessage_text'}>\n                <div className='another_message_box'>\n                  {\n                    ((i > 0 && omess.sender_uin !== arr[i - 1].sender_uin) || i === omess.firstMessageIndex) &&\n                      ((props.group.occupants_uins.length > 2)\n                        && (props.userid.toString() !== omess.sender_uin.toString()))\n                      ?\n                      <div className={omess.type === 0 ? 'zbg_mess' : ''}>\n                        <div id='stsender_name' className={(omess.type !== 0)\n                          ?\n                          (omess.type === 9 ? ' zsender_name_type9 ' : 'zsender_name_basic mess_type0')\n                          :\n                          'zsender_name_basic'} style={{ color: `${idToColor(omess.sender_uin.toString())}` }} >\n                          {checkNameUser(rxaget(props.users, omess.sender_uin, {})) || omess.sender_name.toString()}\n                        </div>\n                        <div dangerouslySetInnerHTML={{ __html: props.parseMessage(omess, 'pin_model') }} />\n                      </div>\n                      :\n                      <div dangerouslySetInnerHTML={{ __html: props.parseMessage(omess, 'pin_model') }} />\n                  }\n                </div>\n              </div>\n              <div className='zmessage_time' style={{\n                right: checkIsOwner(omess, props.userid) ? 0 : \"unset\",\n                bottom: -18, width: \"max-content\"\n              }}>\n                {timeConverter(omess.created_at, 'dayminute')} </div>\n            </div>\n          </div>\n        </div>\n        : <div className='zchat_row_child'> {props.parseMessage(omess)} </div>}\n      {isSort && <div>\n        <img className='icon24 zuitem-right' src={'./images/default/icons/sort.svg'} alt='' />\n        </div>}\n    </div>)\n  });\n  const SortableList = SortableContainer(({ items }) => {\n    return (\n      <div className='zchat_list' id='zchat_list' >\n        {pinedMess.map((omess, i, arr) => (\n          <SortableItem key={i} index={i} i={i} omess={omess} arr={arr} disabled={!isSort} />\n        ))}\n      </div>\n    );\n  });\n  var lastPin = null\n  if (pinedMess.length) {\n    lastPin = JSON.parse(JSON.stringify(pinedMess[pinedMess.length - 1]))\n    lastPin.type === 8 && (lastPin.type = 0)\n  }\n  return (\n    <div className=\"rodal-pin\">\n      {lastPin ? <div>\n        <div className='ztbar' style={{ paddingRight: props.tabmoreNextprop === true ? 300 : 0 }}\n          onClick={() => setModalPin(true)}>\n          <div className='ztbar_avatar_header'>\n            <div className=\"icon-pin\"></div>\n          </div>\n          <div className='ztbar_left' >           \n            <div className='ztbar_status'>\n              <div className='ztbar_name modal'>{translate(\"Pinned Message\")+\": \"}</div>\n              <div className=\"ztab-more-user_status\">\n                {/*<div className=\"lastpin\" dangerouslySetInnerHTML={{ __html: props.parseMessage(lastPin, 'pin_model') }}></div>\n                  parseMessageDesc(lastPin, props.users, props.userid)*/\n              }\n              <div className=\"lastpin\" dangerouslySetInnerHTML={{ __html: parseMessageDesc(lastPin, props.users, props.userid)}}></div>\n              </div>\n            </div>\n          </div>\n          <div className='ztbar_right ztbar_btn ztbar_btnmore' style={{ right: props.tabmoreNextprop === true ? 300 : 0 }}>\n            <img className='icon24 zuitem-right' src={'./images/default/icons/right-arrow.svg'} alt='' />\n          </div>\n        </div>\n      </div> : null}\n      {modalPin&&\n        <div className={closeModalpin === true ? 'avatarClick_rectangle_hiden':'avatarClick_rectangle'}>\n          <div className='avatarClick_rectangle_1'></div>\n          <div className='avatarClick_rectangle_2_1'>\n            <div className='avatarClick_title_place modal'>\n              <div className='avatarClick_title modal'>{translate(\"Pinned Message\")}</div>\n              <div className='avatarClick_closeIcon' onClick={() => setModalPin(false)}>\n                <img className='icon-basic-up filter_img_class' src={'./images/default/icons/icon-basic-up.svg'} alt='' />\n              </div>\n            </div>\n            <div className=\"ztbar_name pmodal\" onClick={() => setIsSort(!isSort)}>{translate(isSort ? \"Done\" : \"Edit\")}</div>\n            <div className=\"rodal-body\">\n              <div className='zchattab_body' style={{ paddingRight: 'unset' }}>\n                <div className='zchat_body mtheme'>\n                  <div className='zchat_list' id='zchat_list' >\n                    <SortableList onSortEnd={onSortEnd} helperClass='sortableHelper' />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"rodal-footer\">\n              <div className=\"zmessage_text my_message cbtn\" onClick={() => props.unPin(true)}>\n                <div>\n                  <div className=\"zchat-textmess\">{translate(\"Unpin All\")}</div>\n                </div>\n              </div>\n            </div>\n          </div >\n        </div>}\n    </div >\n  )\n}","import { connect } from 'react-redux'\n\nimport * as Jsx from './home.jsx'\nconst themeColorData = global.rootRequire('classes/themeColorData.json')\nconst { changeThemeColor } = global.rootRequire('classes/ulti')\nconst { rxgetLocal } = global.rootRequire('classes/request')\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\nconst { rxnavToggle, rxnavClose,setComp } = global.rootRequire('redux')\n\nclass Component_ extends RxComponent {\n  constructor (props, context) { \n    super(props, context, Jsx)\n    this._mounted = false\n    this.state = { isAuthenticated: false, activeNavs: {} }\n  }\n\n  componentDidMount () {\n    const color = global.rxu.json(rxgetLocal('netaThemeColor'), '')\n    if(color==='blueColor'){\n       changeThemeColor (themeColorData.blueColor)\n    } else {\n      changeThemeColor (themeColorData.orangeColor) \n    } \n    this._mounted = true\n    this.checkAuth()\n  }\n\n  componentWillUnmount () {\n    this._mounted = false\n  }\n\n  setStateRx (object, callback) {\n    if (this._mounted) { this.setState(object, callback) }\n  }\n\n  checkAuth () {\n    if (!global.rxu.get(this.props, 'netaauth.user.id')) {\n      // this.props.history.push('/login')\n      this.props.setComp('login')\n    }\n  }\n\n  render () {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  auth: state.auth,\n  favorite: state.favorite,\n  netaauth: state.netaauth\n})\n\nconst mapDispatchToProps = {\n  rxnavClose,\n  rxnavToggle,\n  setComp\n}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","let env = process.env.NODE_ENV || 'development'; console.log('RUNNING ' + env)\nlet loadedModule = require('./config.' + env + '.js')\nmodule.exports = loadedModule\n","import Parser from 'html-react-parser'\nimport React from 'react'\n\nglobal.isclient && require('./home.css')\n\nlet adminCSS = '<style>.main-container{ width: 100% !important; padding: 0px !important; } .homenav, .footer{ display: none !important; }</style>'\n\nexport const renderComponent = (vm) => <div>\n  <div>\n    {Parser(adminCSS)}\n    <div></div>\n  </div>\n</div>\n","/* global CustomEvent */\n// import * as ramda from 'ramda', // global.rxi = ramda\nimport jQuery from 'jquery'\n\nlet rxu = require('./classes/ulti').default\nlet translate = require('./classes/lang').default\nconst rxio = require('./classes/socket').default\n\n\nif (!global.defined) {\n  let secret = rxu.secret\n  let theme = secret.theme || 'default'\n\n  global.defined = true\n  global.rxu = rxu\n  global.currentTheme = theme\n  global.$ = jQuery\n  global.t = translate\n  global.translate = translate\n  \n  global.isclient = typeof window !== 'undefined'\n  global.rootbase = __dirname\n  global.nodebase = global.rootbase + '../node_modules/'\n  global.rootRequire = function (name) {\n    // eslint-disable-next-line\n    return require(__dirname + '/' + name)\n  }\n\n  global.rootRequiretheme = function (name) {\n    // eslint-disable-next-line\n    return require(__dirname + '/themes/' + theme + '/' + name)\n  }\n\n  global.rootContext = function (context) {\n    if (typeof window !== 'undefined') {\n      context = context || window.__STATIC_CONTEXT__\n    }\n    return context\n  }\n\n  global.JSONToCSVConvertor = function (JSONData, ReportTitle, ShowLabel = true) {\n    let arrData = typeof JSONData !== 'object' ? JSON.parse(JSONData) : JSONData\n    let CSV = ''; CSV += ReportTitle + '\\r\\n\\n'\n    if (ShowLabel) { let row = ''; for (let index in arrData[0]) { row += index + ',' }; row = row.slice(0, -1); CSV += row + '\\r\\n' }\n    for (let i = 0; i < arrData.length; i++) { let row = ''; for (let index in arrData[i]) { row += '\"' + arrData[i][index] + '\",' }; row.slice(0, row.length - 1); CSV += row + '\\r\\n' } if (CSV === '') { return }\n    let fileName = 'Report_'; fileName += ReportTitle.replace(/ /g, '_'); let uri = 'data:text/csv;charset=utf-8,' + escape(CSV); let link = document.createElement('a')\n    link.href = uri; link.style = 'visibility:hidden'; link.download = fileName + '.csv'\n    document.body.appendChild(link); link.click(); document.body.removeChild(link)\n  }\n\n  // Jquery addon and jquery global stuff\n  let $ = global.$\n  global.scrolltop = function () {\n    $('html, body').animate({ scrollTop: 0 }, 'fast')\n  }\n  global.scrollfire = function () {\n    window.dispatchEvent(new CustomEvent('scroll'))\n  }\n\n  global.global_init = global.global_init || 'notyet'\n  if (global.global_init === 'notyet' && typeof window !== 'undefined') {\n    global.imgError = function (e) {\n      e.target.style.visibility = 'hidden'\n    }\n\n    // Default worker\n    $('img').on('error', function () {\n      $(this).attr('src', '/images/missing.png')\n    })\n\n    // Sidebar navigator\n    setTimeout(() => {\n      $('.adnav__itemname.rxactive').parent('.adnav__groupwrap').addClass('rxactive')\n      $('.adnav__itemname.rxactive').parent('.adnav__groupwrap').prev('.adnav__groupname').addClass('adnav__groupname--expand')\n    }, 1000)\n\n    // Plugin\n    ;(function ($) {\n      let uniqueCntr = 0\n      $.fn.scrolled = function (waitTime, fn) {\n        if (typeof waitTime === 'function') {\n          fn = waitTime\n          waitTime = 20\n        }\n        var tag = 'scrollTimer' + uniqueCntr++\n        this.scroll(function () {\n          var self = $(this)\n          var timer = self.data(tag)\n          if (timer) {\n            clearTimeout(timer)\n          }\n          timer = setTimeout(function () {\n            self.removeData(tag)\n            fn.call(self[0])\n          }, waitTime)\n          self.data(tag, timer)\n        })\n      }\n    })($)\n\n    global.onResizeWindow = function () { $('.rxwindowheight').css({ 'height': $(window).height() + 'px' }) }\n    $(window).on('load', global.onResizeWindow)\n    $(window).resize(global.onResizeWindow)\n  }\n}\n\nif (typeof window !== 'undefined') {\n  const _addContact = (arrContacts, callback) => {\n    if (arrContacts && arrContacts.constructor === Array && arrContacts.length > 0) {\n      rxio.sendContacts(arrContacts, (data, err) => {\n        callback(data, err)\n      })\n    } \n  }\n  window.ChatNet = {\n    addContact: _addContact\n  }\n}\n\nexport default {}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport {} from './global'\nimport AppContainer from './app'\nimport { store } from './redux'\n\nglobal.rootRequiretheme('styles/style')\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <AppContainer />\n    </BrowserRouter>\n  </Provider>\n  , document.getElementById('chat-root'))\n","import React, { Component } from 'react'\n\nclass Admin extends Component {\n  constructor (props) {\n    super(props)\n    this._mounted = false\n  }\n\n  render () {\n    return (\n      <div></div>\n    )\n  }\n}\n\nexport default Admin\n","global.rootRequire = global.rootRequire || function () { return { default: {} } }\nconst Admin = global.rootRequire('components/admin').default\nconst noteComponent = global.rootRequire('components/admin/note').default\nconst cateComponent = global.rootRequire('components/admin/cate').default\nconst productcateComponent = global.rootRequire('components/admin/productcate').default\nconst productComponent = global.rootRequire('components/admin/product').default\nconst reviewComponent = global.rootRequire('components/admin/review').default\nconst orderComponent = global.rootRequire('components/admin/order').default\nconst dashboardComponent = global.rootRequire('components/admin/dashboard').default\n\nconst userComponent = global.rootRequire('components/admin/rbac/user').default\nconst roleComponent = global.rootRequire('components/admin/rbac/role').default\nconst permissionComponent = global.rootRequire('components/admin/rbac/permission').default\nconst loginComponent = global.rootRequire('components/authenticate/login').default\nconst registerComponent = global.rootRequire('components/authenticate/register').default\n// [[RX_ROUTES_IMPORT]] //\nlet adminRoutes = { path: '/admin', component: Admin, routes: [{ path: '/admin', component: dashboardComponent, exact: true }] }\nadminRoutes.routes = adminRoutes.routes.concat([{ path: '/admin/dashboard', component: dashboardComponent }])\nadminRoutes.routes = adminRoutes.routes.concat([{ path: '/admin/cate', component: cateComponent }])\nadminRoutes.routes = adminRoutes.routes.concat([{ path: '/admin/note', component: noteComponent }])\nadminRoutes.routes = adminRoutes.routes.concat([{ path: '/admin/productcate', component: productcateComponent }])\nadminRoutes.routes = adminRoutes.routes.concat([{ path: '/admin/product', component: productComponent }])\nadminRoutes.routes = adminRoutes.routes.concat([{ path: '/admin/review', component: reviewComponent }])\nadminRoutes.routes = adminRoutes.routes.concat([{ path: '/admin/order', component: orderComponent }])\n\n// [[RX_ROUTES_admin]] //\nlet Modulroutes = []; Modulroutes = Modulroutes.concat([adminRoutes])\n\nlet rxgenrbacRoutes = { path: '/rbac', component: Admin, routes: [{ path: '/rbac', component: noteComponent, exact: true }] }\nrxgenrbacRoutes.routes = rxgenrbacRoutes.routes.concat([{ path: '/rbac/user', component: userComponent }])\nrxgenrbacRoutes.routes = rxgenrbacRoutes.routes.concat([{ path: '/rbac/role', component: roleComponent }])\nrxgenrbacRoutes.routes = rxgenrbacRoutes.routes.concat([{ path: '/rbac/permission', component: permissionComponent }])\nlet loginRoutes = { path: '/login', component: loginComponent }\nlet registerRoutes = { path: '/register', component: registerComponent }\n// [[RX_ROUTES_RBAC]] //\nModulroutes = Modulroutes.concat([rxgenrbacRoutes, loginRoutes, registerRoutes])\n// [[RX_ROUTES]] //\nmodule.exports = Modulroutes\n","import React, { Component } from 'react'\n\nclass About extends Component {\n  render () { return (<div />) }\n}\n\nexport default About\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Component_ extends Component {\n  render () {\n    return (<div></div>)\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({})\n\nconst mapDispatchToProps = {}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nconst Status = ({ code, children }) => (\n  <Route render={({ staticContext }) => {\n    if (staticContext) { staticContext.status = code }\n    return children\n  }} />\n)\n\nconst NotFound = () => (\n  <Status code={404}>\n    <div>\n      <div className='rx-cat-title'>Không tìm thấy nội dung</div>\n    </div>\n  </Status>\n)\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass Component_ extends Component {\n  render () {\n    return (<div className='pcate'></div>)\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({})\n\nconst mapDispatchToProps = {}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass ProductSingle extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    return (<div />)\n  }\n}\n\nexport default ProductSingle\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst RedirectWithStatus = ({ route }) => (\n  <Route render={({ staticContext }) => {\n    if (staticContext) { staticContext.status = route.status }\n    return <Redirect to={route.to} />\n  }} />\n)\n\nexport default RedirectWithStatus\n","// import './fonts.css'\nimport './_01_index.css'\nimport './_02_admin.css'\nimport './_03_customs.css'\nimport './_04_responsive.css'\nimport './_05_mobile.css'\n","const Home = global.rootRequiretheme('home/home').default\nconst About = global.rootRequiretheme('about/about').default\nconst Payment = global.rootRequiretheme('payment/payment').default\n\nconst ProductAll = global.rootRequiretheme('product/all').default\nconst ProductSingle = global.rootRequiretheme('product/single').default\n\nconst NotFound = global.rootRequiretheme('notFound').default\n\nlet Themeroutes = [\n  { path: '/',\n    exact: true,\n    component: Home,\n    loadData: 'api_home'\n  },\n  { path: '/about',\n    component: About\n  },\n  { path: '/payment',\n    component: Payment\n  },\n  { path: '/cate/',\n    exact: true,\n    component: ProductAll,\n    loadData: 'api_site_productcate'\n  },\n  { path: '/cate/:slug',\n    component: ProductAll,\n    loadData: 'api_site_productcate'\n  },\n  { path: '/product/',\n    exact: true,\n    component: ProductSingle,\n    loadData: 'api_site_product'\n  },\n  { path: '/product/:slug',\n    component: ProductSingle,\n    loadData: 'api_site_product'\n  },\n  { path: '*',\n    component: NotFound\n  }]\n\nexport default Themeroutes\n","import React, { Component } from 'react'\nglobal.isclient && require('./footer.css')\n\nclass Footer extends Component {\n  render () {\n    return (<div className='footer'></div>)\n  }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nglobal.isclient && require('./header.css')\n\nconst {} = global.rootRequire('redux')\n\nclass Header_ extends Component {\n  render () {\n    return (<div></div>)\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({})\n\nconst mapDispatchToProps = {}\n\nconst Header = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header_)\n\nexport default Header","// import './fonts.css'\nimport './_01_index.css'\nimport './_02_admin.css'\nimport './_03_customs.css'\nimport './_04_responsive.css'\nimport './_05_mobile.css'\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nconst Status = ({ code, children }) => (\n  <Route render={({ staticContext }) => {\n    if (staticContext) { staticContext.status = code }\n    return children\n  }} />\n)\n\nconst NotFound = () => (\n  <Status code={404}>\n    <div>\n      <div className='rx-cat-title'>Không tìm thấy nội dung</div>\n    </div>\n  </Status>\n)\n\nexport default NotFound\n","const Chat = require('./chat').default\n\nlet Themeroutes = [\n  { path: '*',\n    component: Chat,\n    routes: [{\n      path: '*',\n      exact: true,\n      component: Chat\n    }]\n  }]\n\nexport default Themeroutes\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setComp, savePage } from './redux'\n\nimport Main from './main'\nimport LoginComp from \"./themes/netalo/login\"\n\nconst rxio = global.rootRequire('classes/socket').default\nconst { rxaget, changeTheme, changeThemeColor, changeTheme_ThemeColor } = global.rootRequire('classes/ulti')\nconst { rxgetLocal } = global.rootRequire('classes/request')\nconst themeData = global.rootRequire('classes/themeData.json')\nconst themeColorData = global.rootRequire('classes/themeColorData.json')\nconst theme_themeColorData = global.rootRequire('classes/theme_themeColorData.json')\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      flagAuth: false\n    }\n  }\n\n  componentDidMount () {\n    const color = global.rxu.json(rxgetLocal('netaThemeColor'), '')\n    const themeBackGround = global.rxu.json(rxgetLocal('netaThemeBackGround'), '')\n    const token = rxaget(this.props, 'netaauth.user.token', '')\n    const userid = rxaget(this.props, 'netaauth.user.id', '')\n\n    if (themeBackGround==='darkTheme'){\n      changeTheme(themeData.nightTheme)\n      changeTheme_ThemeColor(theme_themeColorData.nightTheme)\n    } else {\n      changeTheme(themeData.defaultTheme) \n      if (color==='blueColor'){\n        changeTheme_ThemeColor(theme_themeColorData.blueColor)\n      } else {\n        changeTheme_ThemeColor(theme_themeColorData.orangeColor) \n      } \n    }    \n    if (color==='blueColor'){\n      changeThemeColor(themeColorData.blueColor)\n    } else {\n      changeThemeColor(themeColorData.orangeColor) \n    }\n\n    \n    if (token && userid) {\n      if (!rxio.connected && !rxio.init_connected) {\n        rxio.login(token, userid, (data) => {\n        })\n      }\n    }\n\n    if (window && window.ipcRenderer) {\n      window.ipcRenderer.on('helper_page', () => {\n        try {\n          this.props.setComp('config')\n          this.props.savePage('chtg')\n        } catch (e) {}\n      })  \n    }\n\n    if (rxaget(this.props, 'netaauth.user.id', '')) {\n      this.setState({flagAuth: true})\n    } else {\n      this.setState({flagAuth: false})\n    }\n  }\n\n\n\n  componentDidUpdate (prevProps, prevState) {\n    const tokenCurren = rxaget(this.props, 'netaauth.user.token', '')\n    const tokenPrev = rxaget(prevProps, 'netaauth.user.token', '')\n    \n    if (tokenCurren === '' && tokenPrev !== tokenCurren) {\n      this.setState({flagAuth: false })\n    } else if (tokenCurren !== '' && !this.state.flagAuth) {\n      this.setState({flagAuth: true })\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        { !this.state.flagAuth && <LoginComp /> }\n        { this.state.flagAuth && <div className='container-main-box'><Main /></div>}\n      </div>\n    )\n  }\n}\n\n// AppContainer.js\nconst mapStateToProps = (state, ownProps) => ({\n  netaauth: state.netaauth\n})\n\nconst mapDispatchToProps = {\n  setComp, savePage\n}\n\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\nexport default AppContainer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setComp } from './redux'\n\nimport ChatComp from \"./themes/netalo/chat\"\nimport CallComp from \"./themes/netalo/callhistory\"\nimport ContactComp from \"./themes/netalo/contact\"\nimport ConfigComp from \"./themes/netalo/config\"\n\nglobal.isclient && require('./themes/netalo/home/home.css')\nglobal.isclient && require('./themes/netalo/login/index.css')\n\nconst Main = ({activeComponent}) => {\n  activeComponent = activeComponent || 'chat'\n  return (\n    <div>\n      { activeComponent === 'chat' ? <ChatComp /> :\n          activeComponent === 'call' ? <CallComp /> :\n            activeComponent === 'contact' ? <ContactComp /> :\n              activeComponent === 'config' ? <ConfigComp /> : <ChatComp />\n      }\n    </div>\n  )\n}\nconst mapStateToProps = (state) => ({\n  activeComponent: state.activeComponent\n})\n\nconst mapDispatchToProps = { setComp }\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main)\n","import React from 'react'\nimport Parser from 'html-react-parser'\n\nconst RxCall = global.rootRequire('components/shares/rxCall').default\nconst RxPopup = global.rootRequire('components/shares/rxPopup').default\n\nconst GroupsComponent = global.rootRequire('themes/netalo/chat/groups').default\nconst MessagesComponent = global.rootRequire('themes/netalo/chat/messages').default\nconst HeaderChatComponent = global.rootRequire('themes/netalo/chat/header').default\n\nglobal.isclient && require('./index.css')\n\nlet adminCSS = '<style>.main-container{ width: 100% !important; padding: 0px !important; } .homenav, .footer{ display: none !important; }</style>'\nexport const renderBody = (vm) => {\n  return (<div onClick={e => vm.checkClickOutside(e)}>\n    <div>\n      <RxCall />\n      <RxPopup />\n      <div className='zchat_left'>\n        <div className='zleft_menu'>\n          <div className='zmenu_message'>\n            <img src={'./images/default/icons/chat-active.svg'} alt='' className='zmenu_icon icon filter_img_class' />\n          </div>\n          <div className='zmenu_call' onClick={()=>vm.props.setComp('call')}>\n            <img src={'./images/default/icons/call.svg'} alt='' className='zmenu_icon icon' />\n          </div>\n          <div className='zmenu_contact' onClick={()=>vm.props.setComp('contact')}>\n            <img src={'./images/default/icons/contact.svg'} alt='' className='zmenu_icon icon' />\n          </div>\n          <div className='zmenu_config' onClick={()=>vm.props.setComp('config')}>\n            <img src={'./images/default/icons/config.svg'} alt='' className='zmenu_icon icon' />\n          </div>\n        </div>\n        <GroupsComponent groups={vm.state.groups || [] }/>\n      </div>\n      \n      <div className='zchat_right'>\n        {vm.props.rxgroup.groupid ? \n        <div className='zright_contain'>\n          <HeaderChatComponent />\n          <MessagesComponent \n            tabmore={vm.state.tabmore || false}\n            groups={vm.state.groups || [] }\n            callBackRedirectChat={() => vm.callBackRedirectParent()}\n          />\n        </div>:\n        <div className ='zright_contain_empty'>Chọn một cuộc trò chuyện để bắt đầu</div>\n        }\n\n      </div>      \n    </div>\n  </div>)\n}\n\nexport const renderComponent = (vm) => {\n  return (<div>\n    {Parser(adminCSS)}\n    {vm.renderBody()}\n  </div>)\n}","/*global translate*/\nimport React from 'react'\nimport Parser from 'html-react-parser'\n\nglobal.isclient && require('./index.css')\nconst { rxgetLocal } = global.rootRequire('classes/request')\n\nlet adminCSS = '<style>.main-container{ width: 100% !important; padding: 0px !important; } .homenav, .footer{ display: none !important; }</style>'\nlet zget = global.rxu.get\nconst { checkNameUser } = global.rootRequire('classes/chat')\nconst RxCall = global.rootRequire('components/shares/rxCall').default\nconst RxPopup = global.rootRequire('components/shares/rxPopup').default\nconst {rxChangeSlug} = global.rootRequire('classes/ulti')\n\nconst MessagesComponent = global.rootRequire('themes/netalo/chat/messages').default\nconst HeaderChatComponent = global.rootRequire('themes/netalo/chat/header').default\nexport const renderCallHistory = (vm) => {\n  let usersinfo = zget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users') || {}\n  let netaCallHistory = []\n  let eleCount = 1\n  zget(vm.props, 'netaCallHistory.data', []).forEach((ele, index) => {\n    ele.count = eleCount\n    netaCallHistory.push(ele)\n  })\n  let lastEle = {}\n  return <div className='zleft_contactlist'>\n    <div id='context-menu-call-history'>\n      <div className='context-menu-box-callhistory'>\n        <div className='callhistory-menu_item'>\n          <div className ='group-item-head'>\n            <img className='group_img_item filter_img_class' src={'https://betaweb.netalo.vn/images/default/icons/icon-delete-chat.svg'}alt=''/>\n          </div>\n          <div className='group-item-info' onClick={e => vm.removeCallHistory()}>\n            {translate('Delete Call History')}\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    {vm.state.callHistory.map((ele, index) => {\n      if (ele.call_id === lastEle.call_id) {\n        return <div key={index} />\n      } else {\n        lastEle = ele\n        let callId = zget(ele.callee_uins.filter((id) => (id !== zget(vm.props, 'netaauth.user.id'))), [0])\n        let user = zget(usersinfo, [callId], {})        \n        let sname = rxChangeSlug(checkNameUser(user)).slice(0, 2).toUpperCase()\n        let background = `linear-gradient(120deg, ${stringToColour('FFF' + sname)}, #FFFFFF)`\n        return <div className=' zcontact_maininfo_place zcontactitem zcontactitem-call clearfix' key={index} onClick={(e) => vm.onClickStartCallRender(e, ele, index)} onContextMenu={e => {vm.onRightClickGroup(e, ele)}}>\n          <i className={vm.helpCallType(ele, true) + ' zcall_icon'} />\n          <div className='zcontact_avatar'>\n            {user.profile_url && <img src={`${global.rxu.config.cdn_endpoint}${user.profile_url}`} className='zcontact_avatarimg images-static' alt=''\n              onError={(e) => { e.target.onerror = null; e.target.src = global.rxu.config.get_static + user.profile_url }} />\n            }\n            {!user.profile_url && <div className='ava-span' style={{ background: background }}>{sname}</div>}\n          </div>\n          <div className='zcontact_maininfo'>\n            <div className={vm.helpCallName(ele) + ' zcontact_name'}>{checkNameUser(user)}</div>\n            <div className='zcontact_status'>{vm.helpCallType(ele)}</div>\n          </div>\n          <div className='zcontact_date'>{vm.helpTimeText(ele.started_at)}</div>\n        </div>\n      }\n      })\n    }\n  </div>\n}\n\nexport const renderBody = (vm) => <div>\n  <RxCall />\n  <RxPopup />\n  <div className='zchat_left'>\n    <div className='zleft_menu'>\n      <div className='zmenu_message' onClick={()=>vm.props.setComp('chat')}>\n        <img src={'./images/default/icons/chat.svg'} alt='' className='zmenu_icon icon' />\n      </div>\n      <div className='zmenu_call'>\n        <img src={'./images/default/icons/call-active.svg'} alt='' className='zmenu_icon icon filter_img_class' />\n      </div>\n      <div className='zmenu_contact' onClick={()=>vm.props.setComp('contact')}>\n        <img src={'./images/default/icons/contact.svg'} alt='' className='zmenu_icon icon' />\n      </div>\n      <div className='zmenu_config' onClick={()=>vm.props.setComp('config')}>\n        <img src={'./images/default/icons/config.svg'} alt='' className='zmenu_icon icon' />\n      </div>\n    </div>\n    <div className='zleft_contain'>\n      <div className='zleft_searchwrap'>\n        <div>\n          <input type='search' maxLength='30' className={zget(vm.props, 'themeBackgroudValue') === 'darkTheme' ?'zleft_search darkThemeInput':'zleft_search lightThemeInput'} placeholder={translate('Search Calls')} onChange={e => { vm.onChangeSearch(e, ) }} onDrop={vm.disableDrop}/>\n        </div>\n      </div>\n      <div className='zleft_botline zleft_botline-marbot' />\n      {vm.renderCallHistory()}\n    </div>\n  </div>\n  <div className='zchat_right'>\n    {vm.props.rxgroup.groupid ?\n    <div className='zright_contain'>\n      <HeaderChatComponent />\n      <MessagesComponent \n        tabmore={vm.state.tabmore || false}\n        groups={vm.state.groups || [] }\n        callBackRedirectChat={() => vm.callBackRedirectParent()}\n      />\n    </div>:\n    <div className ='zright_contain_empty'>Chọn một cuộc trò chuyện để bắt đầu</div>\n    }\n  </div>\n</div>\n\nexport const renderFoot = (vm) => <div />\n\nexport const renderComponent = (vm) => <div>\n  {Parser(adminCSS)}\n  {vm.renderBody()}\n  {vm.renderFoot()}\n</div>\n\nlet stringToColour = function (str) {\n  let hash = 0\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash)\n  }\n  let colour = '#'\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 0xFF\n    colour += ('00' + value.toString(16)).substr(-2)\n  }\n  return colour\n}\n","/* global translate */ \nimport React from 'react'\nimport Parser from 'html-react-parser'\nglobal.isclient && require('./index.css')\n\nconst MessagesComponent = global.rootRequire('themes/netalo/chat/messages').default\nconst HeaderChatComponent = global.rootRequire('themes/netalo/chat/header').default\nconst RxModalEdit = global.rootRequire('components/shares/rxModalEdit').default\nconst RxSearchBox = global.rootRequire('components/shares/rxSearchBox').default\nconst RxPopup = global.rootRequire('components/shares/rxPopup').default\nconst RxCall = global.rootRequire('components/shares/rxCall').default\n\nconst { checkNameUser } = global.rootRequire('classes/chat')\nconst { rxChangeSlug } = global.rootRequire('classes/ulti')\nconst { rxgetLocal } = global.rootRequire('classes/request')\n\nlet zget = global.rxu.get\nlet adminCSS = '<style>.main-container{ width: 100% !important; padding: 0px !important; } .homenav, .footer{ display: none !important; }</style>'\n\nexport const renderContactList = (vm) => {\n  let value = vm.state.inputSearchContact\n  if(value.startsWith('0')){\n      value = value.replace(value.charAt(0), '+84')\n  }\n  let contactTitle = ''\n  return <div className={vm.state.groupsSearchBoxClickStatus === false && vm.state.searchValue.length === 0 ? 'zleft_contactlist': 'zleft_contactlist_hiden'}>\n    <div id='context-menu-contact'>\n      <div className='context-menu-box-contact'>\n        <div className='group-menu_item'>\n          <div className ='group-item-head'>\n            <img className='group_img_item filter_img_class' src={'./images/default/icons/icon-delete-chat.svg'}alt=''/>\n          </div>\n          <div className='group-item-info' onClick={e => vm.removeContact()}>\n            {translate('Delete Contact')}\n          </div>\n        </div>\n\n        <div className='group-menu_item'>\n          <div className ='group-item-head'>\n            <img className='group_img_item filter_img_class' src={'./images/default/icons/icon_edit.svg'}alt=''/>\n          </div>\n          <div className='group-item-info' onClick={e => vm.editContact()}>\n            {translate('Edit Name Contact')}\n          </div>\n        </div>\n\n      </div>\n    </div>\n    {vm.state.registeredUsers && vm.state.registeredUsers.filter(ele =>((ele.phone || '').toLowerCase().includes((value || '').toLowerCase())|| (checkNameUser(ele) || '').toLowerCase().includes((value || '').toLowerCase()))).map((ele, index) => {\n      let usersinfo = zget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users') || {}\n      let user = zget(usersinfo, [ele.Id], {})\n      let sname = rxChangeSlug(checkNameUser(user)).slice(0, 2).toUpperCase()\n      let background = `linear-gradient(120deg, ${stringToColour('FFF' + sname)}, #FFFFFF)`\n      let eleContactTitle = rxChangeSlug(checkNameUser(ele,vm.userid,vm.props.netaauth)).slice(0,1)\n      if(contactTitle !== eleContactTitle){\n        ele.contactTitle = true\n        contactTitle = eleContactTitle\n      }else{\n        ele.contactTitle = false\n      }\n      return <div className='zcontactitem clearfix' onClick={e => { vm.chooseContact(ele,false) }} key={index} onContextMenu={e => {vm.onRightClickGroup(e, ele)}}>\n        \n        {ele.contactTitle && <div className='zcontact_title'>{eleContactTitle}</div>}\n        <div className='zcontact_maininfo_place'>\n          <div className='zcontact_avatar' >\n            {ele.profile_url && <img src={`${global.rxu.config.cdn_endpoint}${ele.profile_url}`} className='zcontact_avatarimg images-static' alt=''\n              onError={(e) => { e.target.onerror = null; e.target.src = global.rxu.config.get_static + ele.profile_url }} />\n            }\n            {!ele.profile_url &&<div className='ava-span' style={{ background: background }}>{sname}</div>}\n          </div>\n          <div className='zcontact_maininfo'>\n            <div className='zcontact_name'>{checkNameUser(ele,vm.userid,vm.props.netaauth)}</div>\n            <div className='zcontact_status'>\n                {\n                  (vm.state.usersStatus[Number(ele.id)] &&\n                  vm.state.usersStatus[Number(ele.id)].online_status === 1)\n                    ? <span className='zcontact_online'>Online</span> :\n                      <span className='zcontact_offline'>Offline</span>}\n            </div>\n          </div>\n        </div>        \n      </div>\n    })}\n  </div>\n}\n\nexport const renderBody = (vm) => <div>\n  <RxPopup />\n  <RxCall />\n  <div className='zchat_left'>  \n    <div className='zleft_menu'>\n      <div className='zmenu_message' onClick={()=>vm.props.setComp('chat')}>\n        <img src={'./images/default/icons/chat.svg'} className='zmenu_icon icon' alt='' />\n      </div>\n      <div className='zmenu_call' onClick={()=>vm.props.setComp('call')}>\n        <img src={'./images/default/icons/call.svg'} className='zmenu_icon icon' alt='' />\n      </div>\n      <div className='zmenu_contact'>\n        <img src={'./images/default/icons/contact-active.svg'} className='zmenu_icon icon filter_img_class' alt='' />\n      </div>\n      <div className='zmenu_config' onClick={()=>vm.props.setComp('config')}>\n        <img src={'./images/default/icons/config.svg'} className='zmenu_icon icon' alt='' />\n      </div>\n    </div>\n    <div className='zleft_contain'>      \n    {vm.state.groupsSearchBoxClickStatus === false && vm.state.searchValue.length === 0 ?\n      <div className='zleft_searchwrap'>        \n        <div className='icon_basic_search_area'>\n          <img className='icon_basic_search filter_img_class'  src={'./images/default/icons/search-active.svg'} alt=''/>\n        </div>\n        <input type='search' maxLength='30' placeholder={translate('Search')} className={zget(vm.props, 'themeBackgroudValue') === 'darkTheme' ? 'zleft_search_place darkThemeInput':'zleft_search_place lightThemeInput'} placeholder={translate('Search')} autoComplete='off'  onDrop={vm.disableDrop} onClick={e => {vm.groupsSearchBoxClick()}}></input>\n\n        <div className='dropdown'>\n          <div className='zleft_edit' onClick={e=>{vm.setState({displayAddContact:true})}} >\n            <img className='icon32 filter_img_class' src={'./images/default/icons/edit.svg'} alt=''/>\n            <img className='icon32_white' src={'./images/default/icons/edit40x40.svg'} alt=''/>\n          </div>\n          </div>\n      </div>:\n      <RxSearchBox \n        searchBoxvalue = {(clickStatus,searchValue)=>{vm.getSearchBoxvalue(clickStatus,searchValue)}}\n        pageActive = {'contactPage'}\n        onClickAddContact ={()=>vm.setState({displayAddContact:true})}\n        searchBox_chooseGroup = {(group)=>{vm.chooseGroup(group)}}\n        chooseContact ={(contact) => {vm.chooseContact(contact,true)}}\n        groupsSearchBoxClickStatus ={vm.state.groupsSearchBoxClickStatus}\n        groups = {vm.state.groups}\n        groupsNChatOrigin = {vm.state.groupsNChatOrigin}\n      />}\n      {\n        (global.rxu.get(vm.props, 'netaRegisteredUsers.data', []).length > 0) ?\n          (vm.renderContactList())\n          :\n          (<div className='zgroup-emty'>\n            <img className='icon176x80 filter_img_class' src={'./images/default/icons/background-contact.svg'} alt='' />\n            <div className='zgroup-emty_text' >\n              {translate('You have not had any chat yet')} \n            </div>\n          </div>)\n      }\n    </div>\n  </div>\n  <div className='zchat_right'>\n    {vm.props.rxgroup.groupid ? <div className='zright_contain'>\n      <HeaderChatComponent />\n      <MessagesComponent \n        tabmore={vm.state.tabmore || false}\n        groups={vm.state.groups || [] }\n        callBackRedirectChat={() => vm.callBackRedirectParent()}\n      />\n    </div>:\n    <div className ='zright_contain_empty'>Chọn một cuộc trò chuyện để bắt đầu</div>\n    }\n    {(vm.state.displayAddContact === true) && \n      <RxModalEdit \n        onClickModalEdit={() => {vm.setState({displayAddContact:false, flagEdit: false, contactInfo: {}})}}\n        onSubmitContact={vm.onSubmitContact}\n        flagEdit={vm.state.flagEdit}\n        contactInfo={vm.state.contactInfo}\n    />}\n  </div>\n</div>\n\nexport const renderFoot = (vm) => <div />\n\nexport const renderComponent = (vm) => <div>\n  {Parser(adminCSS)}\n  {vm.renderBody()}\n  {vm.renderFoot()}\n</div>\n\nlet stringToColour = function (str) {\n  let hash = 0\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash)\n  }\n  let colour = '#'\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 0xFF\n    colour += ('00' + value.toString(16)).substr(-2)\n  }\n  return colour\n}\n","/* global translate */ \nimport React from 'react'\nimport Parser from 'html-react-parser'\nglobal.isclient && require('./index.css')\nconst { rxChangeSlug,rxconfig,stringToColour,subString } = global.rootRequire('classes/ulti')\nconst {checkNameContact, checkNameUser }= global.rootRequire('classes/chat')\nlet zget = global.rxu.get\nlet adminCSS = '<style>.main-container{ width: 100% !important; padding: 0px !important; } .homenav, .footer{ display: none !important; }</style>'\nlet appName = 'GAlo'\nlet appSupportUrl = 'https://hotro.galo.vn'\nif (rxconfig.theme === 'default') {\n  appName = 'NetAlo'\n  appSupportUrl = 'https://hotro.netalo.vn'\n}\nexport const renderBody = (vm) => <div>\n  <div className='zchat_left'>\n    <div className='zleft_menu'>\n      <div className='zmenu_message' onClick={e => {vm.props.setComp('chat'); vm.zmenu_logoutConfigpage()}}>\n        <img src={'./images/default/icons/chat.svg'} className='zmenu_icon icon' alt='' />\n      </div>\n      <div className='zmenu_call' onClick={e => { vm.props.setComp('call');vm.zmenu_logoutConfigpage()}}>\n        <img src={'./images/default/icons/call.svg'} className='zmenu_icon icon' alt='' />\n      </div>\n      <div className='zmenu_contact' onClick={e => {vm.props.setComp('contact'); vm.zmenu_logoutConfigpage()}}>\n        <img src={'./images/default/icons/contact.svg'} className='zmenu_icon icon' alt='' />\n      </div>\n      <div className='zmenu_config' onClick={e => { vm.zmenu_logoutConfigpage()}}>\n        <img src={'./images/default/icons/config-active.svg' }className='zmenu_icon icon filter_img_class' alt='' />\n      </div>\n    </div>\n    <div className='zleft_contain'>\n      <div className='zuinfo_base'>\n        <div className='zuinfo_header'>\n          <span className='zuinfo_header-title'>\n            {translate('Account')}\n          </span>\n          <div className='zuinfo_header-btn_edit' onClick={e=>vm.editBtnClick()}>\n            <span className='zuinfo_header-txt_edit'>\n              {translate('Edit')}\n            </span>\n          </div>\n        </div>\n        <div className='zuinfo_avatar'>\n          {(zget(vm.userinfo, 'profile_url', '') || vm.state.netaauth_profile_url) && <img className='zuinfo_avatar_img images-static'\n            src={`${global.rxu.config.cdn_endpoint}${(vm.state.netaauth_profile_url || zget(vm.userinfo, 'profile_url', ''))}`} alt=''\n            onError={(e) => { e.target.onerror = null; e.target.src = `${global.rxu.config.get_static}${(vm.state.netaauth_profile_url || zget(vm.userinfo, 'profile_url', ''))}` }} />\n          }\n          <span className='zspan_nameuser_default'>\n            {rxChangeSlug(vm.state.netaauth_user_name).slice(0, 2).toUpperCase()}\n          </span>\n        </div>\n        <div className='zuinfo_info'>\n          <div className='zuinfo_name'>{vm.state.netaauth_user_name}</div>\n          <div className='zuinfo_desc'>{zget(vm.props, 'netaauth.user.phone')}</div>\n        </div>\n        <div className='zuitems'>\n          <div className='zuitem zuitem_general '>\n            <img className='icon24' src={'./images/default/icons/notify.svg'} alt='' />\n            <span className='zuinfo_txt'>\n              {translate('General settings')}\n            </span>\n            <img className='icon24 zuitem-right' src={'./images/default/icons/right-arrow.svg'} alt='' />\n          </div>  \n          <div className= 'zuitem zuitem_notify'\n            onClick={e => {  vm.setState({ displayListBlock: true }) }}>\n            <img className='icon24 filter_img_class' src={'./images/default/icons/ic_block_list.svg'} alt='' />\n            <span className='zuinfo_txt'>\n              {translate('Block list')}\n            </span>\n            <img className='icon24 zuitem-right' src={'./images/default/icons/right-arrow.svg'} alt='' />\n          </div>\n\n          <div className={zget(vm.props, 'pageValue')==='cdtb'?'zuitem-active zuitem_notify ':'zuitem zuitem_notify'} onClick={e => { vm.choose_cdtb('cdtb')}}>\n            <img className='icon24 filter_img_class' src={'./images/default/icons/notify.svg'} alt='' />\n            <span className='zuinfo_txt'>\n              {translate('Notification settings')}\n            </span>\n            <img className='icon24 zuitem-right' src={'./images/default/icons/right-arrow.svg'} alt='' />\n          </div>    \n          <div className={(zget(vm.props, 'pageValue') === 'cdcd') || (vm.state.page === 'cdcd')?'zuitem-active zuitem_notify ':'zuitem zuitem_notify '} onClick={e => { vm.choose_cdcd('cdcd')}}>\n            <img className='icon24 filter_img_class' src={'./images/default/icons/theme.svg'} alt='' />\n            <span className='zuinfo_txt'>\n              {translate('Theme')}\n            </span>\n            <img className='icon24 zuitem-right' src={'./images/default/icons/right-arrow.svg'} alt='' />\n          </div>\n          <div className={zget(vm.props, 'pageValue')==='cdnn'?'zuitem-active zuitem_lang ':'zuitem zuitem_lang'} onClick={e => { vm.choose_cdnn('cdnn')}}>\n            <img className='icon24 filter_img_class' src={'./images/default/icons/language.svg'} alt='' />\n            <span className='zuinfo_txt'>\n              {translate('Language')}\n            </span>\n            <div className='zuitem-right'>\n              <span className='zuinfo-txtmore'>\n                {zget(vm.props, 'langValue')==='en'?'English':'Tiếng Việt'}\n              </span>\n              <img className='icon24 ' src={'./images/default/icons/right-arrow.svg'} alt='' />\n            </div>\n          </div>\n          <div className={zget(vm.props, 'pageValue')==='chtg'?'zuitem-active zuitem_lang ':'zuitem zuitem_lang'} onClick={e => { vm.choose_chtg('chtg')}}>\n            <img className='icon24 filter_img_class' alt='' src={'./images/default/icons/question.svg'} />\n            <span className='zuinfo_txt'>\n              {translate('Frequently asked questions')}\n            </span>\n            <img className='icon24 zuitem-right' src={'./images/default/icons/right-arrow.svg'} alt='' />\n          </div>\n          <div className={zget(vm.props, 'pageValue')==='dksd'?'zuitem-active zuitem_lang ':'zuitem zuitem_lang'} onClick={e => { vm.choose_dksd('dksd')}}>\n            <img className='icon24 filter_img_class' alt='' src={'./images/default/icons/rule.svg'} />\n            <span className='zuinfo_txt'>\n              {translate('Terms of use')}\n            </span>\n            <img className='icon24 zuitem-right' src={'./images/default/icons/right-arrow.svg'} alt='' />\n          </div>\n          <div className='zuitem zuitem_lang' onClick={vm.onClickLogout.bind(vm)}>\n            <div className='icon-logout zicon-logout' />\n            <span className='zuinfo_txt'>\n            {translate('Logout')}\n            </span>\n          </div>\n        </div>\n        <div className='zuversion'>Version: 1.0.9</div>\n      </div>\n    </div>\n\n    {vm.state.displayListBlock === true && <div className=\"newgroup_rectangle config\">\n      <div className=\"newgroup_rectangle_1\"></div>\n      {/* <div className=\"newgroup_rectangle_2_1\"> */}\n      <div className=\"create_new_group_chat\">\n        <div className=\"newgroup_rectangle_title\">\n          <div className=\"them_lien_he\">{translate(\"Block list\")}</div>\n          <div className=\"close_icon\" onClick={e => { vm.setState({ displayListBlock: false,unblockList:{} }) }}>\n            <img\n              className=\"icon-basic-up filter_img_class\"\n              src={\"./images/default/icons/icon-basic-up.svg\"}\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"newgroup_body\">\n          <div className=\"newgroup_contactlist_default\" id=\"zgroup_list\">\n            {vm.state.blockedList ?\n              (vm.state.blockedList.length ? vm.state.blockedList.map((ele, index) => {\n                return (\n                  <div key={index}\n                    className=\"zgroupitem-contact clearfix\"  >\n                    <div className=\"zgroup_avatar\">\n                      {ele.profile_url && (\n                        <img src={global.rxu.config.cdn_endpoint + ele.profile_url}\n                          alt=\"\" data-id={\"userava\" + ele.id} className=\"ava-useravatar images-static\"\n                          onError={e => {\n                            e.target.onerror = null; e.target.src = global.rxu.config.get_static + ele.profile_url\n                          }}\n                        />\n                      )}\n                      {!ele.profile_url && <span className=\"ava-span\"\n                        style={{\n                          background: `linear-gradient(120deg, ${stringToColour(\"FFF\" + checkNameContact(ele).slice(0, 2).toUpperCase())}, #FFFFFF)`\n                        }}\n                      >\n                        {rxChangeSlug(checkNameUser(ele)).slice(0, 2).toUpperCase()}\n                      </span>}\n                      \n                    </div>\n                    <div className=\"zgroup_maininfo-contact\" >\n                      <div className=\"newgroup_userinfo_place\" onClick={e => vm.onChooseContactUnblock(ele, index)}> {subString(checkNameUser(ele), 20)} </div>\n                      <div className=\"newgroup_checked\">\n                        <label className=\"container100\">\n                          <input\n                            className=\"checkmark1\"\n                            type=\"checkbox\"\n                            checked={vm.state.unblockList[ele.group_id] ? true : false}\n                            onChange={e => vm.onChooseContactUnblock(ele, index)}\n                          />\n                          <span className=\"checkmark\" ></span>\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"newgroup_divider\"></div>\n                  </div>\n                );\n              }) : <div className='mess-unblock'>{translate('You haven\\'t blocked any contact')}</div>) :\n              <div className=\"loading\"><div className=\"dot-flashing\"></div></div>}\n\n          </div>\n        </div>\n        {(vm.state.blockedList && vm.state.blockedList.length)?<div className=\"newgroup-buntton\">\n          <span className=\"newgroup-create-btn\" onClick={e => vm.onClickUnBlockContact()}>\n            {translate(\"Unblock contact\")}\n          </span>\n        </div>:null}\n      </div>\n    </div>}\n    <div className={(vm.state.displayEditScreen === true) ? 'chatConfig_rectangle' : 'chatConfig_rectangle_hiden'}>          \n      <div className='chatConfig_rectangle_1'></div>        \n      <div className='chatConfig_rectangle_2'>        \n        <div className='chatConfig_rectangle_2_1'>\n          <div className='chatConfig_title_place'>\n            <div className='chatConfig_cancel_btn' onClick={e=>vm.cancelBtnClick()}>{translate('Cancel')}</div>\n            <div className='chatConfig_title'>{translate('Profile')}</div>\n          </div>\n          <div className='chatConfig_avatar_place'>\n            <div className='zuinfo_edit_avatar' onClick={(e) => vm.uploadInputImage.click() }>\n              <input type='file' id='data_image' ref={(ref) => { vm.uploadInputImage = ref}} multiple={false} key={'data_image'}\n                style={{ display: 'none' }} accept=\"image/jpg,image/png,video/mp4\"\n                onChange={(e) => vm.uploadFileImages(e.target.files)} />\n              <div className=\"icon-camera\"></div>\n              {(zget(vm.userinfo, 'profile_url', '') || vm.state.netaauth_profile_url)\n                && <img className='zuinfo_avatar_img images-static'\n                  alt=''\n                  src={`${global.rxu.config.cdn_endpoint}${vm.state.netaauth_profile_url || zget(vm.userinfo, 'profile_url', '')}`}\n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = `${global.rxu.config.get_static}${vm.state.netaauth_profile_url || zget(vm.userinfo, 'profile_url', '')}`\n                  }} />}\n               <span className='chatConfig_zspan_nameuser_default'>\n                  {rxChangeSlug(vm.state.netaauth_user_name).slice(0, 2).toUpperCase()}\n                </span>\n            </div>\n          </div>\n          <div className='chatConfig_edit_body'>\n            <div className='chatConfig_edit_tile'>{translate('Full name')}</div>\n            <div className='chatConfig_group_input_place'>\n              <input maxLength=\"30\" className='chatConfig_input' placeholder={vm.state.netaauth_user_name}\n              value={vm.state.usernameValue} \n              onChange={(event) =>vm.setState({ usernameValue: event.target.value })} ></input>   \n              <div className='chatConfig_border_bot'></div>\n            </div>\n            <div className='chatConfig_edit_tile'>{translate('Phone number')}</div>\n            <div className='chatConfig_group_input_place'>\n              <div className='chatConfig_phone_input_place'>\n                <span className='chatConfig_phone' >{zget(vm.props, 'netaauth.user.phone')}</span> \n              </div>\n              <div className='chatConfig_phone_lock_icon'>\n                {/*<img src={zget(vm.props,'themeValue') ==='blueColor'?'./images/icons/Mask Group 109_bl.png':'./images/icons/Mask Group 109.png'} alt=''/>*/}\n              </div> \n              <div className='chatConfig_border_bot'></div>               \n            </div>             \n            <div className='chatConfig_note'>{translate('Registered phone number cannot be changed')}</div>\n            <div className='chatConfig_doneBtn' onClick={()=>vm.updateProfile()}>{translate('Done')}</div>\n          </div>          \n        </div>      \n      </div>        \n    </div> \n  </div>\n  <div className='zchat_right'>\n    <div className={zget(vm.props, 'pageValue')==='cdtb' ? 'zchat_right_cdtb' : 'zchat_right_cdtb_hiden'}>\n      <div className='cdcd_main_title_place'>\n        <div className ='cdcd_main_title'>\n          {translate('Notification settings')}\n        </div>\n      </div>\n      <div className='cdtb_rowplace' >\n        <div className ='cdtb_title'>\n          {translate('Allows notifications')}\n        </div>\n        <div className='cdtb_pt_place'>\n          <label className='switch'>\n            <input className = 'pushToggles' type = 'checkbox' checked = {vm.state.notificationStatusValue} onChange={e=>vm.usePushNotifications(e)}/>\n            <span className = 'slider round'></span>\n          </label>\n        </div>  \n      </div>\n    </div>\n    <div className={(zget(vm.props, 'pageValue') === 'cdcd') || (vm.state.page === 'cdcd')? 'zchat_right_cdcd' : 'zchat_right_cdcd_hiden'}>\n      <div className='cdcd_main_title_place'>\n        <div className ='cdcd_main_title'>\n          {translate('Theme settings')}\n        </div>\n      </div>   \n      <div className='cdcd_body'>\n        <div className = 'cdcd_title'>{translate('Theme')}</div>\n        <div className='cdcd_hh'>\n          <div className='cdcd_hh_left'>\n            <div className='cdcd_hh_place'>    \n              <div className={(zget(vm.props,'themeBackgroudValue') !== 'darkTheme') ? 'cdmd cdcd_border_active' : 'cdmd cdcd_border'} onClick={e=>vm.themeSelect('defaultTheme')}>\n                <div className='cdmd_row1_place'>\n                  <div className='cdmd_row1_img'></div>\n                </div>\n                <div className='cdmd_row2_place'>\n                  <div className='cdmd_row2_img'></div>\n                </div>\n              </div>        \n            </div>\n            <div className='cdcd_background_place'>\n              {translate('Default')}\n            </div>\n          </div>\n          <div className='cdcd_hh_right'>\n            <div className='cdcd_hh_place'>   \n              <div className={(zget(vm.props,'themeBackgroudValue') === 'darkTheme') ? 'cdbd cdcd_border_active' : 'cdbd cdcd_border'}onClick={e=>vm.themeSelect('darkTheme')}>\n                <div className='cdbd_row1_place'>\n                  <div className='cdbd_row1_img'></div>\n                </div>\n                <div className='cdbd_row2_place'>\n                  <div className='cdbd_row2_img'></div>\n                </div>\n              </div>           \n            </div>\n            <div className='cdcd_background_place'>\n              {translate('Night')}\n            </div>\n          </div>        \n        </div>\n        <div className='cdcd_rowplace_border_top'></div>\n        <div className={rxconfig.theme === 'galo' ?'cdcd_rowplace_hiden':'cdcd_rowplace'}>\n          <div className='cdcd_rowplace_title'> \n            {translate('Color')}\n          </div>\n          <div className='cdcd_rdbtn_place'>\n            <div className='cdcd_border2' >\n              <label className='cdcd_container'>\n                <input type='radio' name='radio' defaultChecked={zget(vm.props,'themeValue') !=='blueColor'?'checked':''} />\n                <span className='cdcd_checkmark2' onClick={e=>vm.submitThemeColor('orangeColor')}></span>\n              </label>\n            </div>  \n          </div>\n          <div className='cdcd_rdbtn_place'>\n            <div className='cdcd_border1' >\n              <label className='cdcd_container'>\n                <input type='radio' name='radio' defaultChecked={(zget(vm.props,'themeValue')==='blueColor')} />\n                <span className='cdcd_checkmark1' onClick={e=>vm.submitThemeColor('blueColor')}></span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div> \n    </div>\n    <div className={zget(vm.props, 'pageValue')==='cdnn' ? 'zchat_right_cdnn' : 'zchat_right_cdnn_hiden'}>\n      <div className='cdnn_main_title_place'>\n        <div className ='cdnn_main_title'>\n          {translate('Language settings')}\n        </div>\n      </div>\n      <div className='cdnn_rowplace'>\n        <div className='cdnn_title'>\n          {translate('Language')}\n        </div>\n        <div className='cdnn_selectBox'>\n          <select className='cdnn_language_place' id='cdnn_language' onChange={e=>{vm.changeLang(e.target.value)}}>\n            {zget(vm.props,'langValue')==='vi'?<option value='vi' selected>Tiếng Việt</option>:<option value='vi' >Tiếng Việt</option>}\n            {zget(vm.props,'langValue')==='en'?<option value='en' selected>Enghlish</option>:<option value='en' >Enghlish</option>}\n          </select>    \n        </div>\n        \n      </div>\n      <div className='cdnn_divider_area'>\n        <div className='cdnn_divider'></div>\n      </div>  \n    </div>\n    <div className={zget(vm.props, 'pageValue')==='chtg' ? 'zchat_right_chtg' : 'zchat_right_chtg_hiden'}>\n      <div className='chtg_config_title'>\n        <div className='chtg_config_title_border_bot'>{translate('Have Questions? Look Here')}</div>\n      </div>\n      <div className='chtg_body'>   \n      {vm.state.arrQuestion.map((ele, index) =>{\n        return <div key={index}>\n          <div className='chtg_quest'>     \n            <div className='chtg_quest_place' onClick={e=>{vm.chtg_clickTitle(ele.name)}}>\n              <div className='chtg_quest_title'>{translate(ele.question)}</div>\n              <div className='chtg_quest_img'>\n                {<i className={ele.status_click === true ? 'arrow up' : 'arrow down'}></i> }\n              </div>\n            </div>\n            <div className='chtg_quest_border_bot'></div>\n            <div className={ele.status_click === true ? 'chtg_answer' : 'chtg_answer_hiden'}>\n              <div className='chtg_answer_info'>{translate(ele.answer)}</div>\n            </div>\n          </div>\n        </div>\n        }\n      )}\n\n      </div>\n      <div className = 'chtg_footer'></div>\n    </div>\n    <div className={zget(vm.props, 'pageValue')==='dksd' ? 'zchat_right_dksd' : 'zchat_right_dksd_hiden'}>\n      <div className='dksd_config_title'>\n        <div> {translate(appName+' Terms Of Service')}</div>\n        <div className='dksd_divider'></div>\n      </div>\n\n      <div className={zget(vm.props, 'langValue')==='en'?'dksd_body_hiden':'dksd_body'}>\n        <div className='dksd_title'>\n          {'ĐIỀU 1. NGUYÊN TẮC CHUNG'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Trước khi đăng ký tài khoản để sử dụng dịch vụ trên Mạng xã hội '+appName+' (“Dịch vụ”), bạn xác nhận đã đọc, hiểu và đồng ý với tất cả các quy định trong Thỏa Thuận Cung Cấp Và Sử Dụng Dịch Vụ Mạng Xã Hội GAlo này (sau đây gọi tắt là “Thỏa thuận”) thông qua việc hoàn thành việc đăng ký tài khoản Mạng xã hội '+appName+'. Bạn chấp nhận không có bất kỳ giới hạn nào về và/hoặc liên quan tới tất cả các điều khoản và điều kiện dưới đây, kể từ thời điểm bạn sử dụng Dịch vụ lần đầu tiên.'}\n          </li>\n          <li className='dksd_item'>\n            {'Khi xem xét việc sử dụng Dịch vụ cung cấp bởi Công ty Cổ phần Technology Convergence Corporation (sau đây gọi tắt là “chúng tôi” hoặc “'+appName+'”), bạn cam kết rằng bạn có đủ tuổi theo luật định để xác lập thỏa thuận có tính ràng buộc, và không phải là người bị ngăn cấm tiếp nhận Dịch vụ theo pháp luật Việt Nam, hoặc bạn đã có sự chấp thuận trước của cha mẹ hoặc người giám hộ hợp pháp của bạn để sử dụng Dịch vụ theo quy định và phù hợp với Thỏa thuận này.'}\n          </li>\n          <li className='dksd_item'>\n            {'Đồng thời, khi đăng ký tài khoản và sử dụng Dịch vụ, bạn cũng cam kết và chấp nhận rằng:'}\n          </li>\n          <li className='dksd_item2'>\n            {'Nếu bạn muốn định danh tài khoản, bạn sẽ cung cấp đầy đủ, chính xác thông tin về họ tên; ngày, tháng, năm sinh; số chứng minh nhân dân/hộ chiếu/căn cước công dân (“Giấy tờ tùy thân”), ngày cấp, nơi cấp của Giấy tờ tùy thân, và chịu trách nhiệm về các thông tin mà bạn cung cấp khi thực hiện việc đăng ký cũng như sửa đổi, bổ sung các thông tin này;'}\n          </li>\n          <li className='dksd_item2'>\n            {'Tất cả các giao tiếp, dữ liệu, văn bản, phần mềm, âm nhạc, âm thanh, hình chụp, hình họa, video, thư hoặc các tài liệu khác (sau đây gọi chung là \"Thông tin\"), cho dù được đăng công khai hoặc được truyền đưa riêng, trước tiên thuộc về trách nhiệm của người tạo ra Thông tin đó. Chúng tôi có hệ thống kiểm duyệt nội dung Thông tin được chia sẻ cũng như có cơ chể phát hiện và xử lý vi phạm đối với những Thông tin do những người sử dụng khác nhau cung cấp trên Mạng xã hội '+appName+' theo quy định của pháp luật Việt Nam;'}\n          </li>\n          <li className='dksd_item2'>\n            {'Bạn có thể chia sẻ Thông tin hợp lệ và hợp pháp dưới các định dạng chúng tôi mặc định tại các khu vực cho phép. Là người sử dụng, bạn cần có trách nhiệm với các giao tiếp của riêng bạn và phải tự chịu trách nhiệm với kết quả của việc chia sẻ. Chúng tôi không đại diện, xác nhận hay cam đoan tính trung thực, chính xác của các Thông tin được chia sẻ.'}\n          </li>\n          <li className='dksd_item'>\n            {'Đối với Thông tin được bảo vệ theo quyền sở hữu trí tuệ như ảnh và video (“Thông tin SHTT”), bạn cấp riêng cho chúng tôi quyền sau: bạn cấp cho chúng tôi một giấy phép toàn cầu, không độc quyền, có thể chuyển nhượng, có thể cấp phép lại và miễn phí để sử dụng mọi Thông tin SHTT mà bạn đăng lên (“Giấy phép SHTT”). Giấy phép SHTT này hết hiệu lực khi bạn xóa Thông tin SHTT hoặc tài khoản, trừ khi Thông tin của bạn đã được chính bạn chia sẻ với người khác và những người này chưa xóa Thông tin đó trên Mạng xã hội '+appName+'.'}\n          </li>\n          <li className='dksd_item'>\n            {'Khi chia sẻ Thông tin lên Mạng xã hội '+appName+', bạn đồng ý cấp cho chúng tôi quyền sử dụng và chia sẻ Thông tin đó lên các nền tảng khác của hệ sinh thái '+appName+' thuộc quyền quản lý của chúng tôi hoặc các phương tiện thông tin đại chúng.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 2. QUY ĐỊNH VỀ ĐẶT TÊN TÀI KHOẢN'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Không được đặt tên tài khoản, nhân vật theo tên của danh nhân, tên của các vị lãnh đạo, tên của trùm khủng bố, phát xít, tội phạm, và tên của những cá nhân, tổ chức chống lại Nhà nước Cộng hòa xã hội chủ nghĩa Việt Nam, mà gây phương hại đến an ninh quốc gia, trật tự an toàn xã hội.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không được đặt tên tài khoản, nhân vật trùng hoặc tương tự gây nhầm lẫn với tên viết tắt, tên đầy đủ của cơ quan nhà nước, tổ chức chính trị, tổ chức chính trị - xã hội, tổ chức chính trị xã hội - nghề nghiệp, tổ chức xã hội, tổ chức xã hội - nghề nghiệp của Việt Nam và tổ chức quốc tế, nếu không được cơ quan, tổ chức đó cho phép.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không được đặt tên tài khoản, nhân vật trùng hoặc gây nhầm lẫn để giả mạo các cá nhân, tổ chức khác nhằm mục đích đưa thông tin sai sự thật, xuyên tạc, vu khống, xúc phạm uy tín của tổ chức, danh dự và nhân phẩm của cá nhân khác.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không được đặt tên tài khoản, nhân vật vi phạm các quyền sở hữu trí tuệ.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không được đặt tên có chứa các từ/cụm từ gây nhầm lẫn với các nền tảng trong hệ sinh thái của '+appName+' thuộc quyền quản lý của '+appName+' khi chưa có sự đồng ý bằng văn bản của '+appName+'.'}\n          </li>\n          <li className='dksd_item'>\n            {'Tài khoản vi phạm quy định về đặt tên sẽ bị khoá và/hoặc xóa vĩnh viễn mà không cần thông báo.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 3. QUY ĐỊNH VỀ HÌNH ĐẠI DIỆN'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Không sử dụng hình ảnh có hàm ý kích động bạo lực, dâm ô, đồi trụy, tội ác, tệ nạn xã hội, mê tín dị đoan, phá hoại thuần phong, mỹ tục của dân tộc.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không sử dụng hình ảnh hoặc hình ảnh mô tả có tính xúc phạm các danh nhân, anh hùng dân tộc, lãnh đạo Đảng và Nhà nước của Việt Nam và lãnh đạo của các cơ quan tổ chức quốc tế.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không sử dụng hình ảnh có chứa dấu hiệu trùng hoặc tương tự đến mức gây nhầm lẫn với biểu tượng, cờ, huy hiệu, tên viết tắt, tên đầy đủ của cơ quan nhà nước, tổ chức chính trị, tổ chức chính trị - xã hội, tổ chức chính trị xã hội - nghề nghiệp, tổ chức xã hội, tổ chức xã hội - nghề nghiệp của Việt Nam và tổ chức quốc tế mà xúc phạm đến uy tín của các tổ chức này.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không sử dụng các hình ảnh liên quan tới tôn giáo mà gây kích động, chia rẽ khối đại đoàn kết dân tộc, đi ngược lại chính sách tôn giáo của Việt Nam.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không sử dụng ảnh của tội phạm, khủng bố, phát xít, và ảnh hoặc hình ảnh mô tả các cá nhân, tổ chức chống lại Nhà nước Cộng hòa xã hội chủ nghĩa Việt Nam, gây phương hại đến an ninh quốc gia, trật tự an toàn xã hội.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không sử dụng ảnh xúc phạm uy tín của tổ chức, danh dự và nhân phẩm của cá nhân khác.'}\n          </li>\n          <li className='dksd_item'>\n            {'Không sử dụng hình ảnh có chứa các từ/cụm từ, logo, dấu hiệu trùng hoặc tương tự gây nhầm lẫn với các nền tảng trong hệ sinh thái '+appName+' thuộc quyền quản lý của '+appName+' khi chưa có sự đồng ý bằng văn bản của '+appName+'.'}\n            </li>\n          <li className='dksd_item'>\n            {'Không sử dụng hình ảnh vi phạm các quyền sở hữu trí tuệ.'}\n          </li>\n          <li className='dksd_item'>\n            {'Tài khoản vi phạm quy định về hình đại diện sẽ bị khoá và/hoặc xóa vĩnh viễn mà không cần thông báo.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 4. CÁC THÔNG TIN CẤM CHIA SẺ, TRAO ĐỔI, CHIA SẺ TRÊN MẠNG XÃ HỘI '+appName+''}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Thông tin chống lại Nhà nước Cộng hòa xã hội chủ nghĩa Việt Nam; gây phương hại đến an ninh quốc gia, trật tự an toàn xã hội; tổ chức, hoạt động, câu kết, xúi giục, mua chuộc, lừa gạt, lôi kéo, đào tạo, huấn luyện người chống Nhà nước Cộng hòa xã hội chủ nghĩa Việt Nam.'}\n          </li>\n          <li className='dksd_item'>\n            {'Tuyên truyền chiến tranh, khủng bố.'}\n          </li>\n          <li className='dksd_item'>\n            {'Xúi giục, lôi kéo, kích động người khác phạm tội.'}\n          </li>\n          <li className='dksd_item'>\n            {'Xuyên tạc lịch sử, phủ nhận thành tựu cách mạng, phá hoại khối đại đoàn kết toàn dân tộc, xúc phạm tôn giáo, phân biệt đối xử về giới, phân biệt chủng tộc, tôn giáo; gây hận thù, mâu thuẫn giữa các dân tộc, sắc tộc, tôn giáo.'}\n          </li>\n          <li className='dksd_item'>\n            {'Thông tin kích động bạo lực, dâm ô, đồi trụy, tội ác, tệ nạn xã hội, mê tín dị đoan, phá hoại thuần phong, mỹ tục của dân tộc.'}\n          </li>\n          <li className='dksd_item'>\n            {'Tiết lộ bí mật nhà nước, bí mật quân sự, an ninh, kinh tế, đối ngoại và những bí mật khác do pháp luật Việt Nam quy định.'}\n          </li>\n          <li className='dksd_item'>\n            {'Thông tin xuyên tạc, vu khống, xúc phạm uy tín của tổ chức, danh dự và nhân phẩm của cá nhân.'}\n          </li>\n          <li className='dksd_item'>\n            {'Quảng cáo, tuyên truyền, mua bán hàng hóa, dịch vụ bị cấm; truyền bá tác phẩm báo chí, văn học, nghệ thuật, xuất bản phẩm bị cấm.'}\n          </li>\n          <li className='dksd_item'>\n            {'Giả mạo tổ chức, cá nhân và phát tán thông tin giả mạo, thông tin sai sự thật xâm hại đến quyền và lợi ích hợp pháp của tổ chức, cá nhân.'}\n          </li>\n          <li className='dksd_item'>\n            {'Thông tin vi phạm quyền sở hữu trí tuệ.'}\n          </li>\n          <li className='dksd_item'>\n            {'Các Thông tin khác vi phạm tới quyền và lợi ích hợp pháp của cá nhân, tổ chức.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 5. CÁC HÀNH VI BỊ CẤM KHÁC'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Cản trở trái phép hoạt động của hệ thống máy chủ tên miền quốc gia Việt Nam \".vn\", hoạt động hợp pháp của hệ thống thiết bị cung cấp dịch vụ Internet và thông tin trên mạng.'}\n          </li>\n          <li className='dksd_item'>\n            {'Cản trở trái phép việc cung cấp và truy cập thông tin hợp pháp, việc cung cấp và sử dụng các dịch vụ hợp pháp trên Internet của tổ chức, cá nhân.'}\n          </li>\n          <li className='dksd_item'>\n            {'Sử dụng trái phép mật khẩu, khoá mật mã của các tổ chức, cá nhân; thông tin riêng, thông tin cá nhân và tài nguyên Internet.'}\n          </li>\n          <li className='dksd_item'>\n            {'Tạo đường dẫn trái phép đối với tên miền hợp pháp của tổ chức, cá nhân. Tạo, cài đặt, phát tán các phần mềm độc hại, vi rút máy tính; xâm nhập trái phép, chiếm quyền điều khiển hệ thống thông tin, tạo lập công cụ tấn công trên Internet.'}\n          </li>\n          <li className='dksd_item'>\n            {'Sử dụng bất kỳ chương trình, công cụ hay hình thức nào khác để can thiệp vào dịch vụ của '+appName+'.'}\n          </li>\n          <li className='dksd_item'>\n            {'Phát tán, truyền bá hay cổ vũ cho bất kỳ hoạt động nào nhằm can thiệp, phá hoại hay xâm nhập vào dữ liệu của dịch vụ cung cấp hoặc hệ thống máy chủ.'}\n          </li>\n          <li className='dksd_item'>\n            {'Đăng nhập trái phép hoặc tìm cách đăng nhập trái phép hoặc gây thiệt hại cho hệ thống máy chủ.'}\n          </li>\n          <li className='dksd_item'>\n            {'Quấy rối, chửi bới, làm phiền hay có bất kỳ hành vi thiếu văn hoá nào đối với người sử dụng khác.'}\n          </li>\n          <li className='dksd_item'>\n            {'Hành vi, thái độ làm tổn hại đến uy tín của '+appName+' và/hoặc các dịch vụ của '+appName+' dưới bất kỳ hình thức hoặc phương thức nào.'}\n          </li>\n          <li className='dksd_item'>\n            {'Quảng bá bất kỳ sản phẩm/dịch vụ dưới bất kỳ hình thức nào mà không tuân thủ theo thỏa thuận cung cấp và sử dụng dịch vụ và chính sách quảng cáo của '+appName+'.'}\n          </li>\n          <li className='dksd_item'>\n            {'Đánh bạc và tổ chức đánh bạc trên Mạng xã hội '+appName+'.'}\n          </li>\n          <li className='dksd_item'>\n            {'Các hành vi cấm khác theo quy định của pháp luật Việt Nam trong từng lĩnh vực.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 6. QUYỀN CỦA NGƯỜI SỬ DỤNG MẠNG XÃ HỘI '+appName+''}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Bạn được quyền thay đổi, bổ sung thông tin cá nhân, mật khẩu đã đăng ký.'}\n          </li>\n          <li className='dksd_item'>\n            {'Bạn được hướng dẫn cách đặt mật khẩu an toàn; nhập các thông tin quan trọng để bảo vệ tài khoản; sử dụng tài khoản liên kết để đăng nhập tài khoản.'}\n          </li>\n          <li className='dksd_item'>\n            {'Bạn được quyền tặng cho tài khoản Mạng xã hội '+appName+' của mình cho người khác. Quyền được tặng cho tài khoản chỉ được áp dụng đối với tài khoản đã đăng ký đầy đủ và chính xác các thông tin tài khoản theo quy định Thỏa thuận này.'}\n          </li>\n          <li className='dksd_item'>\n            {'Được bảo đảm bí mật thông tin cá nhân theo quy định của Thỏa thuận này và Chính sách Bảo mật Thông tin cá nhân trên Mạng xã hội '+appName+'. Theo đó, những thông tin cá nhân mà bạn cung cấp sẽ chỉ được '+appName+' sử dụng để kiểm soát các hoạt động trên Mạng xã hội '+appName+' và sẽ không được cung cấp cho bất kỳ bên thứ ba nào khác khi chưa có sự đồng ý của bạn, trừ trường hợp có sự yêu cầu từ cơ quan Nhà nước có thẩm quyền theo đúng quy định của pháp luật Việt Nam.'}\n          </li>\n\n          <li className='dksd_item'>\n            {'Được quyền yêu cầu '+appName+' cung cấp thông tin cần thiết liên quan đến việc sử dụng Dịch vụ.'}\n          </li>         \n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 7. NGHĨA VỤ CỦA NGƯỜI SỬ DỤNG MẠNG XÃ HỘI '+appName+''}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Để nhận được sự hỗ trợ từ '+appName+', tài khoản của bạn phải đăng ký đầy đủ các thông tin trung thực, chính xác.'}\n          </li>\n          <li className='dksd_item'>\n            {'Bạn có trách nhiệm tự bảo mật thông tin tài khoản của bạn trên Mạng xã hội '+appName+' bao gồm: Mật khẩu, số điện thoại bảo vệ tài khoản, thông tin Giấy tờ tùy thân, email bảo vệ tài khoản. Nếu những thông tin trên bị tiết lộ do sự bất cẩn hay bất kỳ lỗi bảo mật nào khác của chính cá nhân bạn, thì bạn phải chấp nhận những rủi ro phát sinh. Chúng tôi sẽ căn cứ vào những thông tin hiện có trong tài khoản để làm căn cứ quyết định chủ sở hữu tài khoản nếu có tranh chấp và chúng tôi sẽ không chịu trách nhiệm về mọi tổn thất phát sinh. Thông tin Giấy tờ tùy thân đăng ký trong tài khoản là thông tin quan trọng nhất để chứng minh chủ sở hữu tài khoản.'}\n            </li>\n          <li className='dksd_item'>\n            {'Bạn đồng ý sẽ thông báo ngay cho '+appName+' về bất kỳ trường hợp nào sử dụng trái phép tài khoản và mật khẩu của bạn hoặc bất kỳ các hành động phá vỡ hệ thống bảo mật nào bằng cách gửi yêu cầu hỗ trợ tại địa chỉ '+appSupportUrl+'/.'}\n          </li>\n          <li className='dksd_item'>\n            {'Chúng tôi quan tâm tới sự an toàn và riêng tư của tất cả thành viên đăng ký tài khoản và sử dụng Dịch vụ trên Mạng xã hội '+appName+', đặc biệt là người chưa thành niên và người được giám hộ. Vì vậy, nếu bạn là cha mẹ hoặc người giám hộ hợp pháp, bạn có trách nhiệm xác định xem Thông tin nào trên Mạng xã hội '+appName+' thích hợp cho con của bạn hoặc người được bạn giám hộ. Tương tự, nếu bạn là người chưa thành niên hoặc người được giám hộ thì phải hỏi ý kiến cha mẹ hoặc người giám hộ hợp pháp của bạn để xác định xem liệu rằng Thông tin mà bạn sử dụng/truy cập trên Mạng xã hội '+appName+' có phù hợp với bạn hay không.'}\n          </li>\n          <li className='dksd_item'>\n            {'Bạn phải chịu hoàn toàn trách nhiệm trước pháp luật Việt Nam về Thông tin do bạn chia sẻ, truyền, đưa, lưu trữ trên Mạng xã hội '+appName+', mạng Internet, mạng viễn thông.'}\n          </li>  \n          <li className='dksd_item'>\n            {'Bạn phải bồi thường toàn bộ thiệt hại cho '+appName+' trong trường hợp bạn có hành vi vi phạm bất kỳ quy định nào tại Thỏa thuận này và/hoặc hành vi vi phạm pháp luật dẫn đến tổn thất, thiệt hại về tài sản và uy tín của '+appName+'.'}\n          </li>  \n          <li className='dksd_item'>\n            {'Tuân thủ các quy định về bảo đảm an toàn thông tin, an ninh thông tin và các quy định khác có liên quan theo quy định của pháp luật Việt Nam và Thỏa thuận này.'}\n          </li>  \n          <li className='dksd_item'>\n            {'Tuân thủ các trách nhiệm, nghĩa vụ khác của người sử dụng mạng xã hội, Internet, mạng viễn thông theo quy định của pháp luật Việt Nam.'}\n          </li>  \n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 8. QUYỀN CỦA '+appName+''}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Nếu bạn cung cấp bất kỳ thông tin nào không trung thực, không chính xác, hoặc nếu '+appName+' có cơ sở để nghi ngờ rằng thông tin đó không chính xác hoặc nếu bạn vi phạm bất cứ điều khoản nào trong Thỏa thuận này, '+appName+' có toàn quyền chấm dứt, xóa bỏ tài khoản của bạn mà không cần sự đồng ý của bạn và không phải chịu bất cứ trách nhiệm nào đối với bạn. Đồng thời, '+appName+' có quyền từ chối hỗ trợ và giải quyết các yêu cầu đối với tài khoản của bạn.'}\n          </li>\n          <li className='dksd_item'>\n            {'Nếu bạn có những bình luận, bài đăng vô nghĩa và/hoặc bình luận, bài đăng liên tục gây phiền toái tới người sử dụng khác thì '+appName+' có quyền tắt tính năng bình luận và/hoặc đăng tải của bạn trong 01(một) ngày, 03(ba) ngày, hoặc lâu hơn, tùy thuộc vào mức độ vi phạm. Trong trường hợp bạn vi phạm nhiều lần, '+appName+' sẽ khóa tài khoản của bạn ít nhất 30 (ba mươi) ngày, hoặc hơn tuỳ thuộc vào tính chất và mức độ vi phạm'}\n          </li>\n          <li className='dksd_item'>\n            {'Khi '+appName+' phát hiện những vi phạm của bạn trong quá trình sử dụng Dịch vụ như truy cập trái phép, chia sẻ, truyền đưa các Thông tin bị cấm theo Thỏa thuận này và/hoặc theo quy định của pháp luật Việt Nam, hoặc những lỗi khác gây ảnh hưởng tới quyền và lợi ích hợp pháp của '+appName+' và/hoặc cá nhân, tổ chức có liên quan, '+appName+' có quyền: (i) tước bỏ mọi quyền lợi của bạn trong Thỏa thuận này, bao gồm chấm dứt, xóa bỏ tài khoản của bạn mà không cần sự đồng ý của bạn và không phải chịu bất cứ trách nhiệm nào với bạn; và/hoặc (ii) sử dụng những thông tin mà bạn cung cấp khi đăng ký tài khoản để chuyển cho Cơ quan chức năng giải quyết các vi phạm này theo quy định của pháp luật Việt Nam.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 9. TRÁCH NHIỆM CỦA '+appName+''}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Có trách nhiệm hỗ trợ bạn trong quá trình sử dụng Dịch vụ.'}\n          </li>\n          <li className='dksd_item'>\n            {'Nhận và giải quyết các khiếu nại, tranh chấp của bạn phát sinh trong quá trình sử dụng Dịch vụ trong thẩm quyền của '+appName+' theo quy định của pháp luật Việt Nam. Tuy nhiên chúng tôi chỉ hỗ trợ, nhận và giải quyết các khiếu nại, tranh chấp đối với tài khoản đăng ký đầy đủ thông tin, trung thực và chính xác.'}\n          </li>\n          <li className='dksd_item'>\n            {'Có trách nhiệm bảo mật thông tin cá nhân của bạn theo quy định của Thỏa thuận này, Chính sách Bảo mật Thông tin cá nhân trên Mạng xã hội '+appName+' và quy định của pháp luật Việt Nam. Chúng tôi không bán hoặc trao đổi những thông tin cá nhân của bạn với bên thứ ba, trừ trường hợp theo yêu cầu của cơ quan Nhà nước có thẩm quyền theo quy định của pháp luật Việt Nam và/hoặc các trường hợp theo quy định tại Thỏa thuận này.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 10. CƠ CHẾ XỬ LÝ VI PHẠM'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Nếu bạn vi phạm Thỏa thuận này, tùy thuộc vào mức độ vi phạm, chúng tôi sẽ khóa tài khoản của bạn tạm thời hoặc vĩnh viễn hoặc xóa tài khoản vĩnh viễn, tước bỏ mọi quyền lợi của bạn đối các Dịch vụ và sẽ yêu cầu cơ quan chức năng xử lý hành vi vi phạm theo quy định của pháp luật Việt Nam.'}\n          </li>\n          <li className='dksd_item'>\n            {'Trường hợp hành vi vi phạm của bạn chưa được quy định trong Thỏa thuận này thì tùy vào tính chất, mức độ của hành vi vi phạm, '+appName+' sẽ đơn phương, toàn quyền quyết định mức xử phạt mà '+appName+' cho là hợp lý.'}\n          </li>\n          <li className='dksd_item'>\n            {'Nếu có khiếu nại về Thông tin bị xem là vi phạm và/hoặc bất kỳ vấn đề nào khác liên quan đến cơ chế xử lý vi phạm quy định tại Thỏa thuận này, vui lòng gửi yêu cầu hỗ trợ tại địa chỉ '+appSupportUrl+'/'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 11. CẢNH BÁO VỀ RỦI RO KHI LƯU TRỮ, TRAO ĐỔI VÀ CHIA SẺ THÔNG TIN TRÊN MẠNG'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Khi bạn đăng ký, sử dụng tính năng đăng nhập liên quan đến các nền tảng và ứng dụng của bên thứ ba, điều đó đồng nghĩa với việc các thông tin của bạn sẽ được chia sẻ cho bên thứ ba, dựa trên sự chấp thuận của bạn. Bằng việc chấp nhận sự chia sẻ này, bạn cũng sẽ chấp nhận những rủi ro kèm theo. Trong trường hợp này, bạn đồng ý và chấp nhận loại trừ trách nhiệm của '+appName+' liên quan tới việc thông tin, dữ liệu của bạn bị chia sẻ cho bên thứ ba.'}\n          </li>\n          <li className='dksd_item'>\n            {'Nếu phát sinh rủi ro, thiệt hại trong trường hợp bất khả kháng bao gồm nhưng không giới hạn như chập điện, hư hỏng phần cứng, phần mềm, sự cố đường truyền Internet hoặc do thiên tai, hỏa hoạn, đình công, sự thay đổi của luật pháp, người sử dụng phải chấp nhận những rủi ro, thiệt hại đó. '+appName+' cam kết sẽ nỗ lực giảm thiểu những rủi ro, thiệt hại phát sinh tuy nhiên chúng tôi sẽ không chịu bất cứ trách nhiệm nào phát sinh trong các trường hợp này.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 12. LUẬT ÁP DỤNG VÀ CƠ QUAN GIẢI QUYẾT TRANH CHẤP'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Thỏa thuận này được điều chỉnh bởi pháp luật Việt Nam. Bất kỳ tranh chấp nào phát sinh trong quá trình sử dụng Dịch vụ của bạn sẽ được giải quyết tại tòa án có thẩm quyền của Việt Nam, theo pháp luật hiện hành của Việt Nam.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 13. THỜI HẠN GIẢI QUYẾT KHIẾU NẠI, TRANH CHẤP'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Bất kỳ khiếu nại, tranh chấp nào phát sinh từ Thỏa thuận này, thuộc thẩm quyền giải quyết của '+appName+', phải được gửi tới '+appName+' trong vòng 01 (một) tháng kể từ ngày xảy ra hành vi dẫn đến khiếu nại, tranh chấp đó.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 14. ĐIỀU KIỆN VÀ PHƯƠNG THỨC GIẢI QUYẾT KHIẾU NẠI, TRANH CHẤP'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Chúng tôi chỉ hỗ trợ, giải quyết khiếu nại, tranh chấp của bạn trong thẩm quyền của '+appName+' theo quy định của pháp luật Việt Nam, với điều kiện bạn đã ghi đầy đủ, trung thực và chính xác thông tin khi đăng ký tài khoản.'}\n          </li>\n          <li className='dksd_item'>\n            {'Đối với tranh chấp giữa người sử dụng với nhau hoặc giữa người sử dụng với '+appName+', chúng tôi sẽ căn cứ ghi chép của hệ thống để giải quyết. Theo đó, chúng tôi sẽ bảo vệ quyền lợi tối đa cho người sử dụng đăng ký đầy đủ thông tin theo quy định.'}\n          </li>\n          <li className='dksd_item'>\n            {'Khi có khiếu nại, tranh chấp giữa bạn và người sử dụng khác trên Mạng xã hội '+appName+' hoặc giữa bạn với '+appName+', bạn có thể gửi yêu cầu giải quyết khiếu nại, tranh chấp tới '+appName+' tại địa chỉ '+appSupportUrl+''}\n          </li>\n          <li className='dksd_item'>\n            {'Trừ trường hợp pháp luật Việt Nam có quy định khác, quyết định giải quyết khiếu nại, tranh chấp của '+appName+' là quyết định cuối cùng và có hiệu lực.'}'\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 15. LOẠI TRỪ NGHĨA VỤ VÀ BỒI THƯỜNG'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Bạn đồng ý loại trừ '+appName+' khỏi tất cả các trách nhiệm, nghĩa vụ pháp lý, tố tụng phát sinh từ sự vi phạm của bạn trong quá trình sử dụng Dịch vụ.'}\n          </li>\n          <li className='dksd_item'>\n            {'Bạn phải bồi thường toàn bộ thiệt hại cho '+appName+', trong trường hợp bạn có hành vi vi phạm Thỏa thuận này và/hoặc hành vi vi phạm pháp luật dẫn đến tổn thất, thiệt hại về tài sản và uy tín của '+appName+', bao gồm cả chi phí liên quan đến việc giải quyết như án phí, phí luật sư, phí thuê chuyên gia tư vấn và các chi phí khác có liên quan đến việc giải quyết vụ việc.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 16. THU THẬP, XỬ LÝ DỮ LIỆU CÁ NHÂN'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Quy trình đăng ký tài khoản sử dụng Mạng xã hội '+appName+' yêu cầu bạn cung cấp các thông tin cá nhân và mật khẩu. Việc cung cấp những thông tin khác cho chúng tôi hay không tùy thuộc vào quyết định của bạn.'}\n          </li>\n          <li className='dksd_item'>\n            {'Chúng tôi không sử dụng thông tin của bạn vào mục đích bất hợp pháp. Chúng tôi được quyền cung cấp thông tin của bạn cho bên thứ ba trong các trường hợp, bao gồm nhưng không giới hạn:'}\n          </li>\n          <li className='dksd_item2'>\n            {'Chúng tôi được bạn chấp thuận;'}\n          </li>\n          <li className='dksd_item2'>\n            {'Khi bạn đăng ký, sử dụng tính năng đăng nhập liên quan đến các nền tảng và ứng dụng của bên thứ ba và bạn đồng ý để '+appName+' cung cấp thông tin của bạn cho bên thứ ba đó;'}\n          </li>\n          <li className='dksd_item2'>\n            {'Theo yêu cầu của cơ quan Nhà nước có thẩm quyền;'}\n          </li>\n          <li className='dksd_item'>\n            {'Trong quá trình sử dụng Dịch vụ, bạn đồng ý nhận tất cả thông báo, quảng cáo từ '+appName+' liên quan tới Dịch vụ qua thư điện tử, thư bưu chính hoặc điện thoại của bạn. Trong trường hợp bạn đăng ký sử dụng dịch vụ do bên thứ ba cung cấp thì những thông tin của bạn sẽ được chia sẻ với bên thứ ba, dựa trên sự chấp thuận của bạn. Bạn cũng đồng ý nhận tất cả thông báo từ bên thứ ba liên quan tới dịch vụ qua thư điện tử, thư bưu chính hoặc điện thoại của bạn.'}\n          </li>\n          <li className='dksd_item'>\n            {'Chúng tôi có thể dùng thông tin của bạn để thực hiện các hoạt động nghiên cứu của '+appName+' để phát triển các dịch vụ nhằm phục vụ bạn tốt hơn.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 17. CHÍNH SÁCH BẢO MẬT THÔNG TIN CÁ NHÂN TRÊN MẠNG XÃ HỘI '+appName+''}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Chúng tôi luôn cố gắng đáp ứng các yêu cầu của pháp luật Việt Nam về bảo vệ thông tin cá nhân như được quy định trong Chính sách Bảo mật thông tin cá nhân trên mạng xã hội '+appName+' nằm trong khả năng của chúng tôi. Trong trường hợp bất khả kháng và/hoặc có sự tác động từ các yếu tố nằm ngoài khả năng kiểm soát của chúng tôi, chúng tôi sẽ không chịu trách nhiệm cho việc thông tin cá nhân của bạn bị tiết lộ.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 18. QUYỀN SỞ HỮU TRÍ TUỆ'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Chúng tôi sở hữu quyền sở hữu trí tuệ, bao gồm nhưng không giới hạn các quyền tác giả, quyền liên quan, nhãn hiệu, quyền chống cạnh tranh không lành mạnh, bí mật kinh doanh, và các quyền sở hữu trí tuệ khác trong tất cả các dịch vụ của '+appName+'. Việc sử dụng bất kỳ đối tượng quyền sở hữu trí tuệ nào của '+appName+' cần phải được chúng tôi cho phép trước bằng văn bản.'}\n          </li>\n          <li className='dksd_item'>\n            {'Ngoài việc được cấp phép bằng văn bản, chúng tôi không cấp phép dưới bất kỳ hình thức nào khác cho dù đó là hình thức công bố hay hàm ý để bạn thực hiện các quyền trên. Và do vậy, bạn không có quyền sử dụng dịch vụ của '+appName+' vào bất kỳ mục đích nào mà không có sự cho phép bằng văn bản của chúng tôi.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 19. BẢO LƯU QUYỀN XỬ LÝ THÔNG TIN'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Tại các khu vực được phép chia sẻ Thông tin, bạn có thể chia sẻ Thông tin được phép dưới các định dạng chúng tôi mặc định và bạn phải tự chịu trách nhiệm đối với các Thông tin chia sẻ, giao tiếp về tính hợp pháp, cũng như các trách nhiệm pháp lý đối với Thông tin chia sẻ của bạn với cá nhân người sử dụng hoặc nhóm người sử dụng.'}\n          </li>\n          <li className='dksd_item'>\n            {'Chúng tôi đóng vai trò như người hướng dẫn thụ động cho sự trình bày và công khai trực tuyến của Thông tin do người sử dụng chia sẻ nên trong mọi trường hợp, chúng tôi được bảo lưu quyền xử lý các Thông tin chia sẻ cho phù hợp với Thỏa thuận này và các quy định pháp luật Việt Nam. Nếu những Thông tin do người sử dụng chia sẻ không phù hợp với những thỏa thuận và điều kiện của Thỏa thuận này, chúng tôi có thể chỉnh sửa hoặc ngay lập tức loại bỏ (xóa) những Thông tin đó đồng thời báo với cơ quan chức năng nếu cần thiết.'}\n          </li>\n          <li className='dksd_item'>\n            {'Việc xử lý Thông tin chia sẻ của chúng tôi tuân thủ theo các quy trình, chính sách dựa trên các quy định của pháp luật Việt Nam để đảm bảo quyền và lợi ích của bạn cũng như các cá nhân, tổ chức khác. Chúng tôi có nghĩa vụ và chịu trách nhiệm xử lý Thông tin chia sẻ theo yêu cầu của cơ quan nhà nước có thẩm quyền và/hoặc theo quy định của pháp luật Việt Nam.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 20. SỬA ĐỔI, BỔ SUNG'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Các điều khoản tại Thỏa thuận này có thể được chúng tôi sửa đổi, bổ sung bất cứ lúc nào mà không cần phải thông báo trước tới bạn. Những Thông tin sửa đổi, bổ sung sẽ được chúng tôi công bố trên Mạng xã hội '+appName+'.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ĐIỀU 21. HIỆU LỰC'}\n        </div>\n        <div >\n          <li className='dksd_item'>\n            {'Thỏa thuận này có giá trị ràng buộc với bạn kể từ thời điểm hoàn thành việc đăng ký tài khoản Mạng xã hội '+appName+'.'}\n          </li>\n          <li className='dksd_item'>\n            {'Trong trường hợp một hoặc một số điều khoản Thỏa thuận này xung đột với các quy định của luật pháp và bị tòa án có thẩm quyền của Việt Nam tuyên là vô hiệu theo quy định của pháp luật Việt Nam, điều khoản bị tuyên vô hiệu đó sẽ được chỉnh sửa cho phù hợp với quy định của pháp luật Việt Nam, và các điều khoản còn lại của Thỏa thuận này vẫn có hiệu lực.'}\n          </li>\n        </div>\n      </div>      \n\n      <div className={zget(vm.props, 'langValue')==='en'?'dksd_body':'dksd_body_hiden'}>\n        <div className='dksd_item'>\n          <span className='dksd_item_bold'>{'Last updated:'}</span>{' 09/01/2020'}\n        </div>\n        <div >\n          <div className='dksd_item'>\n            {''+appName+' (“'+appName+',” “our,” “we,” or “us”) provides messaging, Internet calling, and other services to users around the world. Please read our Terms of Service so you understand what’s up with your use of '+appName+'. You agree to our Terms of Service (“Terms”) by installing, accessing, or using our apps, services, features, software, or website (together, “Services”).'}\n          </div>\n          <div className='dksd_item'>\n            {'NO ACCESS TO EMERGENCY SERVICES: There are important differences between '+appName+' and your mobile and fixed-line telephone and SMS services. Our Services do not provide access to emergency services or emergency services providers, including the police, fire departments, or hospitals, or otherwise connect to public safety answering points. You should ensure you can contact your relevant emergency services providers through a mobile, fixed-line telephone, or other service.'}\n          </div>\n        </div>\n        <div className='dksd_title'>\n          {'ABOUT OUR SERVICES'}\n        </div>\n        <div >\n          <div className='dksd_item'>\n            <span className='dksd_item_bold'>{'Registration.'}</span>{' You must register for our Services using accurate data, provide your current mobile phone number, and, if you change it, update this mobile phone number using our in-app change number feature. You agree to receive text messages and phone calls (from us or our third-party providers) with codes to register for our Services.'}\n          </div>\n          <div className='dksd_item'>\n            <span className='dksd_item_bold'>{'Address Book.'}</span>{' You provide us the phone numbers of '+appName+' users and your other contacts in your mobile phone address book on a regular basis. You confirm you are authorized to provide us such numbers to allow us to provide our Services.'}\n          </div>\n          <div className='dksd_item'>\n            <span className='dksd_item_bold'>{'Age.'}</span>{' You must be at least 13 years old to use our Services (or such greater age required in your country for you to be authorized to use our Services without parental approval). In addition to being of the minimum required age to use our Services under applicable law, if you are not old enough to have authority to agree to our Terms in your country, your parent or guardian must agree to our Terms on your behalf.'}\n          </div>\n          <div className='dksd_item'>\n            <span className='dksd_item_bold'>{'Devices and Software.'}</span>{' You must provide certain devices, software, and data connections to use our Services, which we otherwise do not supply. For as long as you use our Services, you consent to downloading and installing updates to our Services, including automatically.'}\n          </div>\n          <div className='dksd_item'>\n            <span className='dksd_item_bold'>{'Fees and Taxes.'}</span>{' You are responsible for all carrier data plan and other fees and taxes associated with your use of our Services. We may charge you for our Services, including applicable taxes. We may refuse or cancel orders. We do not provide refunds for our Services, except as required by law.'}\n          </div>                              \n        </div>\n        <div className='dksd_title'>\n          {'PRIVACY POLICY AND USER DATA'}\n        </div>\n        <div >\n          <div className='dksd_item'>\n            {''+appName+' cares about your privacy. '+appName+'’s Privacy Policy describes our information (including message) practices, including the types of information we receive and collect from you and how we use and share this information. You agree to our data practices, including the collection, use, processing, and sharing of your information as described in our Privacy Policy, as well as the transfer and processing of your information to the United States and other countries globally where we have or use facilities, service providers, or partners, regardless of where you use our Services. You acknowledge that the laws, regulations, and standards of the country in which your information is stored or processed may be different from those of your own country.'}\n          </div>                            \n        </div>\n        <div className='dksd_title'>\n          {'ACCEPTABLE USE OF OUR SERVICES'}\n        </div>\n        <div >\n          <div className='dksd_item'>\n            {'Our Terms and Policies. You must use our Services according to our Terms and posted policies. If we disable your account for a violation of our Terms, you will not create another account without our permission.'}\n          </div>                            \n          <div className='dksd_item'>\n            {'Legal and Acceptable Use. You must access and use our Services only for legal, authorized, and acceptable purposes. You will not use (or assist others in using) our Services in ways that: (a) violate, misappropriate, or infringe the rights of '+appName+', our users, or others, including privacy, publicity, intellectual property, or other proprietary rights; (b) are illegal, obscene, defamatory, threatening, intimidating, harassing, hateful, racially, or ethnically offensive, or instigate or encourage conduct that would be illegal, or otherwise inappropriate, including promoting violent crimes; (c) involve publishing falsehoods, misrepresentations, or misleading statements; (d) impersonate someone; (e) involve sending illegal or impermissible communications such as bulk messaging, auto-messaging, auto-dialing, and the like; or (f) involve any non-personal use of our Services unless otherwise authorized by us.'}\n          </div>                            \n          <div className='dksd_item'>\n            {'Harm to '+appName+' or Our Users. You must not (or assist others to) access, use, copy, adapt, modify, prepare derivative works based upon, distribute, license, sublicense, transfer, display, perform, or otherwise exploit our Services in impermissible or unauthorized manners, or in ways that burden, impair, or harm us, our Services, systems, our users, or others, including that you must not directly or through automated means: (a) reverse engineer, alter, modify, create derivative works from, decompile, or extract code from our Services; (b) send, store, or transmit viruses or other harmful computer code through or onto our Services; (c) gain or attempt to gain unauthorized access to our Services or systems; (d) interfere with or disrupt the integrity or performance of our Services; (e) create accounts for our Services through unauthorized or automated means; (f) collect the information of or about our users in any impermissible or unauthorized manner; (g) sell, resell, rent, or charge for our Services; or (h) distribute or make our Services available over a network where they could be used by multiple devices at the same time.'}\n          </div>  \n          <div className='dksd_item'>\n            {'Keeping Your Account Secure. You are responsible for keeping your device and your '+appName+' account safe and secure, and you must notify us promptly of any unauthorized use or security breach of your account or our Services.'}\n          </div>                                      \n        </div>\n        <div className='dksd_title'>\n          {'THIRD-PARTY SERVICES'}\n        </div>\n        <div >\n          <div className='dksd_item'>\n            {'Our Services may allow you to access, use, or interact with third-party websites, apps, content, and other products and services. For example, you may choose to use third-party data backup services (such as iCloud or Google Drive) that are integrated with our Services or interact with a share button on a third party’s website that enables you to send information to your '+appName+' contacts. Please note that when you use third-party services, their own terms and privacy policies will govern your use of those services.'}\n          </div>          \n        </div>\n        <div className='dksd_title'>\n          {'LICENSES'}\n        </div>\n        <div >\n          <div className='dksd_item'>\n            {'Your Rights. '+appName+' does not claim ownership of the information that you submit for your '+appName+' account or through our Services. You must have the necessary rights to such information that you submit for your '+appName+' account or through our Services and the right to grant the rights and licenses in our Terms.'}\n          </div>    \n          <div className='dksd_item'>\n            {''+appName+'’s Rights. We own all copyrights, trademarks, domains, logos, trade dress, trade secrets, patents, and other intellectual property rights associated with our Services. You may not use our copyrights, trademarks, domains, logos, trade dress, patents, and other intellectual property rights unless you have our express permission and except in accordance with our Brand Guidelines.'}\n          </div>\n          <div className='dksd_item'>\n            {'Your License to '+appName+'. In order to operate and provide our Services, you grant '+appName+' a worldwide, non-exclusive, royalty-free, sublicensable, and transferable license to use, reproduce, distribute, create derivative works of, display, and perform the information (including the content) that you upload, submit, store, send, or receive on or through our Services. The rights you grant in this license are for the limited purpose of operating and providing our Services (such as to allow us to display your profile picture and status message, transmit your messages, store your undelivered messages on our servers for up to 30 days as we try to deliver them, and otherwise as described in our Privacy Policy).'}\n          </div>\n          <div className='dksd_item'>\n            {''+appName+'’s License to You. We grant you a limited, revocable, non-exclusive, non-sublicensable, and non-transferable license to use our Services, subject to and in accordance with our Terms. This license is for the sole purpose of enabling you to use our Services, in the manner permitted by our Terms. No licenses or rights are granted to you by implication or otherwise, except for the licenses and rights expressly granted to you.'}\n          </div>\n          <div className='dksd_item'>\n            {'Your License to '+appName+'. In order to operate and provide our Services, you grant '+appName+' a worldwide, non-exclusive, royalty-free, sublicensable, and transferable license to use, reproduce, distribute, create derivative works of, display, and perform the information (including the content) that you upload, submit, store, send, or receive on or through our Services. The rights you grant in this license are for the limited purpose of operating and providing our Services (such as to allow us to display your profile picture and status message, transmit your messages, store your undelivered messages on our servers for up to 30 days as we try to deliver them, and otherwise as described in our Privacy Policy).'}\n          </div> \n          <div className='dksd_item'>\n            {''+appName+'’s License to You. We grant you a limited, revocable, non-exclusive, non-sublicensable, and non-transferable license to use our Services, subject to and in accordance with our Terms. This license is for the sole purpose of enabling you to use our Services, in the manner permitted by our Terms. No licenses or rights are granted to you by implication or otherwise, except for the licenses and rights expressly granted to you.'}\n          </div>                   \n        </div> \n        <div className='dksd_title'>\n          {'REPORTING THIRD-PARTY COPYRIGHT, TRADEMARK, AND OTHER INTELLECTUAL PROPERTY INFRINGEMENT'}\n        </div>  \n        <div >\n          <div className='dksd_item'>\n            {'To report claims of third-party copyright, trademark, or other intellectual property infringement, please visit our Intellectual Property Policy. We may terminate your '+appName+' account if you repeatedly infringe the intellectual property rights of others.'}\n          </div>          \n        </div>    \n        <div className='dksd_title'>\n          {'INDEMNIFICATION'}\n        </div>  \n        <div >\n          <div className='dksd_item'>\n            {'You agree to defend, indemnify, and hold harmless the '+appName+' Parties from and against all liabilities, damages, losses, and expenses of any kind (including reasonable legal fees and costs) relating to, arising out of, or in any way in connection with any of the following: (a) your access to or use of our Services, including information provided in connection therewith; (b) your breach or alleged breach of our Terms; or (c) any misrepresentation made by you. You will cooperate as fully as required by us in the defense or settlement of any Claim.'}\n          </div>          \n        </div>  \n        <div className='dksd_title'>\n          {'AVAILABILITY AND TERMINATION OF OUR SERVICES'}\n        </div>  \n        <div >\n          <div className='dksd_item'>\n            {'Availability of Our Services. Our Services may be interrupted, including for maintenance, repairs, upgrades, or network or equipment failures. We may discontinue some or all of our Services, including certain features and the support for certain devices and platforms, at any time. Events beyond our control may affect our Services, such as events in nature and other force majeure events.'}\n          </div>   \n          <div className='dksd_item'>\n            {'Termination. We may modify, suspend, or terminate your access to or use of our Services anytime for any reason, such as if you violate the letter or spirit of our Terms or create harm, risk, or possible legal exposure for us, our users, or others. The following provisions will survive any termination of your relationship with '+appName+': “Licenses,” “Disclaimers,” “Limitation of Liability,” “Indemnification,” “Dispute Resolution,” “Availability and Termination of our Services,” “Other,”.'}\n          </div>                 \n        </div>                 \n        <div className='dksd_config_title'>\n          {''+appName+' Privacy Policy'}\n        </div>  \n        <div >\n          <div className='dksd_item'>\n            <span className='dksd_item_bold'>{'Last updated:'}</span>{' 09/01/2020 (older versions)'}\n          </div>   \n          <div className='dksd_item'>\n            {'Respect for your privacy is coded into our DNA. Since we started '+appName+', we’ve aspired to build our Services with a set of strong privacy principles in mind.'}\n          </div>     \n          <div className='dksd_item'>\n            {''+appName+' provides messaging, Internet calling, and other services to users around the world. Our Privacy Policy helps explain our information (including message) practices. For example, we talk about what information we collect and how this affects you. We also explain the steps we take to protect your privacy – like building '+appName+' so delivered messages aren’t stored and giving you control over who you communicate with on our Services.'}\n          </div>\n          <div className='dksd_item'>\n            {'When we say “'+appName+',” “our,” “we,” or “us,” we’re talking about '+appName+'. This Privacy Policy (“Privacy Policy”) applies to all of our apps, services, features, software, and website (together, “Services”) unless specified otherwise.'}\n          </div>           \n          <div className='dksd_item'>\n            {'Please also read '+appName+' Terms Of Service (“Terms”), which describes the terms under which you use our Services.'}\n          </div>      \n        </div>  \n        <div className='dksd_title'>\n          {'INFORMATION WE COLLECT'}\n        </div> \n        <div >\n          <div className='dksd_item'>\n            {''+appName+' receives or collects information when we operate and provide our Services, including when you install, access, or use our Services.'}\n          </div>          \n        </div>\n        <div className='dksd_title'>\n          {'INFORMATION YOU PROVIDE'}\n        </div> \n        <div >\n          <li className='dksd_item'>\n            {'Your Account Information. You provide your mobile phone number to create a '+appName+' account. You provide us the phone numbers in your mobile address book on a regular basis, including those of both the users of our Services and your other contacts. You confirm you are authorized to provide us such numbers. You may also add other information to your account, such as a profile name, profile picture, and status message.'}\n          </li>\n          <li className='dksd_item'>\n            {'Your Messages. We do not retain your messages in the ordinary course of providing our Services to you. Once your messages (including your chats, photos, videos, voice messages, files, and share location information) are delivered, they are deleted from our servers. Your messages are stored on your own device. If a message cannot be delivered immediately (for example, if you are offline), we may keep it on our servers for up to 30 days as we try to deliver it. If a message is still undelivered after 30 days, we delete it. To improve performance and deliver media messages more efficiently, such as when many people are sharing a popular photo or video, we may retain that content on our servers for a longer period of time.'}\n          </li>\n          <li className='dksd_item'>\n            {'Your Connections. To help you organize how you communicate with others, we may create a favorites list of your contacts for you, and you can create, join, or get added to groups and broadcast lists, and such groups and lists get associated with your account information.'}\n          </li>\n          <li className='dksd_item'>\n            {'Customer Support. You may provide us with information related to your use of our Services, including copies of your messages, and how to contact you so we can provide you customer support. For example, you may send us an email with information relating to our app performance or other issues.'}\n          </li>                    \n        </div>  \n        <div className='dksd_title'>\n          {'AUTOMATICALLY COLLECTED INFORMATION'}\n        </div>       \n        <div >\n          <li className='dksd_item'>\n            {'Usage and Log Information. We collect service-related, diagnostic, and performance information. This includes information about your activity (such as how you use our Services, how you interact with others using our Services, and the like), log files, and diagnostic, crash, website, and performance logs and reports.'}\n          </li>\n          <li className='dksd_item'>\n            {'Transactional Information. If you pay for our Services, we may receive information and confirmations, such as payment receipts, including from app stores or other third parties processing your payment.'}\n          </li>\n          <li className='dksd_item'>\n            {'Device and Connection Information. We collect device-specific information when you install, access, or use our Services. This includes information such as hardware model, operating system information, browser information, IP address, mobile network information including phone number, and device identifiers. We collect device location information if you use our location features, such as when you choose to share your location with your contacts, view locations nearby or those others have shared with you, and the like, and for diagnostics and troubleshooting purposes such as if you are having trouble with our app’s location features.'}\n          </li>\n          <li className='dksd_item'>\n            {'Cookies. We use cookies to operate and provide our Services, including to provide our Services that are web-based, improve your experiences, understand how our Services are being used, and customize our Services. For example, we use cookies to provide '+appName+' for web and desktop and other web-based services. We may also use cookies to understand which of our FAQs are most popular and to show you relevant content related to our Services. Additionally, we may use cookies to remember your choices, such as your language preferences, and otherwise to customize our Services for you. Learn more about how we use cookies to provide you our Services.'}\n          </li>\n          <li className='dksd_item'>\n            {'Status Information. We collect information about your online and status message changes on our Services, such as whether you are online (your “online status”), when you last used our Services (your “last seen status”), and when you last updated your status message.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'THIRD-PARTY INFORMATION'}\n        </div> \n        <div >\n          <li className='dksd_item'>\n            {'Information Others Provide About You. We receive information other people provide us, which may include information about you. For example, when other users you know use our Services, they may provide your phone number from their mobile address book (just as you may provide theirs), or they may send you a message, send messages to groups to which you belong, or call you.'}\n          </li>\n          <li className='dksd_item'>\n            {'Third-Party Providers. We work with third-party providers to help us operate, provide, improve, understand, customize, support, and market our Services. For example, we work with companies to distribute our apps, provide our infrastructure, delivery, and other systems, supply map and places information, process payments, help us understand how people use our Services, and market our Services. These providers may provide us information about you in certain circumstances; for example, app stores may provide us reports to help us diagnose and fix service issues.'}\n          </li>\n          <li className='dksd_item'>\n            {'Third-Party Services. We allow you to use our Services in connection with third-party services. If you use our Services with such third-party services, we may receive information about you from them; for example, if you use the '+appName+' share button on a news service to share a news article with your '+appName+' contacts, groups, or broadcast lists on our Services, or if you choose to access our Services through a mobile carrier’s or device provider’s promotion of our Services. Please note that when you use third-party services, their own terms and privacy policies will govern your use of those services.'}\n          </li>\n        </div>   \n        <div className='dksd_title'>\n          {'HOW WE USE INFORMATION'}\n        </div> \n        <div >\n          <div className='dksd_item'>\n            {'We use all the information we have to help us operate, provide, improve, understand, customize, support, and market our Services.'}\n          </div>\n          <li className='dksd_item'>\n            {'Our Services. We operate and provide our Services, including providing customer support, and improving, fixing, and customizing our Services. We understand how people use our Services, and analyze and use the information we have to evaluate and improve our Services, research, develop, and test new services and features, and conduct troubleshooting activities. We also use your information to respond to you when you contact us. We use cookies to operate, provide, improve, understand, and customize our Services.'}\n          </li>\n          <li className='dksd_item'>\n            {'Safety and Security. We verify accounts and activity, and promote safety and security on and off our Services, such as by investigating suspicious activity or violations of our Terms, and to ensure our Services are being used legally.'}\n          </li>\n          <li className='dksd_item'>\n            {'No Third-Party Banner Ads. We do not allow third-party banner ads on '+appName+'. We have no intention to introduce them, but if we ever do, we will update this policy.'}\n          </li>\n          <li className='dksd_item'>\n            {'Commercial Messaging. We will allow you and third parties, like businesses, to communicate with each other using '+appName+', such as through order, transaction, and appointment information, delivery and shipping notifications, product and service updates, and marketing. For example, you may receive flight status information for upcoming travel, a receipt for something you purchased, or a notification when a delivery will be made. Messages you may receive containing marketing could include an offer for something that might interest you. We do not want you to have a spammy experience; as with all of your messages, you can manage these communications, and we will honor the choices you make.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'INFORMATION YOU AND WE SHARE'}\n        </div> \n        <div >\n          <div className='dksd_item'>\n            {'You share your information as you use and communicate through our Services, and we share your information to help us operate, provide, improve, understand, customize, support, and market our Services.'}\n          </div>\n          <li className='dksd_item'>\n            {'Account Information. Your phone number, profile name and photo, online status and status message, last seen status, and receipts may be available to anyone who uses our Services, although you can configure your Services settings to manage certain information available to other users.'}\n          </li>\n          <li className='dksd_item'>\n            {'Your Contacts and Others. Users with whom you communicate may store or reshare your information (including your phone number or messages) with others on and off our Services. You can use your Services settings and the block feature in our Services to manage the users of our Services with whom you communicate and certain information you share.'}\n          </li>\n          <li className='dksd_item'>\n            {'Third-Party Providers. We work with third-party providers to help us operate, provide, improve, understand, customize, support, and market our Services. When we share information with third-party providers, we require them to use your information in accordance with our instructions and terms or with express permission from you.'}\n          </li>\n          <li className='dksd_item'>\n            {'Third-Party Services. When you use third-party services that are integrated with our Services, they may receive information about what you share with them. For example, if you use a data backup service integrated with our Services (such as iCloud or Google Drive), they will receive information about what you share with them. If you interact with a third-party service linked through our Services, you may be providing information directly to such third party. Please note that when you use third-party services, their own terms and privacy policies will govern your use of those services.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'ASSIGNMENT, CHANGE OF CONTROL, AND TRANSFER'}\n        </div> \n        <div >\n          <div className='dksd_item'>\n            {'All of our rights and obligations under our Privacy Policy are freely assignable by us to any of our affiliates, in connection with a merger, acquisition, restructuring, or sale of assets, or by operation of law or otherwise, and we may transfer your information to any of our affiliates, successor entities, or new owner.'}\n          </div>\n        </div>\n        <div className='dksd_title'>\n          {'MANAGING YOUR INFORMATION'}\n        </div> \n        <div >\n          <div className='dksd_item'>\n            {'If you would like to manage, change, limit, or delete your information, we allow you to do that through the following tools:'}\n          </div>\n          <li className='dksd_item'>\n            {'Services Settings. You can change your Services settings to manage certain information available to other users. You can manage your contacts, groups, and broadcast lists, or use our block feature to manage the users with whom you communicate.'}\n          </li>\n          <li className='dksd_item'>\n            {'Changing Your Mobile Phone Number, Profile Name and Picture, and Status Message. You must change your mobile phone number using our in-app change number feature and transfer your account to your new mobile phone number. You can also change your profile name, profile picture, and status message at any time.'}\n          </li>\n          <li className='dksd_item'>\n            {'Deleting Your '+appName+' Account. You may delete your '+appName+' account at any time (including if you want to revoke your consent to our use of your information) using our in-app delete my account feature. When you delete your '+appName+' account, your undelivered messages are deleted from our servers as well as any of your other information we no longer need to operate and provide our Services. Be mindful that if you only delete our Services from your device without using our in-app delete my account feature, your information may be stored with us for a longer period. Please remember that when you delete your account, it does not affect the information other users have relating to you, such as their copy of the messages you sent them.'}\n          </li>\n        </div>\n        <div className='dksd_title'>\n          {'LAW AND PROTECTION'}\n        </div> \n        <div >\n          <div className='dksd_item'>\n            {'We may collect, use, preserve, and share your information if we have a good-faith belief that it is reasonably necessary to: (a) respond pursuant to applicable law or regulations, to legal process, or to government requests; (b) enforce our Terms and any other applicable terms and policies, including for investigations of potential violations; (c) detect, investigate, prevent, and address fraud and other illegal activity, security, or technical issues; or (d) protect the rights, property, and safety of our users, '+appName+', the Facebook family of companies, or others.'}\n          </div>\n        </div>\n        <div className='dksd_title'>\n          {'UPDATES TO OUR POLICY'}\n        </div> \n        <div >\n          <div className='dksd_item'>\n            {'We may amend or update our Privacy Policy. We will provide you notice of amendments to this Privacy Policy, as appropriate, and update the “Last Modified” date at the top of this Privacy Policy. Your continued use of our Services confirms your acceptance of our Privacy Policy, as amended. If you do not agree to our Privacy Policy, as amended, you must stop using our Services. Please review our Privacy Policy from time to time.'}\n          </div>\n        </div>\n        <div className='dksd_title'>\n          {'CONTACT US'}\n        </div> \n        <div >\n          <div className='dksd_item'>\n            {'If you have questions about our Privacy Policy, please contact us.'}\n          </div>\n          <div className='dksd_item'>\n            {''+appName+' Privacy Policy'}\n          </div>\n          <div className='dksd_item'>\n            {'Room 712, 7th Floor, Office Building,'}\n          </div>\n          <div className='dksd_item'>\n            {'362 Pho Hue St., Pho Hue Ward,'}\n          </div>\n          <div className='dksd_item'>\n            {'Hai Ba Trung District, Hanoi City'}\n          </div>\n        </div>\n      </div>  \n    </div>    \n  </div>\n</div>\nexport const renderFoot = (vm) => <div />\nexport const renderComponent = (vm) => <div>\n  {Parser(adminCSS)}\n  {vm.renderBody()}\n  {vm.renderFoot()}\n</div>\n","import React from 'react'\nimport Parser from 'html-react-parser'\nglobal.isclient && require('./index.css')\nconst {rxconfig} = global.rootRequire('classes/ulti')\n\nconst SelectCustom = global.rootRequire('components/shares/rxSelectCustom').default\n\nlet adminCSS = '<style>.main-container{ width: 100% !important; padding: 0px !important; } .homenav, .footer{ display: none !important; }</style>'\nlet logo\nif(rxconfig.theme==='galo'){\n  logo = 'GAlo'\n}else{\n  logo = 'NetAlo'\n}\nexport const renderHead = (vm) => \n\n<div>\n  <div className='zlogin_logo'>{logo}</div>\n  <div className='zlogin_title'>Đăng nhập bằng tài khoản {logo}</div>\n</div>\n\nexport const renderBody = (vm) => <div>\n  <div className='zlogin_form'>\n    <div className='zlogin_head'>\n      <div className='zlogin_tab zlogin_tab-active'>Với số điện thoại</div>\n    </div>\n    <div className='zlogin_body'>\n      <div>{{\n        0: <div>\n          <div className='zlogin_avatar' />\n\n          <div className='zlogin_phone zformline'>\n            <div>    \n              <SelectCustom\n                defaultValue={vm.state.countryCode || '84'}\n                data={vm.state.listCountryCode || []}\n                placeholder='Please select the sport'\n                changeCountryCode={(value) => vm.changeCountryCode(value)}\n              />             \n            </div>\n          </div> \n\n          <div className='zlogin_phone zformline'>\n            <div className='zinput_icon zinput_icon-phone' />\n            <div className='zinput_input zinput_input-lessleft'>  \n              <span className='zinput_countrycode'>{'+'+vm.state.countryCode}</span>  \n              <input maxLength='12' placeholder='Nhập số điện thoại' autoComplete='off' value={vm.state.inputPhone} onChange={(e) => vm.updateInput('inputPhone', e)} />\n            </div>\n          </div> \n\n          <div className='zlogin_errMess'>{vm.state.errMess}</div>\n          <button className='zlogin_btnlogin' tabIndex='0' onClick={vm.onClickLoginViaOTP.bind(vm)}>Đăng nhập với số điện thoại</button>\n        </div>,\n        1: <div>\n          <div className='zlogin_avatar' />\n          <div className='zlogin_phone zformline'>\n            <div className='zinput_icon zinput_icon-phone' />\n            <div className='zinput_input zinput_input-lessleft'><input className ='zinput_phoneOTP' maxLength='6' placeholder='Nhập OTP' autoComplete='off' value={vm.state.inputPhoneOTP} onChange={(e) => vm.updateInput('inputPhoneOTP', e)} /></div>\n          </div>\n          <div className='zlogin_errMess'>{vm.state.errMess}</div>\n          <button className='zlogin_btnlogin' tabIndex='0' onClick={vm.onClickLoginViaOTPConfirm.bind(vm)}>Xác nhận OTP</button>\n        </div>\n      }[vm.state.flagStep]}</div>\n    </div>\n  </div>\n</div>\n\nexport const renderFoot = (vm) => <div className='zlogin_foot'>\n  <div className='zlogin_foottext' />{{\n    'default':<svg className='bg-svg' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 810' preserveAspectRatio='xMinYMin slice'>\n      <path id=\"svg_1\" d=\"m592.66,0c-15,64.092 -30.7,125.285 -46.598,183.777c87.994,141.783 202.286,367.155 273.58,625.723l419.672,0c-54.796,-215.773 -156.19,-519.436 -336.677,-809.5l-309.977,0z\" fill=\"#fde4d9\"/>\n      <path id=\"svg_2\" d=\"m545.962,183.777c-53.796,196.576 -111.592,361.156 -163.49,490.74c11.7,44.494 22.8,89.49 33.1,134.883l404.07,0c-71.294,-258.468 -185.586,-483.84 -273.68,-625.623z\" fill=\"#fff6f2\"/>\n      <path id=\"svg_3\" d=\"m153.89,-1c74.094,180.678 161.088,417.448 228.483,674.517c67.297,-168.18 144.69,-395.052 210.187,-674.517l-438.67,0z\" fill=\"#f9ede5\"/>\n      <path id=\"svg_4\" d=\"m153.89,0l-153.89,0l0,809.5l415.57,0c-70.093,-308.562 -174.686,-597.626 -261.68,-809.5z\" fill=\"#fff6f2\"/>\n      <path id=\"svg_5\" d=\"m1144.22,501.538c52.596,-134.583 101.492,-290.964 134.09,-463.343c1.2,-6.1 2.3,-12.298 3.4,-18.497c0,-0.2 0.1,-0.4 0.1,-0.6c1.1,-6.3 2.3,-12.7 3.4,-19.098l-382.674,0c105.293,169.28 183.688,343.158 241.684,501.638l0,-0.1z\" fill=\"#f9ede5\"/>\n      <path id=\"svg_6\" d=\"m1285.31,0c-2.2,12.798 -4.5,25.597 -6.9,38.195c43.097,48.195 101.193,120.785 161.59,218.973l0,-257.168l-154.69,0z\" fill=\"#fdf2ea\"/>\n      <path id=\"svg_7\" d=\"m1278.31,38.196c-32.5,171.678 -81.09,327.36 -133.49,461.642l0,3.8c41,112.286 71.59,216.573 94.29,305.962l200.59,0.4l0,-553.232c-60.3,-97.988 -118.29,-170.48 -161.39,-218.573l0,0.001z\" fill=\"#fff6f2\"/>\n    </svg>,\n    'galo':<svg className=\"bg-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 810\" preserveAspectRatio=\"xMinYMin slice\">\n      <path id=\"svg_1\" d=\"m592.66,0c-15,64.092 -30.7,125.285 -46.598,183.777c87.994,141.783 202.286,367.155 273.58,625.723l419.672,0c-54.796,-215.773 -156.19,-519.436 -336.677,-809.5l-309.977,0z\" fill=\"#5bccc0\"></path>\n      <path id=\"svg_2\" d=\"m545.962,183.777c-53.796,196.576 -111.592,361.156 -163.49,490.74c11.7,44.494 22.8,89.49 33.1,134.883l404.07,0c-71.294,-258.468 -185.586,-483.84 -273.68,-625.623z\" fill=\"#aef9f1\"></path>\n      <path id=\"svg_3\" d=\"m153.89,-1c74.094,180.678 161.088,417.448 228.483,674.517c67.297,-168.18 144.69,-395.052 210.187,-674.517l-438.67,0z\" fill=\"#7cdcd2\"></path>\n      <path id=\"svg_4\" d=\"m153.89,0l-153.89,0l0,809.5l415.57,0c-70.093,-308.562 -174.686,-597.626 -261.68,-809.5z\" fill=\"#aef9f1\"></path>\n      <path id=\"svg_5\" d=\"m1144.22,501.538c52.596,-134.583 101.492,-290.964 134.09,-463.343c1.2,-6.1 2.3,-12.298 3.4,-18.497c0,-0.2 0.1,-0.4 0.1,-0.6c1.1,-6.3 2.3,-12.7 3.4,-19.098l-382.674,0c105.293,169.28 183.688,343.158 241.684,501.638l0,-0.1z\" fill=\"#7cdcd2\"></path>\n      <path id=\"svg_6\" d=\"m1285.31,0c-2.2,12.798 -4.5,25.597 -6.9,38.195c43.097,48.195 101.193,120.785 161.59,218.973l0,-257.168l-154.69,0z\" fill=\"#fdf2ea\"></path>\n      <path id=\"svg_7\" d=\"m1278.31,38.196c-32.5,171.678 -81.09,327.36 -133.49,461.642l0,3.8c41,112.286 71.59,216.573 94.29,305.962l200.59,0.4l0,-553.232c-60.3,-97.988 -118.29,-170.48 -161.39,-218.573l0,0.001z\" fill=\"#aef9f1\"></path>\n    </svg>  \n  }[rxconfig.theme]}  \n</div>\n\nexport const renderComponent = (vm) => \nvm.state.loading ?\n<div id =\"loading\"><div></div><div></div></div>\n:\n<div className='zlogin'>\n  {Parser(adminCSS)}\n  {vm.renderHead()}\n  {vm.renderBody()}\n  {vm.renderFoot()}\n</div>\n","import React from 'react'\nglobal.isclient && require('./rxLoading.css')\n\nfunction Loading() {\n    return (\n        <div className='background'>\n            <div className=\"loader\"></div>\n        </div>\n    )\n}\nexport default Loading\n","import React from 'react'\nimport Parser from 'html-react-parser'\nimport { Link } from 'react-router-dom'\n\nglobal.isclient && require('./index.css')\n\nlet adminCSS = '<style>.main-container{ width: 100% !important; padding: 0px !important; } .homenav, .footer{ display: none !important; }</style>'\nlet contactlist = []\n\nexport const renderBody = (vm) => <div>\n  <div className='zchat_left'>\n    <div className='zleft_menu'>\n      <Link className='zmenu_message' to='/chat'>\n        <i className='zmenu_icon icon-speech' />\n      </Link>\n      <Link className='zmenu_call zmenu-active' to='/call'>\n        <i className='zmenu_icon icon-phone' />\n      </Link>\n      <Link className='zmenu_contact' to='/contact'>\n        <i className='zmenu_icon icon-people' />\n      </Link>\n      <Link className='zmenu_config' to='/config'>\n        <i className='zmenu_icon icon-grid' />\n      </Link>\n    </div>\n    <div className='zleft_contain'>\n      <div className='zleft_searchwrap'>\n        <div className='zleft_search'>Search contact</div>\n      </div>\n      <div className='zleft_addcontact'>+ Add Contact</div>\n      <div className='zleft_contactlist'>\n        {contactlist.map((ele, index) => <div className='zcontactitem clearfix' key={index}>\n          <div className='zcontact_avatar' />\n          <div className='zcontact_maininfo'>\n            <div className='zcontact_name'>{ele.name}</div>\n            <div className='zcontact_status'>{ele.status}</div>\n          </div>\n        </div>)}\n      </div>\n    </div>\n  </div>\n  <div className='zchat_right'>\n    <div className='zright_contain'>\n      Chatting\n    </div>\n  </div>\n</div>\n\nexport const renderFoot = (vm) => <div />\n\nexport const renderComponent = (vm) => <div>\n  {Parser(adminCSS)}\n  {vm.renderBody()}\n  {vm.renderFoot()}\n</div>\n","import React from 'react'\n\n/* global translate*/\nlet zget = global.rxu.get\nconst { rxgetLocal } = global.rootRequire('classes/request')\n\nexport const renderZCall = (vm) => {\n    let usersinfo = zget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users') || {}\n    let callId = zget(zget(vm.state, 'objsCalling.callee_uins', []).filter((id) => (id !== zget(vm.props, 'netaauth.user.id'))), [0])\n    let user = zget(usersinfo, [callId], {})\n    let uname = zget(usersinfo, [callId, 'full_name'])\n    return (!!vm.props.obj.flagCalling && <div className='zchat_callscreen'>\n        <div className='zcall_container'>\n            <video id='localVideo' autoPlay muted width='200' height='200' />\n            <video id='remoteVideo' autoPlay width='200' height='200' />\n            <div className='zcall_avatar'>\n                {!!user.profile_url ? <img src={`${global.rxu.config.base_api_neta}/avatar/${callId}`} onError={(e) => global.imgError(e)} className='zcall_avatarimg 2' alt=' ' />\n                    : (\n                        <img className='zcall_avatarimg 2' alt='avadefault' src={'./images/default/static/avadefault.svg'} />\n                    )}\n            </div>\n            <div className='zcall_info'>{uname}</div>\n            <div className='zcall_content'>\n                {translate('Contacting...')}\n            </div>\n            <div className=' zcall_buttons'>\n                {\n                    (vm.props.callType === 1 || vm.props.callType === 2) ?\n                        (<div className='zcall_group_button'>\n                            <div className='zcall_button icon-microphone ' />\n                            <div className='zcall_button icon-volume-2' />\n                            <div onClick={vm.onClickStopCall.bind(vm)} className='zcall_button' >\n                                <img className='icon40 zcall_cancel' alt='' src={'./images/default/icons/cancelcall.png'} />\n                            </div>\n                        </div>)\n                        :\n                        (\n                            <div className='zcall_group_2button'>\n                                <div onClick={vm.onClickStopCall.bind(vm)} className='zcall_button' >\n                                    <img className='icon40 zcall_cancel' alt='' src={'./images/default/icons/cancelcall.png'} />\n                                </div>\n                                <div onClick={vm.onClickAnswerCall.bind(vm)} className='zcall_button' >\n                                    <img className='icon40 zcall_answer' alt='' src={'./images/default/icons/answercall.png'} />\n                                </div>\n                                {\n                                    !vm.props.flagTurnOffSoundCall ?\n                                        (<audio controls autoPlay hidden loop>\n                                            <source src='./sounds/soundcallmess.mp3' type='audio/mpeg' />\n                                        </audio>) :\n                                        (null)\n                                }\n                            </div>\n                        )\n                }\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport const renderComponent = (vm) => <div>\n    {vm.renderZCall()}\n</div>","/*global translate*/  \nimport React from 'react'\nimport Parser from 'html-react-parser'\nimport ContentEditable from 'react-contenteditable'\n\nconst RxSelectIcons = global.rootRequire('components/shares/rxSelectIcons').default\nconst RxUploadFile = global.rootRequire('components/shares/rxUploadFile').default\nconst RxAudioRecord = global.rootRequire('components/shares/rxAudioRecord').default\nconst RxTagName = global.rootRequire('components/shares/rxTagName').default\n\nconst { rxaget } = global.rootRequire('classes/ulti')\nconst { checkNameUser } = global.rootRequire('classes/chat')\n\nglobal.isclient && require('./index.css')\nexport const renderBody = (vm) => <div id=\"zchat_footer\"\n  style={{display:vm.state.isBlocked?\"none\":\"block\"}}\n  className={(vm.state.tabmore.status === true) ? 'zchat_footer zchat_footer_padding' : 'zchat_footer'}>\n  {(vm.state.typing) && <div className='zmessage_typing'>{vm.state.sender_typing + ' ' + translate('is typing') + ' ...'}</div>}\n  <div id='menu-footer'> \n    <div className={'menu-message-box'}>\n      {/*<div className='menu-option-footer' onClick={e => vm.chooseOptionFooter(e, 'copy')}>{translate('Copy')}</div>\n      <div className='menu-option-footer' onClick={e => vm.chooseOptionFooter(e, 'cut')}>{translate('Cut')}</div>*/}\n      <div className='menu-option-footer' onClick={e => vm.chooseOptionFooter(e, 'paste')}>{translate('Paste')}</div>\n    </div>\n  </div>\n\n  {(rxaget(vm.state, 'mess_selected.message_id', '') && [1, 2].indexOf(vm.state.type_option) !== -1) && <div className='zchat_footer-box'>\n    <div className='zmessage_option'>\n    </div>\n    <div className='zchat_box'>\n      <div className='zchat_box'>\n        <div className='zmessage_inputbox'>\n          <div className='zchat_footer-reply'>\n            <div className='zchat_reply_namesender'> {checkNameUser(rxaget(vm.users, rxaget(vm.state, 'mess_selected.sender_uin', ''), {})) || ''} </div>\n            <div className='zchat_footer_reply_message_text '> {Parser(vm.parseMessage(rxaget(vm.state, 'mess_selected', {})))} </div>            \n          </div>\n        </div>\n        <div className='zchat_footer-close' onClick={e => vm.closeReplyMessage()}>\n          <img alt='icon-close' src={'./images/default/icons/icon-close.png'} />\n        </div>\n      </div>\n    </div>\n  </div>}\n\n  <div className='zchat_footer-box'>\n    <div className='zmessage_option'>\n      <div className='zfooter_btn'>\n        <RxUploadFile \n          group_id = {vm.state.group_id}\n          userid={vm.userid}\n          handleMessage={vm.props.handleMessage} \n          token={vm.token} \n          callback={(result, type) => vm.uploadFile(result, type)} \n          handleDragOut={vm.props.handleDragOut}\n        />\n      </div>\n      <div className='zfooter_btn'><RxAudioRecord onClick={(result) => { vm.clickRecord(result) }}  group_id={vm.state.group_id} token={vm.token} callback={(result, type) => { vm.uploadFile(result, type) }} /></div>\n      <div className='zfooter_btn'><RxSelectIcons onClick={(result, type) => { vm.addEmoji(result, type) }} /></div>\n    </div>    \n    <div className='zchat_box' onMouseDown={(e) => vm.onClickMouseRight(e)}>\n      <div className='zmessage_inputbox'>\n        <div className='chat-wrapper'>\n          <div className='message-wrapper'>  \n            <div className ={(vm.state.displayTagNameBox === true) && (vm.state.groupsTemp.length > 0) ? 'zmess-box_tagName' : 'zmess-box_tagName_hiden'}  >\n              <RxTagName  groupsTemp={vm.state.groupsTemp } tagNameSelect={vm.state.tagNameSelect} onClick={(result) => { vm.tagName_SelectUser(result) }}/>\n            </div>  \n            {(vm.state.imageTmp && vm.state.imageTmp.base64) && <div className='load-image-footer'>\n              <div className='image-copy-footer'>\n                <img src={vm.state.imageTmp['base64']} alt='default' className='load-image-footer' />\n                <div className='image_footer-close' onClick={e => vm.closeImageFooterLoader()}>\n                  <img alt='icon-close' src={'./images/default/icons/icon-close.png'} />\n                </div>\n              </div>\n            </div>}\n            {/*(vm.state.imageTmp && vm.state.imageTmp.base64) && <div className='image_footer-close' onClick={e => vm.closeImageFooterLoader()}>\n              <img alt='icon-close' src={'./images/default/icons/icon-close.svg'} />\n            </div>*/}\n\n            <ContentEditable\n              html={vm.state.mess}\n              className='message-text'\n              id='zmess-box'\n              data-placeholder={translate('Write a message')}\n              onKeyPress={vm.disableNewlines}\n              onPaste={vm.pasteAsPlainText}\n              onChange={vm.handleContentEditable}\n              onDrop={vm.disableDrop}\n              \n            />\n\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className='zmessage_like'>\n      <div className='zfooter_btn'><img src={'./images/default/icons/likeicon.svg'} alt='likeicon' className='icons-btn icon32 filter_img_class' onClick={e => vm.sendLike()} /></div>\n    </div>\n  </div>\n  <div></div>\n</div>\n\nexport const renderComponent = (vm) => <div>\n  {([1,2,3].indexOf(vm.state.isBlocked) !== -1) &&\n    <div id=\"zchat_footer\"      \n      className={(vm.state.tabmore.status === true) ? 'zchat_footer zchat_footer_padding' : 'zchat_footer'}>\n      <div className='blocked_chat'>\n        <span>{(vm.state.isBlocked === 1 || vm.state.isBlocked === 3)? translate('This person has been blocked, cannot make calls or send messages'):\n        translate('Currently, you cannot make contact to this person')} </span>\n      </div>\n      {(vm.state.isBlocked === 1 || vm.state.isBlocked === 3)&&<div className='blocked_chat'>\n        <span className=\"newgroup-create-btn\"\n        onClick={ ()=> { vm.setState({ displayAskBlock: true })}}\n        >{translate('Unblock contact')}</span>\n      </div>}\n    </div>}\n  <div className={vm.state.displayAskBlock ? 'leaveGroup_rectangle' : 'leaveGroup_rectangle_hiden'}>\n    <div className='leaveGroup_rectangle_2'>\n      <div className='leaveGroup_rectangle_2_1'>\n        <div className='leaveGroup_title'> {translate('Unblock contact')}</div>\n        <div className='leaveGroup_body'>\n          {translate('Are you sure you want to unblock this contact')}</div>\n        <div className='leaveGroup_btnPlace'>\n          <div className='leaveGroup_cancelBtn' onClick={e => { vm.setState({ displayAskBlock: false }) }} >{translate('Cancel')}</div>\n          <div className='leaveGroup_okBtn' onClick={e => vm.onClickBlockContact()}>{translate('Accept')}</div>\n        </div>\n      </div>\n    </div>\n  </div>  \n  {vm.renderBody()}\n</div>","/* global translate */ \nimport React from 'react' \n\n// const RxModalEdit = global.rootRequire('components/shares/rxModalEdit').default\nconst RxSearchBox = global.rootRequire('components/shares/rxSearchBox').default\nconst { rxaget, autoConvertTime, rxChangeSlug, stringToColour } = global.rootRequire('classes/ulti')\nconst { parseMessageDesc } = global.rootRequire('classes/chat')\nconst RxModalMouseRightChat = global.rootRequire('components/shares/rxModalMouseRightChat').default\nconst RxManageGroup = global.rootRequire('components/shares/RxManageGroup').default\n\nglobal.isclient && require('./index.css')\n\nexport const renderBody = (vm) => {\n  // vm.state.groupsNChatCreate.sort(vm.compareContact)\n  // vm.state.groupsNChat.sort(vm.compareContact)\n  const linkava = global.rxu.config.get_avatar\n  return (\n    <div className='zleft_contain'>\n      {vm.state.groupsSearchBoxClickStatus === false && vm.state.searchValue.length === 0 ?\n      <div className='zleft_searchwrap'>\n        <div className='icon_basic_search_area'>\n          <img className='icon_basic_search filter_img_class'  src={'./images/default/icons/search-active.svg'} alt=''/>\n        </div>\n\n        <input type='search' maxLength='30' placeholder={translate('Search')} className={rxaget(vm.props, 'themeBackgroudValue') === 'darkTheme' ? 'zleft_search_place darkThemeInput':'zleft_search_place lightThemeInput'}  /*onChange={e => { vm.onChangeSearch(e) }}*/ onClick={e => {vm.groupsSearchBoxClick()}} onDrop={vm.disableDrop}></input>\n\n        <div className='dropdown'>\n          <div className='zleft_edit'>\n            <img className='icon32 filter_img_class' src={'./images/default/icons/edit.svg'} alt=''/>\n            <img className='icon32_white' src={'./images/default/icons/edit40x40.svg'} alt=''/>\n          </div>\n          { <div className='dropdown-content'>\n              <div className='rectangle_1827'>\n                <div >\n                  <img  className='filter_img_class' src={'./images/default/icons/icon-basic-new-friend_group.svg'} alt=''/>\n                  <span className='new_chat' onClick={e => { vm.createNewChatGroup() }} >\n                    {translate('New Group Chat')}\n                  </span>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n\n      </div>:\n      <RxSearchBox \n        searchBoxvalue = {(clickStatus,searchValue)=>{vm.getSearchBoxvalue(clickStatus,searchValue)}}\n        pageActive = {'chatPage'}        \n        searchBox_chooseGroup = {(group)=>{vm.searchBox_chooseGroup(group)}}\n        createNewChatGroup = {() => vm.createNewChatGroup()}        \n        chooseContact = {()=>vm.chooseContact()}\n        groupsSearchBoxClickStatus ={vm.state.groupsSearchBoxClickStatus}\n        groups = {vm.state.groups}\n        groupsNChatOrigin = {vm.state.groupsNChatOrigin}\n      />\n\n      }\n      \n      {vm.state.groupsSearchBoxClickStatus === false && vm.state.searchValue.length === 0 && \n      <div className='zleft_contactlist' id='zgroup_list' onScroll={vm.scrollGroupsChat}>\n        <div>\n          { vm.state.groupsDisplay.length > 0 ? (\n              vm.state.groupsDisplay.map((ele, index) =>{\n                return(<div className={(ele.group_id === vm.state.group_id) ? 'zgroupitem active clearfix' : 'zgroupitem clearfix'} key={index} onClick={e => { vm.chooseGroup(ele) }} onContextMenu={e => {vm.onRightClickGroup(e, ele)}}>             \n                  <div className='zgroup_avatar'>                      \n                    {ele.avatar_url \n                      ? \n                      <img src={global.rxu.config.get_static + ele.avatar_url} alt='avatar_url' className='ava-group images-static'\n                      onError={(e) => { e.target.style.display = 'none' }} /> \n                      :\n                      (vm.users[ele.partner_id] && vm.users[ele.partner_id]['profile_url'] \n                        ? <img src={`${global.rxu.config.cdn_endpoint}` + vm.users[ele.partner_id]['profile_url']} alt='profile_url' data-id={'userava' + ele.partner_id} className='ava-usergroup images-static' \n                        onError={(e) => {e.target.onerror = null; e.target.src = `${global.rxu.config.get_static}` + vm.users[ele.partner_id]['profile_url'] }} /> \n                         : vm.checkImage[linkava + ele.partner_id] && <img src={vm.checkImage[linkava + ele.partner_id]['link']} alt='linkava' className='ava-usergroup images-static' onError={(e) => { e.target.style.display = 'none' }} />\n                      )\n                    }\n                    {\n                      !(ele.avatar_url || (vm.users[ele.partner_id] && vm.users[ele.partner_id]['profile_url']) )\n                      &&<span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + rxaget(ele, 'group_id', '').slice(7,8) + rxaget(ele, 'group_fullname', '').slice(0, 1))}, #FFFFFF)` }}>\n                        {rxChangeSlug(rxaget(ele, 'group_fullname', ''), true).slice(0, 2).toUpperCase()}\n                      </span>  \n                    }\n                    \n\n                  </div>                \n                  \n                  <div className='zgroup_maininfo'>                                  \n                    <div className={vm.state.statusInput===''?'zgroup_name':'zgroup_name_hiden'}>\n                      <div className='zgroup_name_info'>{rxaget(ele, 'group_fullname', '')}</div>\n                      {vm.checkDisableNoti(ele.group_id )&&<img className ='zgroup_noti filter_img_class' src='./images/default/icons/Mask-Group-10.svg' alt='' />}\n                    </div>\n                    \n                    <div className={vm.state.statusInput===''?'zgroup_desc':'zgroup_desc_hiden'}>\n                    \n                      <div className='zgroup_messageDesc'>{parseMessageDesc(rxaget(ele, 'last_message', {}), vm.users, vm.userid)} </div>\n                      <div className = 'zgroup_icon-place'>\n                        {vm.checkGroupSeen(ele) ? <span className='zgroup_count_unread'>{ (rxaget(ele, 'count_unread', 0) > 0) ? rxaget(ele, 'count_unread', 0) : rxaget(ele, 'unread_cnt', 0)}</span> : <span></span>}  \n                        {vm.checkGroupsPinned_uins(ele.pinned_uins) && <img className ='pin-group-icon' src='./images/default/icons/pin-group.svg' alt='' />}\n                      </div>                    \n                    </div>\n                    \n                    <div className={vm.state.statusInput===''?'zgroup_status':'zgroup_status_hiden'}>{ele.status}</div>\n                    <div className={vm.state.statusInput===''?'zgroup_time':'zgroup_time_hiden'}>\n                      <span className='zgroup_time_checked'>\n                        {vm.checkGroupSeen(ele) ? <img className ='filter_img_class' src={'./images/default/static/icon-checked.svg'} alt='' /> : ''} \n                      </span>\n                      <span className='zgroup_time_last'>\n                        {autoConvertTime(rxaget(ele, 'last_message.created_at', '')) || autoConvertTime(rxaget(ele, 'created_at', ''))}\n                      </span>\n                    </div>\n                    <div className='divider_area'></div>\n                  </div>\n                </div>)\n              })\n            ) : (\n              <div className={vm.state.statusInput===''?'zgroup-emty':'zgroup-emty_hiden'}>\n                <img className='icon176x80 filter_img_class' src={'./images/default/icons/backgroundchat.svg'}alt=''/>\n                <div className='zgroup-emty_text' >\n                  {translate('You have not had any chat yet')} \n                </div>\n              </div>\n            )\n          }\n        </div>\n        <div id='context_menu-group'>\n          {vm.state.group_id !== '' && (\n            <div className={'Rectangle-1773'/*vm.checkTypeChooseGroup() === 3 ? 'context_menu-group-box' : 'context_menu-group-box_hiden'*/}>\n             \n              <div className='group-menu_item border-bottom'>\n                <div className ='group-item-head'>\n                  <img className='group_img_item filter_img_class' src={'./images/default/icons/Group 10@3x.svg'}alt=''/>\n                </div>\n                <div className='group-item-info' onClick={e => vm.onClickShowPopup_ManageGroup()}>\n                  {vm.state.groupChooseItem_selected.type !== 3 ? translate('Manage group') : translate('View profile')}\n                </div>\n              </div>\n              \n              <div className='group-menu_item border-bottom' onClick={e => vm.groupChooseItem(e, 'Mark as read')}>\n                <div className ='group-item-head'>\n                  <img className='group_img_item filter_img_class' src={'./images/default/icons/icon-chat-readed.svg'}alt=''/>\n                </div>\n                <div className='group-item-info'>{translate('Mark as read')}</div>\n              </div>\n\n\n              <div className={vm.state.notificationStatus === true ?'group-menu_item border-bottom':'group-menu_item_hiden'} onClick={e => vm.groupChooseItem(e, 'Turn off notifications')}>\n                <div className ='group-item-head'>\n                  <img className='group_img_item group_img_item_head filter_img_class' src={(!vm.state.notificationStatus) ? './images/default/icons/icon-unnotifi.svg' : './images/default/icons/icon-notifi.svg'} alt=''/>\n                </div>\n                <div className='group-item-info'>{vm.checkDisableNoti(vm.state.groupChooseItem_selected.group_id) === true ? translate('Turn on notifications') : translate('Turn off notifications')}</div>\n              </div>\n\n              <div className='group-menu_item border-bottom' onClick={e => vm.groupChooseItem(e, 'Pin a conversation')}>\n                <div className ='group-item-head'>\n                  <img className='group_img_item group_img_item_head filter_img_class' src={(!vm.checkGroupsPinned_uins(vm.state.groupChooseItem_selected.pinned_uins)) ? './images/default/icons/icon-pin.svg' : './images/default/icons/icon-unpin.svg'} alt=''/>\n                </div>\n                <div className='group-item-info'>{vm.checkGroupsPinned_uins(vm.state.groupChooseItem_selected.pinned_uins)=== false ? translate('Pin a conversation') : translate('Unpin a conversation')}</div>\n              </div>\n\n              {/* <div className='group-menu_item border-bottom' onClick={e => vm.groupChooseItem(e, 'Hide a conversation')}>\n                <div className ='group-item-head'>\n                  <img className='group_img_item filter_img_class' src={'./images/default/icons/icon-hide-chat.svg'}alt=''/>\n                </div>\n                <div className='group-item-info'>{translate('Hide a conversation')}</div>\n                <div className='group-item-footer'>\n                  <img className='group_img_item filter_img_class' src={'./images/default/icons/icon-unhide-chat.svg'}alt=''/>\n                </div>\n              </div> */}\n\n              <div className='group-menu_item border-bottom'>\n                <div className ='group-item-head'>\n                  <img className='group_img_item filter_img_class' src={(vm.state.groupChooseItem_selected.type !== 3) ? './images/default/icons/ic_reply.svg' : './images/default/icons/icon-delete-chat.svg'}alt=''/>\n                </div>\n                <div className='group-item-info' onClick={e => vm.leaveGroupBtnClick()}>\n                  {(vm.state.groupChooseItem_selected.type !== 3) ? translate('Leave group') : translate('Delete Conversation') }\n                </div>\n              </div>\n\n              {/* <div className='group-menu_item ' onClick={e => vm.groupChooseItem(e, 'Delete')}>\n                <div className ='group-item-head'>\n                  <img className='group_img_item filter_img_class' src={'./images/default/icons/icon-delete-chat.svg'}alt=''/>\n                </div>\n                <div className='group-item-info'>{translate('Delete')}</div>\n              </div> */}\n\n            </div>\n          )}\n        </div>\n\n        {vm.state.isShowPopup_ManageGroup && <RxManageGroup closePopup={e => vm.closePopup()} groupManager={vm.state.groupRightMouse} />}\n\n        {vm.state.flagRightMouse && <div id='menu-mouseright-chat'><RxModalMouseRightChat group={vm.state.groupRightMouse}/></div>}\n\n      </div>}\n      \n\n      \n      \n      <div className={vm.state.displayLeaveGroupScreen ? 'leaveGroup_rectangle' : 'leaveGroup_rectangle_hiden'}>        \n        <div className='leaveGroup_rectangle_1'></div>      \n        <div className='leaveGroup_rectangle_2'>      \n          \n        </div>      \n      </div>\n      {/* END leave group of context menu */}\n    </div>\n  )\n}\n\nexport const renderComponent = (vm) => <div>\n  {vm.renderBody()}\n</div>\n\n\n","/*global translate*/\nimport React from 'react'\nconst RxAccountInfo = global.rootRequire('components/shares/rxAccountInfo').default\n\nconst { rxChangeSlug, stringToColour, autoConvertTime, subString } = global.rootRequire('classes/ulti')\nconst { checkNameGroup, checkAvatarGroup} = global.rootRequire('classes/chat')\n\nlet zget = global.rxu.get\nglobal.isclient && require('./index.css')\n\nexport const renderBody = (vm) => {\n  return (\n    <div>\n      <div className='ztbar'>\n        <div className='ztbar_avatar_header'>\n          {(checkAvatarGroup(vm.state.group, vm.users, vm.userid))\n            && <img src={vm.loadImgStatic(vm.state.group, 'group')} alt='' data-id={'group' + vm.state.group.group_id} className='ava-group_header images-static'\n              onError={(e) => { e.target.onerror = null; e.target.src = vm.loadImgStatic(vm.state.group, 'group', global.rxu.config.get_static) }} />\n          }\n          {!(checkAvatarGroup(vm.state.group, vm.users, vm.userid)) &&<span className='ava-span_header' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameGroup(vm.state.group, vm.users, vm.userid).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>{rxChangeSlug(checkNameGroup(vm.state.group, vm.users, vm.userid),true).slice(0, 2).toUpperCase()}</span>} \n        </div>        \n        <div className='ztbar_left'>\n          <div className='ztbar_name'>{subString(checkNameGroup(vm.state.group, vm.users, vm.userid), 200)}</div>\n          <div className='ztbar_status'>\n            {(zget(vm.state.group, 'type', 0) === 3) &&  vm.state.group && \n              (vm.state.group.partner_id || vm.state.group.occupants_uins[0]) && \n              vm.state.usersStatus[Number(vm.state.group.partner_id  || vm.state.group.occupants_uins[0])] &&\n              (vm.state.usersStatus[Number(vm.state.group.partner_id  || vm.state.group.occupants_uins[0])].online_status === 1\n                ? <span className='ztab-more-user_status'>Online</span> :\n                vm.state.usersStatus[Number(vm.state.group.partner_id  || vm.state.group.occupants_uins[0])].last_seen_at > 0 ?\n                  <span className='ztab-more-user_status'>\n                    {translate('Last seen ')}\n                    {autoConvertTime(vm.state.usersStatus[Number(vm.state.group.partner_id  || vm.state.group.occupants_uins[0])].last_seen_at)}\n                  </span> : <span className='ztab-more-user_status'>Offline</span>)}\n            {(zget(vm.state.group, 'type', 0) !== 3) && <span className='ztab-more-user_status'>\n              {vm.uniqArray(zget(vm.state.group, 'occupants_uins', [])).length} {\n              translate(' member')}{vm.state.countMemberOnl > 0 ? (', '+ vm.state.countMemberOnl+' Online'):''}</span>}\n\n          </div>\n        </div>\n        <div className='ztbar_right'>\n\n          {(zget(vm.state.group, 'type', 0) === 3 && !vm.state.isBlocked) && <div className='ztbar_btn ztbar_btncall filter_img_class' onClick={(e) => vm.onClickStartCall('voicecall')}><img src={'./images/default/icons/callright.svg'} alt='' className='icon-phone icon32' /></div>}\n          {(zget(vm.state.group, 'type', 0) === 3 && !vm.state.isBlocked) && <div className='ztbar_btn ztbar_btnsearch filter_img_class' onClick={(e) => vm.onClickStartCall('videocall')}><img src={'./images/default/icons/videocall.svg'} alt='' className='icon-magnifier_icon32' /></div>}\n\n          <div className={!(vm.state.tabmore === true || vm.state.tabmore.data === true) ? 'ztbar_btn ztbar_btnmore' : 'ztbar_btn  ztbar_btnmore ztbar_btn-active'} onClick={e => vm.onClickTabMore()}><img src={'./images/default/icons/menumore.svg'} alt='' className='icon-options icon32' /></div>\n        </div>\n      </div>\n      { (vm.state.tabmore === true || vm.state.tabmore.data === true) ? <RxAccountInfo /> : null}\n    </div>\n  )\n}\n\nexport const renderComponent = (vm) => {\n  return (<div>\n    {vm.renderBody()}\n  </div>)\n}","import React, { Suspense } from 'react'\n/*global translate*/\nconst { timeConverter, rxaget, rxChangeSlug, stringToColour, idToColor } = global.rootRequire('classes/ulti')\nconst FooterChatComponent = global.rootRequire('themes/netalo/chat/footer').default\nconst { checkAvatarSender, checkIsOwner, checkName, checkNameUser } = global.rootRequire('classes/chat')\nconst RxImageGallery = global.rootRequire('components/shares/rxImageGallery').default\nconst RxGroupsList = global.rootRequire('components/shares/rxGroupList').default\nconst RxInfoUser = global.rootRequire('components/shares/rxInfoUser').default\nconst RxDragAndDrop = global.rootRequire('components/shares/rxDragAndDrop').default\n\nlet zget = global.rxu.get\nconst PinComponent = global.rootRequire('themes/netalo/chat/pin_modal').default\nconst MessageItem = global.rootRequire('themes/netalo/chat/message_item').default\n// const PinComponent = React.lazy(() => import(\"../pin_modal\"));\nglobal.isclient && require('./index.css')\n\nexport const renderBody = (vm) => <div id='idzchat' className=' zchat'>\n  <div className='zchattab_body'>\n    {vm.state.displayDragAndDrop && \n      <RxDragAndDrop \n        token={vm.token}\n        group_id={vm.state.group_id} \n        handleMessage={vm.handleMessage}\n        userid={vm.userid}\n        handleDragOut={ e => vm.handleDragOut(e)}\n      >    \n      </RxDragAndDrop >\n    }\n\n    <div id='zchat_body' ref={vm.dropRef_Mess}  className={(vm.state.tabmoreNextprop === true) ? 'zchat_body-active' : 'zchat_body'} >\n        <div className='zchat_list' id='zchat_list' \n          onScroll={vm.scrollChatBox}>\n          {Object.keys(vm.state.messages).map((odate) => {\n            let firstMessageIndex = 0\n            return <div key={odate}>\n              <div className='zchat_row_child'> \n                {timeConverter(odate, 'dateweek')} \n              </div>\n              {(vm.state.messages \n                && vm.state.messages[odate] \n                && vm.state.messages[odate]['data']) \n                && vm.state.messages[odate]['data'].map((currentMsg, i, arr) => {\n                \n                let isShowAvatar5Minute = false\n                let isShowUserName5Minute = false\n                let previousMsg = i > 0 ? arr[i-1] : null\n                if(previousMsg && [5, 6, 7].indexOf(previousMsg.type) === -1 && currentMsg.sender_uin === previousMsg.sender_uin) \n                { \n                  let dateDiff = Math.floor(Math.abs(Number(previousMsg.created_at / 1000000) - Number(currentMsg.created_at / 1000000)))\n                  isShowUserName5Minute = (dateDiff >= 300) ? true : false\n                }\n                \n                let nextMsg = i+1 < arr.length ? arr[i+1] : null\n                if(nextMsg && [5, 6, 7].indexOf(nextMsg.type) === -1 && currentMsg.sender_uin === nextMsg.sender_uin) \n                {\n                  let dateDiff = Math.floor(Math.abs(Number(nextMsg.created_at / 1000000) - Number(currentMsg.created_at / 1000000)))\n                  isShowAvatar5Minute = (dateDiff >= 300) ? true : false\n                }\n\n                if([5, 6, 7].indexOf(currentMsg.type) !== -1) firstMessageIndex++\n\n                const strMessage = vm.parseMessage(currentMsg) || ''\n                \n                return <div key={currentMsg.message_id}\n                  className={(strMessage.length === 0 ? 'parseMessage_hiden' : ((rxaget(vm.state, 'mess_id', '') !== currentMsg.message_id.toString()) ? 'zmessage_row': 'zmessage_row zchat_row-selected')) } \n                  /*className = {(rxaget(vm.state, 'mess_id', '') !== currentMsg.message_id.toString()) ? 'zmessage_row': 'zmessage_row zchat_row-selected'}*/\n                  onMouseDown={(e) => vm.onClickMouseRight(e, currentMsg)}>                \n                  {([5, 6, 7].indexOf(currentMsg.type) === -1) \n                    ? <div> \n                      { ((i+1 < arr.length && (currentMsg.sender_uin !== arr[i+1].sender_uin || [5, 6, 7].indexOf(arr[i+1].type) !== -1)) \n                        || i+1 === arr.length || isShowAvatar5Minute )\n                        && !checkIsOwner(currentMsg, vm.userid) \n                        && <div className='zmessage_colava'>\n                            <div className='zmessage_avasender' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkName(currentMsg.sender_uin, vm.users, 'avatar'))}, #FFFFFF)`}} onClick={e => vm.onClickInfoUser(rxaget(vm.users, currentMsg.sender_uin, {}))}>\n                              { checkAvatarSender(currentMsg, vm.users) && <img src={global.rxu.config.cdn_endpoint + vm.users[currentMsg.sender_uin.toString()].profile_url} alt=''\n                                data-id={'sender' + currentMsg.sender_uin}\n                                className={'ava-sender images-static'}\n                                onError={(e) => {\n                                  e.target.onerror = null;\n                                  e.target.src = global.rxu.config.get_static + vm.users[currentMsg.sender_uin.toString()].profile_url\n                                }} />\n                              }\n                              <span className='avatar-sender'>\n                                {rxChangeSlug(checkNameUser(vm.convertOmessUser(currentMsg))).slice(0, 2).toUpperCase()}\n                              </span>\n                          </div>\n                        </div>\n                      }\n                      <MessageItem \n                        currentMsg={currentMsg} \n                        users={vm.users}\n                        userid={vm.userid}\n                        group_id={vm.state.group_id}\n                        strMessage={strMessage}   \n                        occupants_uins={vm.state.group.occupants_uins} \n                        lastSeenMessObj={vm.state.lastSeenMessObj}  \n                        index={i}\n                        arr={arr}\n                        firstMessageIndex={firstMessageIndex}\n                        isShowUserName5Minute={isShowUserName5Minute}  \n                        onClickNameUser={vm.onClickNameUser}    \n                        group={vm.state.group} \n                        netaLink={rxaget(vm.props, 'netaLink.data.' + currentMsg.group_id + '-' + currentMsg.message_id, {})} \n                      />\n\n                      {/*<div className={checkIsOwner(currentMsg, vm.userid) ? 'zmessage_content_right' : 'zmessage_content'}>\n                        <div className='zmessage_box'>\n                          <div className={(currentMsg.type === 0) ? (vm.userid.toString() === currentMsg.sender_uin.toString()) \n                            ? 'zmessage_text my_message' : 'zmessage_text another_message' : 'zmessage_text'}>\n                            <div className='another_message_box'>\n                              {\n                              ((i > 0 && currentMsg.sender_uin !== arr[i-1].sender_uin) || i === firstMessageIndex || isShowUserName5Minute) &&\n                                ((vm.state.group.occupants_uins && vm.state.group.occupants_uins.length > 2) \n                                && (vm.userid.toString() !== currentMsg.sender_uin.toString())) \n                                ?\n                                  <div className={currentMsg.type === 0 ? 'zbg_mess' : ''}>\n                                    <div id='stsender_name' className={(currentMsg.type !== 0) ? (currentMsg.type === 9 ? ' zsender_name_type9 ' : 'zsender_name_basic mess_type0') : 'zsender_name_basic'} style={{ color: `${idToColor(currentMsg.sender_uin.toString())}` }} onClick={e => vm.onClickInfoUser(rxaget(vm.users, currentMsg.sender_uin, {}))} >\n                                      {checkNameUser(rxaget(vm.users, currentMsg.sender_uin, {})) || currentMsg.sender_name.toString()}\n                                    </div>\n                                    <div dangerouslySetInnerHTML={{ __html: strMessage }} />\n                                  </div>\n                                :\n                                  <div dangerouslySetInnerHTML={{ __html: strMessage }} />\n                              }\n                            </div>\n                          </div>\n\n                          {\n                            // rxaget(vm.props, 'rxgroup.group', {}).type === 3 && \n                            checkIsOwner(currentMsg, vm.userid) && vm.state.lastSeenMessObj && vm.state.lastSeenMessObj[vm.state.group_id]\n                            && currentMsg.message_id <= vm.state.lastSeenMessObj[vm.state.group_id].lastSeenMessId                           \n                            && <div className='zmessage_seen'>\n                              <img className='zmessage_seen_icon filter_img_class' alt='readed-icon' src={'./images/default/icons/readed-icon.svg'}/> \n                              </div>\n                          }\n                          {\n                            // console.log(currentMsg.message_id,'message_id')\n                          }\n                          \n                          {\n                            // rxaget(vm.props, 'rxgroup.group', {}).type === 3 && \n                            checkIsOwner(currentMsg, vm.userid) && vm.state.lastSeenMessObj && vm.state.lastSeenMessObj[vm.state.group_id]                      \n                            && currentMsg.message_id > vm.state.lastSeenMessObj[vm.state.group_id].lastSeenMessId                           \n                            && <div className='zmessage_seen'>\n                              <img className='zmessage_seen_icon filter_img_class' alt='readed-icon' src={'./images/default/static/icon-checked.svg'}/> \n                            </div>\n                          }\n                          <div className='zmessage_time'> {timeConverter(currentMsg.created_at, 'minute')} </div>\n                        </div>\n                      </div>*/}\n                    </div>\n                    : <div className='zchat_row_child'> {strMessage} </div>}\n                </div>\n              })}\n            </div>\n          })}\n        </div>\n    </div>\n    <div id='menu-message'> \n      {(vm.state.mess_id !== '') && <div className={(vm.checkTypeDelMess() === 4) ||([1,10].indexOf(rxaget(vm.state, 'mess_selected.type', '')) !== -1 && rxaget(vm.state, 'mess_selected.sender_uin', '') !== vm.userid.toString()) ? 'menu-message-box_hiden' : 'menu-message-box'}>\n        {vm.checkTypeDelMess() === 3 &&\n          <div>\n            <div className='menu-option' onClick={e => vm.chooseOption(e, 'reply')}>{translate('Reply')}</div>\n            {!([2, 3, 4, 12 ].indexOf(rxaget(vm.state, 'mess_selected.type', '')) !== -1) && <div className='menu-option' onClick={e => vm.chooseOption(e, 'copy')}>{translate('Copy')}</div>}\n            <div className='menu-option' onClick={e => vm.chooseOption(e, 'forward')}>{translate('Forward')}</div>\n            {(vm.checkPinMess() === 1) &&\n              <div className='menu-option' onClick={e => vm.chooseOption(e, 'pin')}>{translate('Pin')}</div>}\n            {(vm.checkPinMess() === 2) &&\n              <div className='menu-option' onClick={e => vm.chooseOption(e, 'unpin')}>{translate('Unpin')}</div>}\n          </div>}\n        {(rxaget(vm.state, 'mess_selected.sender_uin', '') === vm.userid.toString()) && <div className='menu-option' onClick={e => vm.chooseOption(e, 'delete_all')}>{translate('Delete with everyone')}</div>}\n        {(rxaget(vm.state, 'mess_selected.sender_uin', '') === vm.userid.toString()) && <div className='menu-option' onClick={e => vm.chooseOption(e, 'delete_one')}>{translate('Delete only me')}</div>}\n      </div>}\n\n    </div>\n    { vm.state.displayScrollDownBtn === true && <div className={(vm.state.tabmoreNextprop === true) ?'scrollDownBtn_place scrollDownBtn_place_margin_right':'scrollDownBtn_place'} onClick={e => vm.scrollDownChatList(e)}>    \n        <i className=\"scrollDownBtn\"></i>\n    </div>}\n    \n    <Suspense fallback={<div className=\"loading\"><div className=\"dot-flashing\"></div></div>}>\n      <PinComponent\n        pinedMess={vm.state.pinedMess}\n        users={vm.users}\n        parseMessage={vm.parseMessage}\n        pin_mess_id={vm.state.pin_mess_id}\n        userid={vm.userid}\n        unPin={vm.unPin}\n        themeValue={zget(vm.props, 'themeValue')}\n        convertOmessUser={vm.convertOmessUser}\n        group={vm.state.group}\n        group_id={vm.state.group_id}\n        modalPin={vm.state.modalPin}\n        checkgallery ={vm.state.checkgallery}\n        tabmoreNextprop={vm.state.tabmoreNextprop}\n      />\n    </Suspense>\n\n    <FooterChatComponent\n      group_id={vm.state.group_id}\n      mess_selected={vm.state.mess_selected}\n      type_option={vm.state.type_option}\n      isForwardAudio = {vm.state.isForwardAudio}\n      reloadStateWhenRepMess={vm.reloadStateWhenRepMess}\n      handleMessage={vm.handleMessage}\n      resetSelectedMess={vm.resetSelectedMess}\n      convertTagName={vm.convertTagName}\n      handleDragOut={ e => vm.handleDragOut(e)}\n    />\n    {vm.state.checkgallery && <RxImageGallery images={vm.state.galleryImages} closeShowGallery={() => vm.closeGallery()} position={vm.state.galleryPosition} />}\n    {vm.state.popupGroup && <RxGroupsList closePopupGroup={() => vm.closePopupGroup()} chooseGroupForward={(groupfw) => vm.chooseGroupForward(groupfw)} />}\n  </div>\n</div >\n\nexport const renderComponent = (vm) => {\n  return <div>\n    {vm.renderBody()}\n    {vm.state.infoUserScreen && <RxInfoUser userClick_group={vm.state.userClick_group} closePopupInfoUser={() => vm.closePopupInfoUser()} userInfo={vm.state.userInfo} ownerInfo={rxaget(vm.props, 'netaauth.user', {})} />}\n  </div>\n}","// Website - rxshop\n// src/classes/ulti.js\n/* global translate*/\nimport { rxsecret } from './../config/index'\n\nlet rxu = require('@rxframework/rxulti')\n\nrxu.navClass = function (route, props, showObj, activeClass) {\n  let result = ''\n  showObj = showObj || {}\n  let showPermission = showObj.showPermission || ''\n  let showClass = showObj.showClass || ' rxshow '\n  let hideClass = showObj.hideClass || ' rxhide '\n\n  if (props.location) {\n    let currentLocation = props.location.pathname || ''\n    activeClass = activeClass || ' rxactive '\n\n    if (currentLocation === route) {\n      result += ' ' + activeClass\n    }\n\n    if (rxu.get(props, 'auth.user.arrper', ['']).concat(['']).indexOf(showPermission) !== -1) {\n      result += ' ' + showClass\n    } else {\n      result += ' ' + hideClass\n    }\n  }\n\n  return result\n}\n\nexport function isElectron() {\n  if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n    return true;\n  }\n  if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n    return true;\n  }\n  if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n    return true;\n  }\n  return false;\n}\n/////\nexport function loadIconUrl() {\n  let icon_close_png = document.createElement(\"img\");\n  icon_close_png.src = 'images/default/icons/icon-close.png';\n  let url_icon_close_png = 'url(' + icon_close_png.src + ')'\n  try {\n    document.getElementById('chat-root').style.setProperty(\"--icon-close-png-url\", url_icon_close_png);\n  } catch (e) { }\n}\n////\nexport function changeTheme(themeChoose) {\n  try {\n    document.getElementById('chat-root').style.setProperty(\"--theme-color-text\", themeChoose.theme_color_text);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color-text_1\", themeChoose.theme_color_text_1);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color_background\", themeChoose.theme_color_background);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color_background_sticker\", themeChoose.theme_color_background_sticker);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color_background_sticker_active\", themeChoose.theme_color_background_sticker_active);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color_background_icon-sticker_active\", themeChoose.theme_color_background_icon_sticker_active);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color_background_doc\", themeChoose.theme_color_background_doc);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color-text-light\", themeChoose.theme_color_text_light);\n    document.getElementById('chat-root').style.setProperty(\"--theme-border-color\", themeChoose.theme_border_color);\n    document.getElementById('chat-root').style.setProperty(\"--theme-group-border-color\", themeChoose.theme_group_border_color);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color_background_input\", themeChoose.theme_color_background_input);\n    document.getElementById('chat-root').style.setProperty(\"--theme-color_background_search_input\", themeChoose.theme_color_background_search_input);\n    document.getElementById('chat-root').style.setProperty(\"--theme-placeholder_color\", themeChoose.theme_placeholder_color);\n    document.getElementById('chat-root').style.setProperty(\"font-family\", \"sans-serif\");\n  } catch (e) { }\n}\nexport function changeThemeColor(themeChoose) {\n  if (rxconfig.theme === 'galo') {\n    try {\n      document.getElementById('chat-root').style.setProperty(\"--theme-color\", themeChoose.galo.theme_color);\n      document.getElementById('chat-root').style.setProperty(\"--theme-background_forward_color\", themeChoose.galo.theme_background_forward_color);\n      document.getElementById('chat-root').style.setProperty(\"--theme-icon_color\", themeChoose.galo.theme_icon_color);\n      document.getElementById('chat-root').style.setProperty(\"--theme-doc_icon_color\", themeChoose.galo.theme_doc_icon_color);\n      document.getElementById('chat-root').style.setProperty(\"--login_button_color\", themeChoose.galo.login_button_color);\n      document.getElementById('chat-root').style.setProperty(\"--login_logo_color\", themeChoose.galo.login_logo_color);\n      document.getElementById('chat-root').style.setProperty(\"--theme-filter-color\", themeChoose.galo.theme_filter_color);\n    } catch (e) { }\n  }\n  if (rxconfig.theme === 'default') {\n    try {\n      document.getElementById('chat-root').style.setProperty(\"--theme-color\", themeChoose.default.theme_color);\n      document.getElementById('chat-root').style.setProperty(\"--theme-background_forward_color\", themeChoose.default.theme_background_forward_color);\n      document.getElementById('chat-root').style.setProperty(\"--theme-icon_color\", themeChoose.default.theme_icon_color);\n      document.getElementById('chat-root').style.setProperty(\"--theme-doc_icon_color\", themeChoose.default.theme_doc_icon_color);\n      document.getElementById('chat-root').style.setProperty(\"--login_button_color\", themeChoose.default.login_button_color);\n      document.getElementById('chat-root').style.setProperty(\"--login_logo_color\", themeChoose.default.login_logo_color);\n      document.getElementById('chat-root').style.setProperty(\"--theme-filter-color\", themeChoose.default.theme_filter_color);\n    } catch (e) { }\n  }\n\n}\nexport function changeTheme_ThemeColor(themeChoose) {\n  if (rxconfig.theme === 'galo') {\n    try {\n      document.getElementById('chat-root').style.setProperty(\"--theme-color_background_active_tagname\", themeChoose.galo.theme_color_background_active_tagname);\n      document.getElementById('chat-root').style.setProperty(\"--theme-color_background_hover_tagname\", themeChoose.galo.theme_color_background_hover_tagname);\n      document.getElementById('chat-root').style.setProperty(\"--theme-color_background_active\", themeChoose.galo.theme_color_background_active);\n      document.getElementById('chat-root').style.setProperty(\"--theme-color_background_hover\", themeChoose.galo.theme_color_background_hover);\n    } catch (e) { }\n  }\n  if (rxconfig.theme === 'default') {\n    try {\n      document.getElementById('chat-root').style.setProperty(\"--theme-color_background_active_tagname\", themeChoose.default.theme_color_background_active_tagname);\n      document.getElementById('chat-root').style.setProperty(\"--theme-color_background_hover_tagname\", themeChoose.default.theme_color_background_hover_tagname);\n      document.getElementById('chat-root').style.setProperty(\"--theme-color_background_active\", themeChoose.default.theme_color_background_active);\n      document.getElementById('chat-root').style.setProperty(\"--theme-color_background_hover\", themeChoose.default.theme_color_background_hover);\n    } catch (e) { }\n  }\n\n}\n\nexport function timeConverter(timestamp, type) {\n  let time = ''\n  if (!isNaN(timestamp)) {\n    timestamp = Number(timestamp)\n    if (timestamp.toString().length >= 13 && timestamp.toString().length < 16) {\n      timestamp = Math.floor(timestamp / 1000)\n    }\n    if (timestamp.toString().length >= 16 && timestamp.toString().length < 19) {\n      timestamp = Math.floor(timestamp / 1000000)\n    }\n    timestamp = timestamp * 1000\n    let date = new Date(Math.floor(timestamp))\n    let days = [translate('Sunday'), translate('Monday'), translate('Tuesday'), translate('Wednesday'), translate('Thursday'), translate('Friday'), translate('Saturday')]\n    let dayofweek = days[date.getDay()]\n    let year = date.getFullYear()\n    let month = ('0' + (date.getMonth() + 1)).substr(-2)\n    let datestr = ('0' + date.getDate()).substr(-2)\n    let hour = ('0' + date.getHours()).substr(-2)\n    let min = ('0' + date.getMinutes()).substr(-2)\n    let sec = ('0' + date.getSeconds()).substr(-2)\n\n\n    if (type === 'date') {\n      time = datestr + '/' + month + '/' + year\n    } else if (type === 'time') {\n      time = hour + ':' + min + ':' + sec\n    } else if (type === 'minute') {\n      time = hour + ':' + min\n    } else if (type === 'dateweek') {\n      time = dayofweek + ', ' + datestr + '/' + month + '/' + year\n    } else if (type === 'dateweektime') {\n      time = dayofweek + ', ' + datestr + '/' + month + '/' + year + ' ' + hour + ':' + min + ':' + sec\n    } else if (type === 'dayminute') {\n      time = datestr + '/' + month + '/' + year + ' ' + hour + ':' + min\n    } else if (type === 'dayofweek') {\n      time = dayofweek\n    } else {\n      time = datestr + '/' + month + '/' + year + ' ' + hour + ':' + min + ':' + sec\n    }\n  }\n  return time\n}\n\nexport function timeToDate(timestamp) {\n  let result = ((timestamp + 25200) - (timestamp + 25200) % (86400)) - 25200\n  return result\n}\n\nexport function timesUnixToDate(timestamp1, timestamp2) {\n  let result = ((timestamp1 + 25200) - (timestamp1 + 25200) % (86400)) - 25200\n  if (result < 0) {\n    result = ((timestamp2 + 25200) - (timestamp2 + 25200) % (86400)) - 25200\n  }\n  return result\n}\n\nexport function convertSecondUnix(timestamp, type) {\n  let timenow = Math.floor(Date.now() / 1000)\n  let datenow = timeToDate(timenow)\n  let result = datenow\n  if (!isNaN(timestamp)) {\n    timestamp = Number(timestamp)\n    if (timestamp.toString().length >= 13 && timestamp.toString().length < 16) {\n      timestamp = Math.floor(timestamp / 1000)\n    }\n    if (timestamp.toString().length >= 16 && timestamp.toString().length < 19) {\n      timestamp = Math.floor(timestamp / 1000000)\n    }\n\n    result = timestamp\n  }\n\n  return result\n}\n\n\nexport function autoConvertTime(timestamp) {\n  let timenow = Math.floor(Date.now() / 1000)\n  let datenow = timeToDate(timenow)\n  let result = ''\n  if (!isNaN(timestamp)) {\n    timestamp = Number(timestamp)\n    if (timestamp.toString().length >= 13 && timestamp.toString().length < 16) {\n      timestamp = Math.floor(timestamp / 1000)\n    }\n    if (timestamp.toString().length >= 16 && timestamp.toString().length < 19) {\n      timestamp = Math.floor(timestamp / 1000000)\n    }\n    if (timestamp > datenow) {\n      result = timeConverter(timestamp, 'minute')\n    } else {\n      if (timestamp > (datenow - (86400 * 3))) {\n        result = timeConverter(timestamp, 'dayofweek')\n      } else {\n        result = timeConverter(timestamp, 'date')\n      }\n    }\n  }\n  return result\n}\n\nexport function secondToTime(second) {\n  if (second && !isNaN(second)) {\n    let sec_num = parseInt(second, 10)\n    let hours = Math.floor(sec_num / 3600)\n    let minutes = Math.floor((sec_num - (hours * 3600)) / 60)\n    let seconds = sec_num - (hours * 3600) - (minutes * 60)\n\n    if (hours < 10) { hours = '0' + hours }\n    if (minutes < 10) { minutes = '0' + minutes }\n    if (seconds < 10) { seconds = '0' + seconds }\n    if (second < 3600) {\n      return minutes + ':' + seconds;\n    } else {\n      return hours + ':' + minutes + ':' + seconds\n    }\n  } else {\n    return '00:00'\n  }\n}\n\nexport function padstr(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nexport function secondsToTime(secs) {\n  let hours = Math.floor(secs / (60 * 60))\n\n  let divisor_for_minutes = secs % (60 * 60)\n  let minutes = Math.floor(divisor_for_minutes / 60)\n\n  let divisor_for_seconds = divisor_for_minutes % 60\n  let seconds = Math.ceil(divisor_for_seconds)\n\n  return { 'h': padstr(hours, 2), 'm': padstr(minutes, 2), 's': padstr(seconds, 2) }\n}\n\nexport function rxaget(variable, keys, defaultVal) {\n  defaultVal = defaultVal || ''\n  let resultVal = defaultVal\n\n\n  try {\n    // Keys is array of index\n    if (Array.isArray(keys)) {\n      let tempResult = variable\n      for (let i in keys) {\n        tempResult = tempResult[keys[i]]\n      }\n      resultVal = tempResult\n\n      // Keys is a string\n    } else {\n      keys = keys.split('.')\n      let tempResult = variable\n      for (let i in keys) {\n        tempResult = tempResult[keys[i]]\n      }\n      resultVal = tempResult\n    }\n\n    // Case exception, access undefined variable\n  } catch (e) {\n    resultVal = defaultVal\n  }\n\n  // Case undefined after all\n  if (resultVal === undefined) {\n    resultVal = defaultVal\n  }\n\n  // HAPPYENDING\n  return resultVal\n}\n\nexport function subString(str, pos) {\n  pos = pos || 33\n  let result = ''\n  if (str && typeof (str) === 'string' && str.length > pos) {\n    result = str.substr(0, pos) + ' ...'\n  } else {\n    result = str\n  }\n\n  return result\n}\n\nexport function rxChangeSlug(x, isNotNull = false) {\n  let str = x\n  if (typeof (x) !== 'undefined') {\n    str = str.toLowerCase()\n    str = str.replace(/[`~!@#$%^&*()_|+=?;:'\",.<>{}[\\]\\\\/]/gi, '')\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a')\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e')\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i')\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o')\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u')\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y')\n    str = str.replace(/đ/g, 'd')\n    str = str.replace(/ + /g, ' ')\n    str = str.replace(/ /g, '-')\n    str = str.trim()\n  }\n  return isNotNull ? (str || x) : str\n}\n\nexport function rxChangeSlugSearch(x, isNotNull = false) {\n  let str = x\n  if (typeof (x) !== 'undefined') {\n    str = str.toLowerCase()\n    // str = str.replace(/[`~!@#$%^&*()_|+=?;:'\",.<>{}[\\]\\\\/]/gi, '')\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a')\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e')\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i')\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o')\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u')\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y')\n    str = str.replace(/đ/g, 'd')\n    str = str.replace(/ + /g, ' ')\n    // str = str.replace(/ /g, '-')\n    str = str.trim()\n  }\n  return isNotNull ? (str || x) : str\n}\n\n\nexport function formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport function sortArrObj(array, key, type) {\n  if (type === 'desc') {\n    return array.sort((a, b) => (Number(rxaget(a, key, 0)) > Number(rxaget(b, key, 0))) ? -1 : ((Number(rxaget(b, key, 0)) > Number(rxaget(a, key, 0))) ? 1 : 0))\n  } else {\n    return array.sort((a, b) => (Number(rxaget(a, key, 0)) > Number(rxaget(b, key, 0))) ? 1 : ((Number(rxaget(b, key, 0)) > Number(rxaget(a, key, 0))) ? -1 : 0))\n  }\n}\n\nexport function idToColor(userid){\n  let nameColorArr = ['#ED6494','#65D5D1','#1BA8D6','#EFAE62','#5BBC43','#EF5B54','#B27CD3','#FA944A','#5BBC43','#65D5D1']\n  let idColor = userid.slice(-1)\n  return nameColorArr[idColor]\n}\n\nexport function stringToColour(str) {\n  let hash = 0\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash)\n  }\n  let colour = '#'\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 0xFF\n    colour += ('00' + value.toString(16)).substr(-2)\n  }\n  return colour\n}\n\nexport function removeTags(str) {\n  if ((str===null) || (str==='')) {\n    return false\n  } else {\n    str = str.toString()\n  }\n      \n  if(str.indexOf('\\\\')){\n    str = str.replace(/\\\\/g, '')\n  }\n  return str.replace( /(<([^>]+)>)/ig, '')\n}\n\nexport function converEmojiTag(message){\n  message = message.replace(/\"/g,'\\\\\"')\n  const objEmoji = {':)':'🙂',':(':'🙁',':P':'😛',':D':'😃',':O':'😮',';)':'😉','B-)':'🤓','B|':'😎','>:(':'😠',\":'(\":'😢','O:)':'😇',':*':'😘','3:)':'😈','^_^':'😊','o.O':'😳','>:O':'😫','(y)':'👍',':poop:':'💩'}\n  const resMess = message.match(/(:\\)|:\\(|:P|:D|:O|;\\)|B-\\)|B\\||>:\\(|:\\/|:'\\(|O:\\)|:\\*|3:\\)|\\^_\\^|o.O|>:O|\\(y\\)|:poop:)/g)\n  if (resMess && resMess.constructor === Array && resMess.length > 0) {\n    const uniemoji = [...new Set(resMess)]\n    for (let emoji of uniemoji) {\n      try {\n        const stremoji = emoji.replace(/\\)/g,'\\\\)').replace(/\\(/g,'\\\\(').replace(/\\|/g,'\\\\|').replace(/\\//g,'\\\\/').replace(/'/g,'\\\\\\'').replace(/\\*/g,'\\\\*').replace(/\\^/g,'\\\\^')\n        const regEmoji = new RegExp(stremoji, 'g')\n        const replaceEmoji = objEmoji[emoji]\n        if (replaceEmoji) {\n          message = message.replace(regEmoji, replaceEmoji)   \n        }\n      } catch(e) {}\n    }\n  }\n\n  return message\n}\n\nlet secret = rxsecret()\nexport const rxconfig = (function () {\n  let config = []\n  config.theme = secret.theme\n  // Web \n  config.web_port = secret.web_port\n\n  // Server\n  config.base_api_neta = secret.base_api\n\n  // Profile Img\n  config.profile_api = secret.profile_api\n\n  // CDN Profile\n  config.cdn_endpoint = secret.cdn_endpoint\n\n  // Config Login\n  config.application_id = secret.application_id\n  config.auth_key = secret.auth_key\n  config.nonce = secret.nonce\n  config.signature = secret.signature\n  config.timestamp = secret.timestamp\n\n  // Authorize\n  // Homepage\n  config.api_home = config.base_api + '/site'\n  config.api_site_product = config.base_api + '/site/product'\n  config.api_site_productcate = config.base_api + '/site/productcate'\n  config.api_site_order_add = config.base_api + '/site/orderadd'\n\n  // Note\n  config.api_note = config.base_api + '/note'\n\n  // Note cate\n  config.api_cate = config.base_api + '/cate'\n\n  // Note cate\n  config.api_review = config.base_api + '/review'\n\n  // Order\n  config.api_order = config.base_api + '/order'\n  config.api_productcate = config.base_api + '/productcate'\n  config.api_product = config.base_api + '/product'\n\n  config.api_authorize = config.base_api + '/authorize'\n  config.api_user = config.base_api + '/user'\n  config.api_user_edit = config.api_user + '/edit'\n  config.api_user_delete = config.api_user + '/delete'\n  config.api_user_restore = config.api_user + '/restore'\n  config.api_role = config.base_api + '/role'\n  config.api_role_edit = config.api_role + '/edit'\n  config.api_role_delete = config.api_role + '/delete'\n  config.api_role_restore = config.api_role + '/restore'\n  config.api_role_all = config.api_role + '/all'\n  config.api_permission = config.base_api + '/permission'\n  config.api_permission_edit = config.api_permission + '/edit'\n  config.api_permission_delete = config.api_permission + '/delete'\n  config.api_permission_restore = config.api_permission + '/restore'\n  config.api_permission_all = config.api_permission + '/all'\n  config.api_permission_genpermission = config.api_permission + '/generation'\n  // [[RX_APIS]] //\n\n  // Netalo\n  config.address_book = config.base_api_neta + '/api/address_book.json'\n  config.registered_users = config.base_api_neta + '/api/registered_users.json'\n  config.create_blob = config.base_api_neta + '/api/content/blobs.json'\n  config.get_groups = config.base_api_neta + '/api/groups'\n  config.get_blobs = config.base_api_neta + '/api/content/blobs'\n  config.get_phone = config.base_api_neta + '/api/users/by_phone.json'\n  config.get_avatar = config.base_api_neta + '/avatar/'\n  config.get_static = config.profile_api + '/profiles/'\n  config.get_media_chat = config.base_api_neta + '/api/media_chat.json'\n  config.update_profile = config.base_api_neta + '/api/users/'\n\n  return config\n}())\n\nrxu.secret = secret\nrxu.config = rxconfig\nexport default rxu\n","export function rxsecret () {\n  let result = []\n  result.web_port = 3388\n  \n  //// Dev NetAlo ////\n  result.base_api = 'https://dev2.api.netalo.vn'// 'https://dev.api.netalo.vn' //\n  result.socket_api = 'https://dev2.conn1.netalo.vn' //'https://dev.conn1.netalo.vn'//\n  result.profile_api = 'https://dev.ss1.netalo.vn'\n  result.cdn_endpoint =  'https://dev.ss1.netalo.vn/profiles/'\n  result.application_id = 1\n  result.auth_key = 'appkey'\n  result.nonce = 71543\n  result.signature = 'b69274692632eddb47a9d3c798526973a9e30f88'\n  result.timestamp = 1599811042\n  result.theme = 'default'\n  // result.theme = 'galo'\n\n  //// Pro NetAlo ////\n  // result.base_api = 'https://api.netalo.vn'\n  // result.socket_api = 'https://conn1.netalo.vn'\n  // result.profile_api = 'https://ss1.netalo.vn'\n  // result.cdn_endpoint =  'https://sxlkrvlcuqweb.vcdn.cloud/profiles/'\n  // result.theme = 'default'\n  // result.application_id = 10\n  // result.auth_key = 'PS2zTS5$VyZccSaj'\n  // result.nonce = 38735\n  // result.signature = '40d579ce5b7a83495fe12e19d52ef32e31d42494'\n  // result.timestamp = 1605891407\n\n  //// Pro Galo ////\n  // result.base_api = 'https://api.netalo.vn'\n  // result.socket_api = 'https://conn1.netalo.vn'\n  // result.profile_api = 'https://ss1.netalo.vn'\n  // result.cdn_endpoint =  'https://sxlkrvlcuqweb.vcdn.cloud/profiles/'\n  // result.theme = 'galo'\n  // result.application_id = 3\n  // result.auth_key = 'yN7uDn4gDwTdttUg'\n  // result.nonce = 55365\n  // result.signature = '361d9731b6e7c49b88d4dd59b5114ef601717c56'\n  // result.timestamp = 1611041890\n\n  //// Dev Onluyen ////\n  // result.base_api = 'https://dev.api.netalo.vn'\n  // result.socket_api = 'https://dev.conn1.netalo.vn'\n  // result.profile_api = 'https://dev.ss1.netalo.vn'\n  // result.cdn_endpoint =  'https://dev.ss1.netalo.vn/profiles/'\n  // result.application_id = 7\n  // result.auth_key = 'yN72Dn4gDwTdtLUa'\n  // result.nonce = 63978\n  // result.signature = '6bcfeb53a25a155196288f9a5f56ff3c0f526eaf'\n  // result.timestamp = 1616040260\n  // result.theme = 'default'\n  \n  return result\n}","export function rxsecret () {\n  let result = []\n  result.web_port = 3388\n\n  result.base_api = 'https://dev2.api.netalo.vn'\n  result.socket_api = 'https://dev2.conn1.netalo.vn'\n  result.profile_api = 'https://dev.ss1.netalo.vn'\n  result.cdn_endpoint =  'https://dev.ss1.netalo.vn/profiles/'\n  result.application_id = 1\n  result.auth_key = 'appkey'\n  result.nonce = 71543\n  result.signature = 'b69274692632eddb47a9d3c798526973a9e30f88'\n  result.timestamp = 1599811042\n  result.theme = 'default'\n\n  // result.base_api = 'https://api.netalo.vn'\n  // result.socket_api = 'https://conn1.netalo.vn'\n  // result.profile_api = 'https://ss1.netalo.vn'\n  // result.cdn_endpoint =  'https://sxlkrvlcuqweb.vcdn.cloud/profiles/'\n  // result.theme = 'default'\n  // result.application_id = 10\n  // result.auth_key = 'PS2zTS5$VyZccSaj'\n  // result.nonce = 38735\n  // result.signature = '40d579ce5b7a83495fe12e19d52ef32e31d42494'\n  // result.timestamp = 1605891407\n\n\n  // result.base_api = 'https://api.netalo.vn'\n  // result.socket_api = 'https://conn1.netalo.vn'\n  // result.profile_api = 'https://ss1.netalo.vn'\n  // result.cdn_endpoint =  'https://sxlkrvlcuqweb.vcdn.cloud/profiles/'\n  // result.theme = 'galo'\n  // result.application_id = 3\n  // result.auth_key = 'yN7uDn4gDwTdttUg'\n  // result.nonce = 55365\n  // result.signature = '361d9731b6e7c49b88d4dd59b5114ef601717c56'\n  // result.timestamp = 1611041890\n\n  // result.base_api = 'https://dev.api.netalo.vn'\n  // result.socket_api = 'https://dev.conn1.netalo.vn'\n  // result.profile_api = 'https://dev.ss1.netalo.vn'\n  // result.cdn_endpoint =  'https://dev.ss1.netalo.vn/profiles/'\n  // result.application_id = 7\n  // result.auth_key = 'yN72Dn4gDwTdtLUa'\n  // result.nonce = 63978\n  // result.signature = '6bcfeb53a25a155196288f9a5f56ff3c0f526eaf'\n  // result.timestamp = 1616040260\n  // result.theme = 'default'\n  \n  return result\n}\n","export function rxsecret () {\n  let result = []\n  result.web_port = 3388\n  // result.base_api = 'https://dev.api.netalo.vn'\n  // result.socket_api = 'https://dev.conn1.netalo.vn'\n  // result.profile_api = 'https://dev.ss1.netalo.vn'\n  result.base_api = 'https://api.netalo.vn'\n  result.socket_api = 'https://conn1.netalo.vn'\n  result.profile_api = 'https://ss1.netalo.vn'\n  result.cdn_endpoint =  'https://sxlkrvlcuqweb.vcdn.cloud/profiles/'\n\n  result.application_id = 10\n  result.auth_key = 'PS2zTS5$VyZccSaj'\n  result.nonce = 38735\n  result.signature = '40d579ce5b7a83495fe12e19d52ef32e31d42494'\n  result.timestamp = 1605891407\n  \n  result.theme = 'galo'\n  return result\n}\n","\n\nlet lang = {\n\n  // Netalo config\n  'Account':'Tài khoản',\n  'Edit':'Chỉnh sửa',\n  'General settings':'Cài đặt chung',\n  'Notification settings':'Cài đặt thông báo',\n  'Theme settings':'Cài đặt chủ đề',\n  'Theme':'Chủ đề',\n  'Language':'Ngôn ngữ',\n  'Frequently asked questions':'Câu hỏi thường gặp',\n  'Terms of use':'Điều khoản sử dụng',\n  'Support':'Hỗ trợ',\n  'Logout':'Đăng xuất',\n  'Allows notifications':'Cho phép thông báo',\n  'Default':'Mặc định',\n  'Night':'Ban đêm',\n  'Color':'Màu sắc',\n  'Automatically changed by system':'Tự động thay đổi theo hệ thống',\n  'Language settings':'Cài đặt ngôn ngữ',\n  'Profile':'Hồ sơ cá nhân',\n  'Registered phone number cannot be changed':'Số điện thoại đăng ký không thể thay đổi',\n  'Notifications blocked. Please enable them in your browser.':'Thông báo đã bị chặn. Vui lòng kích hoạt chúng trong trình duyệt của bạn.',\n  //Netalo config Frequently asked questions NetAlo\n  'How to log in or out on NetAlo?':'Đăng xuất/nhập trong NetAlo như thế nào?',\n  'After opening NetAlo app, log in by filling in your phone number, then tap on the “Continue” button. Then, a message containing your OTP will be sent to your phone. If you don’t receive the message, tap on “Re-send OTP” on the left. If your OTP is successfully verified, you can now start using NetAlo by tapping on the “Start chatting” button. If you wish to log out, tap on the “Account”  button on the bottom-right corner of your phone screen. When your account detail tab is shown, scroll down to the bottom of your phone screen and tap on “Log out”.':'Sau khi mở app NetAlo, để đăng nhập, bạn hãy nhập số điện thoại của mình, sau đó bấm chọn “Tiếp tục”. Một tin nhắn chứa mã OTP sẽ được gửi đến số điện thoại của bạn. Trong trường hợp không nhận được tin nhắn này, bạn hãy bấm chọn “Gửi lại” phía bên trái màn hình. Sau khi nhận được và xác thực thành công mã OTP, bạn có thể bắt đầu sử dụng NetAlo bằng cách bấm chọn “Bắt đầu chat”. Nếu muốn đăng xuất, bạn hãy bấm nút “Tài khoản”  ở góc phải phía dưới màn hình điện thoại. Lúc này, khung thông tin chi tiết tài khoản của bạn sẽ xuất hiện, bạn hãy vuốt xuống dưới đáy màn hình và bấm chọn “Đăng xuất”.',\n  'NetAlo verifies your phone number via OTP code. After you fill in your phone number, a message containing your OTP will be sent to your phone. If you don’t receive the message, tap on “Re-send OTP” on the left. If your OTP is successfully verified, you can now start using NetAlo by tapping on “Start chatting”.':'NetAlo xác thực số điện thoại của bạn thông qua mã OTP. Sau khi nhập số điện thoại, một tin nhắn chứa mã OTP sẽ được gửi đến số điện thoại của bạn. Trong trường hợp không nhận được tin nhắn này, bạn hãy bấm chọn “Gửi lại” phía bên trái màn hình. Sau khi nhận được và xác thực thành công mã OTP, bạn có thể bắt đầu sử dụng NetAlo bằng cách bấm chọn “Bắt đầu chat”.',\n  'On the main page, tap on the “Message” button  on the top-right corner of your phone screen. When a new tab appears, tap on “Create a group chat” (in blue color). NetAlo will then show your contact list. From there, pick those you wish to create a group chat with, then tap on “Done”. You can also create a group chat by choosing a particular chat of yours with another person on the main page. When your message tab shows up, tap on the Name of the person located on top of your phone screen. Another tab showing your contact’s detailed information will appear. Then, tap on “Create group” , choose from your contact list who you wish to invite to the chat group, then tap on “Done”.':'Tại trang chính, bấm vào nút “Tin nhắn” tại góc phải trên cùng của màn hình điện thoại. Sau khi tab mới xuất hiện, bấm chọn “Tạo nhóm trò chuyện”. Lúc này, danh bạ của bạn sẽ xuất hiện. Bạn hãy chọn những người mà bạn muốn mời tham gia nhóm chat, sau đó bấm chọn “Xong”. Bạn cũng có thể tạo nhóm chat bằng cách bấm chọn một tin nhắn giữa bạn và một người bất kỳ tại trang chính. Khi khung chat xuất hiện, hãy bấm chọn Tên của người đó. Trên tab thông tin chi tiết của người đó, hãy bấm “Tạo nhóm” . Sau đó, chọn từ danh bạ của bạn người bạn muốn mời tham gia nhóm chat, sau đó bấm chọn “Xong”.',\n  'NetAlo does not currently support this feature/function.':'NetAlo hiện không hỗ trợ tính năng này.',\n  'How to create a phone call on NetAlo?':'Cách khởi tạo một cuộc gọi trên NetAlo như thế nào?',\n  'Are NetAlo Calls free of charge?':'Các cuộc gọi từ NetAlo có miễn phí không?',\n  'Yes. NetAlo Calls are based on Internet or wi-fi connection. You don’t need to buy phone cards to use it.':'Các cuộc gọi thông qua NetAlo là hoàn toàn miễn phí. Điện thoại của bạn chỉ cần có kết nối Internet hoặc wi-fi là có thể sử dụng được chức năng này.',\n  'Does NetAlo support conference calling?':'NetAlo có hỗ trợ chức năng gọi điện theo nhóm không?',\n  'NetAlo does not currently support this feature/function':'Hiện tại NetAlo chưa hỗ trợ tính năng này.',\n  'How to share photos on NetAlo?':'Chia sẻ hình ảnh trên NetAlo như thế nào?',\n  'On your message page, tap on the “Media” button  located at the bottom-left corner of your phone screen. Then pick the images that you wish to send, then tap “Send”. NetAlo does not limit the number of images or videos that you wish to share.':'Trong khung tin nhắn giữa bạn với một người bất kỳ, hãy bấm vào nút “Hình ảnh” ở góc trái phía dưới màn hình điện thoại. Sau đó, chọn bất kỳ hình ảnh hoặc video nào bạn muốn gửi đi, và bấm nút “Gửi”. NetAlo không giới hạn số lượng hình ảnh và video mà bạn muốn gửi đi.',\n  'How to send a message on NetAlo?':'Gửi tin nhắn trên NetAlo như thế nào?',\n  'This function/feature is currently being developed by NetAlo':'Chức năng này hiện vẫn đang được đội ngũ NetAlo phát triển.',\n  \n  //Netalo config Frequently asked questions GAlo\n  'Have Questions? Look Here':'Những câu hỏi thường gặp',\n  'How to log in or out on GAlo?':'Đăng xuất/nhập trong GAlo như thế nào?',\n  'After opening GAlo app, log in by filling in your phone number, then tap on the “Continue” button. Then, a message containing your OTP will be sent to your phone. If you don’t receive the message, tap on “Re-send OTP” on the left. If your OTP is successfully verified, you can now start using GAlo by tapping on the “Start chatting” button. If you wish to log out, tap on the “Account”  button on the bottom-right corner of your phone screen. When your account detail tab is shown, scroll down to the bottom of your phone screen and tap on “Log out”.':'Sau khi mở app GAlo, để đăng nhập, bạn hãy nhập số điện thoại của mình, sau đó bấm chọn “Tiếp tục”. Một tin nhắn chứa mã OTP sẽ được gửi đến số điện thoại của bạn. Trong trường hợp không nhận được tin nhắn này, bạn hãy bấm chọn “Gửi lại” phía bên trái màn hình. Sau khi nhận được và xác thực thành công mã OTP, bạn có thể bắt đầu sử dụng GAlo bằng cách bấm chọn “Bắt đầu chat”. Nếu muốn đăng xuất, bạn hãy bấm nút “Tài khoản”  ở góc phải phía dưới màn hình điện thoại. Lúc này, khung thông tin chi tiết tài khoản của bạn sẽ xuất hiện, bạn hãy vuốt xuống dưới đáy màn hình và bấm chọn “Đăng xuất”.',\n  'How to verify your phone number?':'Xác thực số điện thoại của bạn như thế nào?',\n  'GAlo verifies your phone number via OTP code. After you fill in your phone number, a message containing your OTP will be sent to your phone. If you don’t receive the message, tap on “Re-send OTP” on the left. If your OTP is successfully verified, you can now start using GAlo by tapping on “Start chatting”.':'GAlo xác thực số điện thoại của bạn thông qua mã OTP. Sau khi nhập số điện thoại, một tin nhắn chứa mã OTP sẽ được gửi đến số điện thoại của bạn. Trong trường hợp không nhận được tin nhắn này, bạn hãy bấm chọn “Gửi lại” phía bên trái màn hình. Sau khi nhận được và xác thực thành công mã OTP, bạn có thể bắt đầu sử dụng GAlo bằng cách bấm chọn “Bắt đầu chat”.',\n  'How to create a group chat?':'Làm sao để tạo một nhóm chat?',\n  'On the main page, tap on the “Message” button  on the top-right corner of your phone screen. When a new tab appears, tap on “Create a group chat” (in blue color). GAlo will then show your contact list. From there, pick those you wish to create a group chat with, then tap on “Done”. You can also create a group chat by choosing a particular chat of yours with another person on the main page. When your message tab shows up, tap on the Name of the person located on top of your phone screen. Another tab showing your contact’s detailed information will appear. Then, tap on “Create group” , choose from your contact list who you wish to invite to the chat group, then tap on “Done”.':'Tại trang chính, bấm vào nút “Tin nhắn” tại góc phải trên cùng của màn hình điện thoại. Sau khi tab mới xuất hiện, bấm chọn “Tạo nhóm trò chuyện”. Lúc này, danh bạ của bạn sẽ xuất hiện. Bạn hãy chọn những người mà bạn muốn mời tham gia nhóm chat, sau đó bấm chọn “Xong”. Bạn cũng có thể tạo nhóm chat bằng cách bấm chọn một tin nhắn giữa bạn và một người bất kỳ tại trang chính. Khi khung chat xuất hiện, hãy bấm chọn Tên của người đó. Trên tab thông tin chi tiết của người đó, hãy bấm “Tạo nhóm” . Sau đó, chọn từ danh bạ của bạn người bạn muốn mời tham gia nhóm chat, sau đó bấm chọn “Xong”.',\n  'How to add someone into a group chat?':'Làm sao để thêm một thành viên khỏi danh sách nhóm chat?',\n  'On the main page, choose one particular group chat that you wish to add new contacts to. When the message tab appears, tap on the Name of the group chat located on top of your phone screen. When another tab showing your group chat details appears, tap on “Add contact” . From your contact list, pick those you wish to invite to your group chat, then tap on “Done”.':'Tại trang chính, chọn một nhóm chat bất kỳ. Khi khung tin nhắn của nhóm chat này hiển thị, hãy bấm vào phần Tên của nhóm chat ở phía trên cùng màn hình điện thoại. Lúc này, một tab hiển thị thông tin chi tiết của nhóm chat sẽ xuất hiện. Bạn hãy bấm chọn “Thêm thành viên” . Sau khi danh bạ của bạn hiện ra, hãy chọn những người bạn muốn mời tham gia nhóm chat, sau đó bấm chọn “Xong”.',\n  'How to remove someone from a group chat?':'Làm sao để xóa một thành viên ra khỏi danh sách nhóm chat?',\n  'GAlo does not currently support this feature/function.':'GAlo hiện không hỗ trợ tính năng này.',\n  'How to leave a group chat?':'Rời khỏi một nhóm chat như thế nào?',\n  'On the main page, choose one particular group chat that you wish to leave. When the message tab appears, tap on the Name of the group chat located on top of your phone screen. When another tab showing your group chat details appears, tap on “Leave group” (in red color) to leave the group chat.':'Tại trang chính, chọn một nhóm chat bất kỳ. Khi khung tin nhắn của nhóm chat này hiển thị, hãy bấm vào phần Tên của nhóm chat ở phía trên cùng màn hình điện thoại. Lúc này, một tab hiển thị thông tin chi tiết của nhóm chat sẽ xuất hiện. Bạn hãy bấm chọn “Rời nhóm” để rời khỏi nhóm chat.’+',\n  'How to see a group chat’s participation list?':'Làm sao để xem danh sách thành viên trong một nhóm chat?',\n  'On the main page, choose one particular group chat that you wish to view the participation list of. When the message tab appears, tap on the Name of the group chat located on top of your phone screen. When another tab showing your group chat details appears, scroll down to the bottom to see the participation list.':'Tại trang chính, chọn một nhóm chat bất kỳ. Khi khung tin nhắn của nhóm chat này hiển thị, hãy bấm vào phần Tên của nhóm chat ở phía trên cùng màn hình điện thoại. Lúc này, một tab hiển thị thông tin chi tiết của nhóm chat sẽ xuất hiện. Bạn hãy kéo xuống phía dưới cùng của màn hình để xem danh sách thành viên nhóm chat.',\n  'How to create a phone call on GAlo?':'Cách khởi tạo một cuộc gọi trên GAlo như thế nào?',\n  'On the main page, tap on the “Phone call”  button (second position from the left, located at the bottom of your phone screen). When a new tab appears, tap on “Start new phone call”. This will take you to your “Contacts” page. Choose a particular contact that you want to call. Then, when your message tab with that contact appears, tap on the “Phone call” button located at the top-right corner of your phone screen.':'Tại trang chính, bấm vào nút “Cuộc gọi” (nút thứ 2 từ trái qua, nằm phía dưới màn hình điện thoại). Khi tab mới xuất hiện, bấm chọn “Bắt đầu cuộc gọi mới”. Lúc này bạn sẽ được đưa tới trang “Danh bạ”. Sau khi chọn người để gọi, một tab tin nhắn giữa bạn và người đó sẽ xuất hiện. Lúc này, bạn bấm vào nút “Gọi điện” ở phía trên bên phải màn hình điện thoại để thực hiện cuộc gọi.',\n  'Are GAlo Calls free of charge?':'Các cuộc gọi từ GAlo có miễn phí không?',\n  'Yes. GAlo Calls are based on Internet or wi-fi connection. You don’t need to buy phone cards to use it.':'Các cuộc gọi thông qua GAlo là hoàn toàn miễn phí. Điện thoại của bạn chỉ cần có kết nối Internet hoặc wi-fi là có thể sử dụng được chức năng này.',\n  'Does GAlo support conference calling?':'GAlo có hỗ trợ chức năng gọi điện theo nhóm không?',\n  'GAlo does not currently support this feature/function':'Hiện tại GAlo chưa hỗ trợ tính năng này.',\n  'How to share photos on GAlo?':'Chia sẻ hình ảnh trên GAlo như thế nào?',\n  'On your message page, tap on the “Media” button  located at the bottom-left corner of your phone screen. Then pick the images that you wish to send, then tap “Send”. GAlo does not limit the number of images or videos that you wish to share.':'Trong khung tin nhắn giữa bạn với một người bất kỳ, hãy bấm vào nút “Hình ảnh” ở góc trái phía dưới màn hình điện thoại. Sau đó, chọn bất kỳ hình ảnh hoặc video nào bạn muốn gửi đi, và bấm nút “Gửi”. GAlo không giới hạn số lượng hình ảnh và video mà bạn muốn gửi đi.',\n  'How do I edit my profile?':'Làm thế nào để chỉnh sửa thông tin tài khoản?',\n  'On the main page, tap on the “Account” button  located at the bottom-right corner of your phone screen. Then, a new tab showing your account’s detailed information will appear for you to edit.':'Tại trang chính, bấm vào nút “Tài khoản” ở góc phải phía dưới màn hình điện thoại của bạn. Lúc này, trang thông tin chi tiết của tài khoản của bạn sẽ xuất hiện để bạn có thể tùy ý chỉnh sửa.',\n  'How to manage your notification?':'Tùy chỉnh thông báo như thế nào?',\n  'If you want to silence a message’s notification, tap on one of the messages shown on the main page. Then, when your chosen message is opened, tap on the Name of the contact located on top of the message tab. When another tab showing your contact’s details appeared, tap on the “Stop notification”  button located at the bottom of your phone screen.':'Nếu bạn muốn tắt thông báo của một tin nhắn bất kỳ, hãy bấm chọn tin nhắn đó tại trang chính. Sau khi khung tin nhắn hiện ra, hãy bấm vào Tên người bạn đang nhắn tin cùng. Lúc này, một tab hiển thị thông tin chi tiết của người đó sẽ xuất hiện. Bạn hãy bấm nút “Tắt thông báo” ở phía dưới màn hình điện thoại.',\n  'How to send a message on GAlo?':'Gửi tin nhắn trên GAlo như thế nào?',\n  'On the main page, tap on the “Message” button  on the top-right corner of your phone screen. The “Contacts” page  will then be opened. From there, choose one particular contact of yours and start sending messages. Another way is going directly to “Contacts” page  (third button from the left, located at the bottom of your screen), then choose one particular contact on your list and start sending messages.':'Tại trang chính, bấm vào nút “Tin nhắn” tại góc phải trên cùng trên màn hình điện thoại. Trang “Danh bạ” của bạn sau đó sẽ xuất hiện. Lúc này, chọn một đối tượng từ trong danh sách danh bạ và bắt đầu gửi tin nhắn. Ngoài ra bạn có thể trực tiếp bấm vào nút “Danh bạ” (nút thứ 3 từ trái qua, nằm ở phía dưới màn hình điện thoại), sau đó chọn một đối tượng và bắt đầu gửi tin nhắn.',\n  'Can I listen to my own voice chat before sending it?':'Tôi có thể thử nghe tin nhắn giọng nói của mình trước khi gửi đi không?',\n  'This function/feature is currently being developed by GAlo':'Chức năng này hiện vẫn đang được đội ngũ GAlo phát triển.',\n  'How to send a voice chat?':'Gửi một tin nhắn giọng nói như thế nào?',\n  'On the main page, choose one particular message of yours. A new tab showing your message with that one particular contact of yours will appear. Then tap on the “Microphone” button  located at the bottom-left corner of your phone screen and start recording your voice. After you finished, tap on “Stop recording”, then tap “Send” if you agree to send the voice message.':'Tại trang chính, chọn một tin nhắn bất kỳ của bạn. Lúc này, tab tin nhắn giữa bạn và người đã chat với bạn sẽ xuất hiện. Hãy bấm vào nút “Ghi âm” nằm ở góc trái phía dưới màn hình điện thoại của bạn và bắt đầu ghi âm. Sau khi ghi âm xong, bấm nút “Dừng ghi âm”, sau đó bấm “Gửi” nếu bạn quyết định gửi đi tin nhắn thoại này.',\n   \n  //Netalo config Terms of use NetAlo\n  'NetAlo Terms Of Service':'THỎA THUẬN CUNG CẤP VÀ SỬ DỤNG DỊCH VỤ MẠNG XÃ HỘI NetAlo',\n\n  //Netalo config Terms of use GAlo\n  'GAlo Terms Of Service':'THỎA THUẬN CUNG CẤP VÀ SỬ DỤNG DỊCH VỤ MẠNG XÃ HỘI GAlo',\n  // Netalo chat\n  'New Group Chat':'Nhóm trò chuyện mới',\n  'Chats':'Các cuộc trò chuyện',\n  'Create a group':'Tạo nhóm',\n  'Enter a group name':'Nhập tên nhóm',\n  'Search':'Tìm kiếm',\n  'Recent contact':'Liên hệ gần đây',\n  'Recent search':'Tìm kiếm gần đây',\n  'You have not had any chat yet':'Bạn chưa có trò chuyện nào',\n  'Start now':'Bắt đầu ngay',\n  'Write a message':'Viết tin nhắn',  \n  'Choose a chat to start':'Chọn một cuộc trò chuyện để bắt đầu',\n  'Share':'Chia sẻ',\n  'You have not selected a member':'Bạn chưa chọn thành viên',\n    //netalochat index.js- groups\n  ' created a group':' đã tạo nhóm',\n  ' finished':' đã kết thúc',\n  'The group name can not be blank':'Tên nhóm không được để trống',\n  'The message has been deleted':'Tin nhắn đã bị xoá',\n  'Voice call':'Gọi thoại',\n  'Video call':'Gọi Video',\n  'Image':'Hình ảnh',\n  ' added ':' đã thêm ',\n  ' removed ':' đã xóa ',\n  ' has left the group':' đã rời khỏi nhóm',\n  'File':'Tập tin',\n  'Canceled':'Đã huỷ',\n  'Answer for':'Trả lời cho',\n  'forwarded a message':'đã chuyển tiếp một tin nhắn',\n  'You':'Bạn',\n  'New message':'Tin nhắn mới',\n  //netalochat index.jsx- groups\n  'View profile':'Thông tin người dùng',\n  'Manage group':'Quản lý nhóm',\n  'Mark as unread':'Đánh dấu chưa đọc',\n  'Hide conversation':'Ẩn cuộc hội thoại',\n  'Delete conversation':'Xóa cuộc hội thoại',\n  'Delete Call History': 'Xóa cuộc gọi',\n  'Leave group':'Rời khỏi nhóm',\n  'Create a group chat': 'Tạo nhóm trò chuyện',\n    //netalochat index.js- message\n  'Reply':'Trả lời',\n  'Forward':'Chuyển tiếp',\n  'Copy':'Sao chép',\n  'Cut': 'Cắt',\n  'Paste': 'Dán',\n  'Pin':\"Ghim\",\n  \"Pinned Message\": \"Tin nhắn đã ghim\",\n  'Unpin All': 'Bỏ ghim tất cả',\n  'Share Group\\'s Link': \"Chia sẽ liên kết nhóm\",\n  'Revoke Link': \"Thu hồi liên kết\",\n  'Join Group Failed': \"Tham gia nhóm không thành công\",\n  ' pinned':\" đã ghim tin nhắn\",\n  ' pinned one message':\" đã ghim một tin nhắn\",\n  ' update avatar':\" đã cập nhật hình đại diện\",\n  ' update group name':\" đã cập nhật tên cuộc trò chuyện\",\n  ' change group admin to: ':\" đã chuyển trưởng nhóm thành: \",\n  ' joined group with link': \" đã tham gia nhóm bằng liên kết\",\n  'Group is unpin all message':\"Nhóm đã bỏ ghim tin nhắn\",\n  \"Unpin all message\":\"Bỏ ghim tất cả\",\n  \"Unpin\":\"Bỏ ghim\",\n  \" unpin: \":\" đã bỏ gim: \",\n  'Delete with everyone':'Xóa với tất cả mọi người',\n  'Delete only me':'Xóa chỉ mình tôi',\n  // Netalo contact\n  'Find contacts':'Tìm danh bạ',\n  'Account information':'Thông tin tài khoản',\n  'Offline':'Đang ngoại tuyến',\n  'Find messages':'Tìm tin nhắn',\n  'Share contacts':'Chia sẻ danh bạ',\n  'View more':'Xem thêm',\n  'Select a chat to start': 'Chọn một cuộc trò chuyện để bắt đầu',\n  'Delete Contact': 'Xóa danh bạ',\n  'Edit Name Contact': 'Sửa tên danh bạ',\n  'The user does not exist on the system':'Người dùng không tồn tại trên hệ thống',\n  // Netalo callhistory\n  'Search Calls':'Tìm kiếm cuộc gọi',\n  'Call away':'Cuộc gọi đi',\n  'Incoming call':'Cuộc gọi đến',\n  'Missed call':'Cuộc gọi nhỡ',\n\n  // Netalo callhistory call\n  'Contacting...':'Đang liên hệ...',\n  // Netalo call\n  'CALLING...':'ĐANG GỌI ...',\n\n  //classes ulti.js\n  'Sunday':'Chủ Nhật',\n  'Monday':'Thứ Hai',\n  'Tuesday':'Thứ Ba',\n  'Wednesday':'Thứ Tư',\n  'Thursday':'Thứ Năm',\n  'Friday':'Thứ Sáu',\n  'Saturday':'Thứ Bảy',\n  // rxAccountInfo\n  'Last seen ':'Xem lần cuối ',\n  ' member':' thành viên',\n  'Phone number':'Số điện thoại',\n  'Block contact':'Chặn liên hệ',\n  'Unblock contact':'Bỏ chặn liên hệ',\n  'Accept':'Đồng ý',\n  'Block list': 'Danh sách liên hệ đã chặn',\n  'You haven\\'t blocked any contact': 'Bạn chưa chặn một liên hệ nào',\n  'Are you sure you want to block this contact, you and this person will not be able to make calls or send messages': \n  'Bạn có muốn chặn người này, bạn và người này sẽ không thể gọi điện hay gửi tin nhắn cho nhau',\n  'Are you sure you want to unblock this contact':'Bạn có muốn bỏ chặn người này',\n  'This person has been blocked, cannot make calls or send messages':'Người này đã bị chặn, không thể gọi điện hoặc nhắn tin',\n  'Currently, you cannot make contact to this person':'Hiện tại bạn không thể liên lạc với người này',\n  'Pin group':'Ghim nhóm',\n  'Document':'Tài liệu',\n  'Leader':'Trưởng nhóm',\n  'Group name':'Tên nhóm',\n  'Add new leader':'Thêm trưởng nhóm mới',\n  'Choose leader':'Chọn trưởng nhóm',\n  'Are you sure you want to leave the group? After leaving the group, you will not be able to read this group news':'Bạn có chắc là muốn rời khỏi nhóm không? Sau khi rời nhóm, bạn sẽ không đọc được tin của nhóm này',\n  'Are you sure you want to delete this conversation?':'Bạn có chắc là muốn xoá cuộc hội thoại này không?',\n  'Cancel':'Hủy',\n  'Edit name':'Sửa tên',\n  'Group members':'Thành viên nhóm',\n  'Add member':'Thêm thành viên',\n  'Add Member Error':'Thêm Thành Viên Không Thành Công',\n  'Link Sharing Group': 'Chia sẻ liên kết nhóm',\n  'Group QR code': 'Mã QR nhóm',\n  'Copy Link Group': 'Sao chép liên kết',\n  'Copied': 'Đã sao chép',\n  'Remove': 'Xóa',\n  'Download QR': 'Tải xuống QR',\n  'CONTACT':'LIÊN HỆ',\n  'GROUP':'NHÓM',\n  'Notification sound':'Âm thanh thông báo',\n  'Current Location': 'Vị trí hiện tại',\n  'Live Location': 'Hành trình trực tiếp',\n  'Group name contains invalid characters':'Tên nhóm có chứa ký tự không hợp lệ',\n  //rxUploadFile\n  'Photos and Videos':'Hình ảnh và Video',\n  'Documents and Files':'Tài liệu và Tập tin',\n  'Drop files here':'Thả tệp ở đây',\n  ' file is selected':' tệp đã được chọn',\n  //rxAudioRecord\n  'The file format is not suitable. Please select the file as .wav':'Định dạng file không phù hợp.Vui lòng chọn file là .wav',\n  'The file format is not suitable. Please select the file as xlsx, xls, doc, docx, ppt, pptx, txt, pdf, numbers, key, pages, zip, jpg, gif, bmp, png, m4v, avi, mpg, mp4':'Định dạng file không phù hợp.Vui lòng chọn file là xlsx, xls, doc, docx, ppt, pptx, txt, pdf, numbers, key, pages, zip, jpg, gif, bmp, png, m4v, avi, mpg, mp4',\n  'The recording upto 1 minute':'Đoạn ghi âm tối đa 1 phút',\n  'Stop recording':'Dừng thu âm',\n  'Send':'Gửi',\n\n  //rxCrud\n  'You want to delete this data!':'Bạn muốn xoá dữ liệu này !',\n  'Name':'Tên',\n  'Created at':'Được tạo lúc',\n  'Action':'Hoạt động',\n  'Off':'Tắt',\n  'Total Rows':'Tổng số hàng',\n  'Add':'Thêm',\n  'Advance Filter':'Bộ lọc nâng cao',\n  'Generate permissions':'Tạo quyền',\n  'Find by ':'Tìm theo ',\n\n  //rxGroupList\n  'Stranger':'Người lạ',\n\n  //rxInfoUser\n  'last seen today at ':'đã xem lần cuối vào hôm nay lúc ',\n  'Start the conversation secret':'Bắt đầu cuộc trò chuyện bí mật',\n  'Turn off notifications':'Tắt thông báo',\n  'Turn on notifications':'Bật thông báo',\n\n  //rxModalEdit\n  'Add a contact':'Thêm liên hệ',\n  'Full name':'Tên đại diện',\n  'Name is too short':'Tên quá ngắn',\n  'Phone is invalid':'Số điện thoại ko hợp lệ',\n  'Enter your full name':'Nhập tên đại diện',\n  'Done':'Xong',\n\n  //rxModalMouseRightChat\n  'Mark as read':'Đánh dấu đã đọc',\n  'Unpin a conversation':'Bỏ ghim cuộc trò chuyện',\n  'Pin a conversation':'Ghim cuộc trò chuyện',\n  'Hide a conversation':'Ẩn cuộc trò chuyện',\n  'Delete Conversation':'Xóa cuộc hội thoại',\n  'Delete':'Xóa',\n  'Click to select':'Nhấp vào để chọn',\n\n  //rxTemplates\n  'Review':'Đánh giá',\n  'Manage reviews':'Quản lý bài đánh giá',\n\n  //rxUploadFile\n  'Formats not supported':'Định dạng không hổ trợ',\n  'Formats not supported: ':'Định dạng không hổ trợ: ',\n  'The file format is not suitable. Please select the file as .xlsx, .xls, .doc, .docx, .ppt, .pptx, .txt, .pdf':'Định dạng file không phù hợp.Vui lòng chọn file là .xlsx, .xls, .doc, .docx, .ppt, .pptx, .txt, .pdf',\n  'The image file format is not suitable':'Định dạng file hình không phù hợp',\n  'The image file format is not suitable. Please select the image file as .jpg or .png':'Định dạng file hình không phù hợp. Vui lòng chọn file hình là .jpg hoặc là .png',\n  'The video file format is not suitable. Please select the video file as .mp4':'Định dạng file video không phù hợp. Vui lòng chọn file video là .mp4',\n  'Video size is too large':'Kích thước video quá lớn',\n  'File size is too large':'Kích thước tập tin quá lớn',\n  'Downloading your file please wait ...': 'Tập tin đang tải xuống, vui lòng chờ trong giây lát',\n\n  'is typing': 'đang nhập'\n}\n\n\n// const { rxaget } = global.rootRequire('classes/ulti')\n\nlet translate = function (value) {\n  if (typeof localStorage !== 'undefined') {\n    let language = localStorage.getItem('netaLang')\n\n    if (typeof lang[value] !== 'undefined') {\n        if (language === JSON.stringify('en')) {\n          return value\n        } else if (language === JSON.stringify('vi')) {\n          return lang[value]\n          }\n      return lang[value]\n    } else {\n      return value\n    }  \n  }\n}\n\n\nexport default translate\n","import io from 'socket.io-client'\nimport { rxsecret } from './../config/index'\n\nconst rxio = {}\nconst secret = rxsecret()\n\n// const socketURL = endPoint + namespace\n// const socketURL = 'http://127.0.0.1:2082/'\nconst socketURL = secret.socket_api + '/data'\n\nrxio.token = ''\nrxio.uin = ''\nrxio.socket = null\nrxio.connected = false\nrxio.init_connected = false\nrxio.groups = []\nrxio.callbacks = {\n}\n\nrxio.login = function (token, uin, callback) {\n  rxio.token = token\n  rxio.uin = uin\n  rxio.init_connected = true\n\n  if (rxio.token) {\n    const socket = io(socketURL, { transports: ['websocket'], query: `session=${rxio.token}` })\n    rxio.socket = socket\n    if (socket) {\n      checkConnected(callback)\n    }\n\n    return true\n  } else {\n    console.log('Please Login')\n    return false\n  }\n}\n\nrxio.disconnect = function () {\n  if (rxio.connected) {\n    try {\n      rxio.socket.disconnect()\n    } catch (e) {\n      console.log(\"disconnect\",e)\n    }\n    rxio.token = ''\n    rxio.uin = ''\n    rxio.socket = null\n    rxio.connected = false\n    rxio.groups = []\n  }else{\n    console.log(\"rxio.disconnect\",rxio.connected)\n  }\n}\n\nconst fireCallback = function (name, data) {\n  const curCallback = rxio.callbacks[name]\n  if (Array.isArray(curCallback) && curCallback.length) {\n    curCallback.forEach(ele => { if (typeof ele === 'function') { ele(data) } })\n  }\n}\n\nconst checkConnected = function (callback) {\n  // var onevent = rxio.socket.onevent;\n  // rxio.socket.onevent = function (packet) {\n  //   var args = packet.data || [];\n  //   onevent.call(this, packet);    // original call\n  //   packet.data = [\"*\"].concat(args);\n  //   onevent.call(this, packet);      // additional call to catch-all\n  // };\n  // rxio.socket.on(\"*\", function (event, data) {\n  //   console.log(\"OnAllEven\", event, data);\n  // });\n  rxio.socket.on('connect', () => {\n    rxio.connected = true\n    console.log(\"connect\",rxio.connected)\n    callback()\n    addHandlers()\n    rxio.init_connected = false\n    // rxio.getListConversation()\n  })\n\n  rxio.socket.on('disconnect', function () {\n    console.log('NetaloSDK - socket disconnected')\n  })\n\n  rxio.socket.on('reconnect', function (data) {\n    console.log('Reconnect')\n    // console.log(data)\n  })\n\n  rxio.socket.on('reconnect_error', function (data) {\n    console.log('Reconnect Error')\n    // console.log(data)\n  })\n\n  // C A L L //\n  // rxio.socket.on('start_call', function (data) {\n  //   console.log('Receive: Start Call')\n  //   fireCallback('start_call', data)\n  // })\n\n  // rxio.socket.on('answer_call', function (data) {\n  //   console.log('Receive: Answer Call')\n  //   fireCallback('answer_call', data)\n  // })\n\n  // rxio.socket.on('stop_call', function (data) {\n  //   console.log('Receive: Stop Call')\n  //   fireCallback('stop_call', data)\n  // })\n\n  // // W E B R T C //\n  // rxio.socket.on('ice_sdp', function (data) {\n  //   console.log('Receive: Ice Sdp')\n  //   fireCallback('ice_sdp', data)\n  // })\n\n  // rxio.socket.on('ice_candidate', function (data) {\n  //   console.log('Receive: Ice Candidate')\n  //   fireCallback('ice_candidate', data)\n  // })\n\n  // // C H E C K  E V E N T S //\n  // rxio.socket.on('event', function (data) {\n  //   // console.log('Receive: Event ', data)\n  //   fireCallback('event', data)\n  // })\n\n  // rxio.socket.on('message', function (data) {\n  //   // console.log('Messsage',data)\n  //   fireCallback('message', data)\n  // })\n  // rxio.socket.on('update_message', function (data) {\n  //   // console.log('Update_message',data)\n  //   fireCallback('update_message', data)\n  // })\n  // rxio.socket.on('update_group', function (data) {\n  //   // console.log('Update_group',data)\n  //   fireCallback('update_group', data)\n  // })\n  // rxio.socket.on('user_status', function (data) {\n  //   // console.log('User_status')\n  //   fireCallback('user_status', data)\n  // })\n}\nrxio.getUser_status = function (callback) {\n  console.log(\"rxio.getUser_status\",rxio.connected)\n  if (rxio.connected) {\n    // rxio.socket.on('user_status', (data) => {\n\n    //  // console.log('User_status')\n    //   // console.log(data)\n    //   callback(data)\n    // })\n  }\n}\nrxio.getWaitMessage = function (callback) {\n  console.log(\"rxio.message\",rxio.connected)\n\n  try {\n    if (rxio.connected) {\n      rxio.socket.on('message', (data) => {\n        console.log('message',data)\n        callback(data)\n      })\n    }\n  } catch (e) {\n    console.log('err message',e)\n  }\n  \n}\nrxio.getUpdateMessage = function (callback) {\n  console.log(\"rxio.update_message\",rxio.connected)\n\n  try {\n    if (rxio.connected) {\n      rxio.socket.on('update_message', (data) => {\n        console.log('Update_message',data)\n        callback(data)\n      })\n    }\n  } catch (e) {\n    console.log('err Update_message',e)\n  }\n \n}\nrxio.getPinGroup = function (callback) {\n  console.log(\"rxio.pin_group\",rxio.connected)\n\n  if (rxio.connected) {\n    rxio.socket.on('pin_group', (data) => {\n      console.log('Pin_group ',data)\n      // console.log(data)\n      callback(data)\n    })\n  }\n}\nrxio.getUnpinGroup = function (callback) {\n  console.log(\"rxio.unpin_group\",rxio.connected)\n\n  if (rxio.connected) {\n    rxio.socket.on('unpin_group', (data) => {\n      console.log('Unpin_group ',data)\n      // console.log(data)\n      callback(data)\n    })\n  }\n}\nrxio.getWaitLiveLocation = function (callback) {\n  console.log(\"rxio.live_location\",rxio.connected)\n\n  if (rxio.connected) {\n    rxio.socket.on('live_location', (data) => {\n      console.log('live_location', data)\n      callback(data)\n    })\n  }\n}\n// rxio.getWaitLiveLocation = function (callback) {\n//   if (rxio.connected) {\n//     rxio.socket.on('message', (data) => {\n//       callback(data)\n//     })\n//   }\n// }\n\n// rxio.blockUser = function ({ group_id, uni, type = \"block_user\" }, callback) {\n//   if (rxio.connected, group_id, uni) {\n//     const msg = {\n//       group_id: Number(group_id),\n//       blocked_uin: Number(uni)\n//     }\n//     rxio.socket.emit(type, msg, (data) => {\n//       callback && callback(data)\n//     })\n//   }\n// }\nrxio.blockUser = function ({ group_id, uni}, callback) {\n  console.log(\"rxio.block_user\",rxio.connected,group_id,uni)\n\n  if (rxio.connected, group_id, uni) {\n    const msg = {\n      group_id: Number(group_id),\n      blocked_uin: Number(uni)\n    }\n    rxio.socket.emit('block_user', msg, (data) => {\n      console.log('block_user',msg, data)\n      callback && callback(data)\n    })\n  }\n}\nrxio.unblockUser = function ({ group_id, uni}, callback) {\n  console.log(\"rxio.unblock_user\",rxio.connected,group_id,uni)\n\n  if (rxio.connected, group_id, uni) {\n    const msg = {\n      group_id: Number(group_id),\n      blocked_uin: Number(uni)\n    }\n    rxio.socket.emit('unblock_user', msg, (data) => {\n      console.log('unblock_user',msg, data)\n      callback && callback(data)\n    })\n  }\n}\nrxio.getUpdateGroup = function (callback) {\n  console.log(\"rxio.update_group\",rxio.connected)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.on('update_group', (data) => {\n        // console.log('Update_group ',data)\n        // console.log(data)\n        console.log('update_group',data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err update_group',e)\n  }\n  \n}\nrxio.createLink = function (group_id, callback) {\n  console.log(\"rxio.create_link\",rxio.connected,group_id)\n\n  if (rxio.connected, group_id) {\n    rxio.socket.emit('create_link', {\n      group_id: Number(group_id)\n    }, (data) => {\n      console.log('create_link',data)\n      callback(data)\n    })\n\n  }\n}\n\nrxio.revokeLink = function (token, callback) {\n  console.log(\"rxio.revokeLink\",rxio.connected,token)\n\n  if (rxio.connected, token) {\n    rxio.socket.emit('disable_link', {\n      token: token\n    }, (data) => {\n      console.log('disable_link',data)\n      callback(data)\n    })\n\n  }\n}\n\nrxio.listGroupLink = function (group_id, callback) {\n  console.log(\"rxio.list_link\",rxio.connected,group_id)\n\n  if (rxio.connected, group_id) {\n    rxio.socket.emit('list_link', {\n      group_id: Number(group_id),\n      pindex: 0,\n      psize: 10\n    }, (data) => {\n      console.log('list_link',data)\n      callback(data)\n    })\n\n  }\n}\nrxio.getWaitConnect = function (callback) {\n  console.log(\"rxio.getWaitConnect\",rxio.connected)\n  if (rxio.connected) {\n    callback(true)\n  } else {\n    callback(false)\n  }\n}\n\nrxio.getWaitEvent = function (callback) {\n  console.log(\"rxio.event\",rxio.connected)\n  try{\n    if (rxio.connected) {\n      rxio.socket.on('event', (data) => {\n        console.log('Event',data)\n        // console.log(data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err Event',e)\n  }\n}\n\nrxio.getWaitGroup = function (callback) {\n  console.log(\"rxio.group\",rxio.connected)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.on('group', (data) => {\n        console.log('New Group',data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err New Group',e)\n  }\n}\n\nrxio.getWaitMessDel = function (callback) {\n  console.log(\"rxio.delete_message\",rxio.connected)\n\n  try {\n    if (rxio.connected) {\n      rxio.socket.on('delete_message', (data) => {\n        console.log('Delete Message',data)\n        // console.log(data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err Delete Message',e)\n  }\n}\n\nrxio.sendGroupEvent = function (senderID, groupID, type) {\n  console.log(\"rxio.sendGroupEvent\",rxio.connected,senderID,groupID, type)\n\n  try {\n    if (rxio.connected && senderID && groupID && type) {\n      const msg = {\n        group_id: senderID,\n        sender_uin: groupID,\n        type: type,\n        data: ''\n      }\n      rxio.socket.emit('event', msg, (data) => {\n        console.log('Push Event',msg,data)\n      })\n    }\n  }catch(e){\n    console.log('err Push Event',e)\n  }\n  \n}\nrxio.getWaitExpired = function (callback) {\n  console.log(\"rxio.getWaitExpired\",rxio.connected)\n\n  try {\n    if (rxio.socket) {\n      rxio.socket.on('login', (data) => {\n        if (data && data.result && data.result === 2) {\n          console.log('login expired',data)\n          callback()\n        }\n      })  \n    }\n  } catch(e) {\n    console.log('err login expired',e)\n  }\n}\n\n// C A L L //\n// [\"create_call\",{\"group_id\":285622781010304,\"caller_uin\":281474976981363,\"callee_uins\":[281474976981363,281474976710895],\"media_type\":1}]\nrxio.createCall = function (group, callback) {\n  console.log(\"rxio.createCall\",rxio.connected)\n\n  try {\n    if (rxio.connected && group.group_id && group.caller_uin && group.callee_uins) {\n      rxio.socket.emit('create_call', {\n        group_id: group.group_id,\n        caller_uin: group.caller_uin,\n        callee_uins: group.callee_uins,\n        media_type: group.media_type\n      }, (data) => {\n        console.log('create_call',group,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err create_call',e)\n  }\n  \n}\n\n// [\"answer_call\",{\"group_id\":285622781010304,\"call_id\":289533106833113088,\"callee_uin\":281474976710895,\"answer\":1}]\nrxio.answerCall = function (group, callback) {\n  console.log(\"rxio.answerCall\",rxio.connected,group)\n\n  try{\n    if (rxio.connected && group.group_id && group.call_id && group.callee_uin) {\n      rxio.socket.emit('answer_call', {\n        group_id: group.group_id,\n        call_id: group.call_id,\n        callee_uin: group.callee_uin,\n        answer: 1\n      }, (data) => {\n        console.log('answer_call',group,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err answer_call',e)\n  }\n}\n\n// [\"stop_call\",{\"group_id\":285622781010304,\"call_id\":280137081500528640,\"uin\":281474976981363}]\nrxio.stopCall = function (group, callback) {\n  console.log(\"rxio.stopCall\",rxio.connected,group)\n\n  try{\n    if (rxio.connected && group.group_id && group.uin && group.call_id) {\n      rxio.socket.emit('stop_call', {\n        call_id: group.call_id,\n        group_id: group.group_id,\n        uin: group.uin\n      }, (data) => {\n        console.log('stop_call',group,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err stop_call',e)\n  }\n}\n\nrxio.updateMessage = function (mgs, callback) {\n  console.log(\"rxio.update_message\",rxio.connected,mgs)\n\n  try{\n    if (rxio.connected && mgs.group_id && mgs.message_id && mgs.status) {\n      rxio.socket.emit('update_message', {\n        group_id: mgs.group_id,\n        message_id: mgs.message_id,\n        message: \"\",\n        status: mgs.status\n      }, (data) => {\n        console.log('update_message',mgs,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err update_message',mgs,e)\n  }\n}\n\nrxio.sendCallAvailable = function (group, callback) {\n  console.log(\"rxio.sendCallAvailable\",rxio.connected,group)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.emit('event', {\n        group_id: group.group_id,\n        sender_uin: group.sender_uid,\n        receiver_uin: group.receiver_uin,\n        type: 8\n      },(data) => {\n        console.log('event sendCallAvailable',group,data)\n      })\n    }\n  }catch(e){\n    console.log('err event sendCallAvailable',group,e)\n  }\n}\n\nrxio.sendCallAvailableAnswer = function (group, callback) {\n  console.log(\"rxio.sendCallAvailableAnswer\",rxio.connected,group)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.emit('event', {\n        group_id: group.group_id,\n        sender_uin: group.sender_uid,\n        receiver_uin: group.receiver_uin,\n        type: 2\n      },(data) => {\n        console.log('event sendCallAvailableAnswer',group,data)\n      })\n    }\n  }catch(e){\n    console.log('err event sendCallAvailableAnswer',group,e)\n  }\n  \n}\n\nrxio.sendCallConnectedThisDevice = function (group, callback) {\n  console.log(\"rxio.sendCallConnectedThisDevice\",rxio.connected,group)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.emit('event', {\n        group_id: group.group_id,\n        sender_uin: group.sender_uid,\n        receiver_uin: group.receiver_uin,\n        type: 11\n      },(data) => {\n        console.log('event sendCallConnectedThisDevice',group,data)\n      })\n    }\n  }catch(e){\n    console.log('err event sendCallConnectedThisDevice',group,e)\n  }\n \n}\n\nrxio.createNewGroup = function (group, callback) {\n  console.log(\"rxio.create_group\",rxio.connected,group)\n\n  try{\n    if (rxio.connected && group && group.occupants_uins.constructor === Array && group.occupants_uins.length > 0) {\n      rxio.socket.emit('create_group', {\n        type: group.type,\n        owner_uin: group.owner_uin,\n        name: group.name,\n        avatar_url: '',\n        occupants_uins: group.occupants_uins,\n        sender_name: group.sender_name\n      }, (data) => {\n        console.log('create_group',group,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err create_group',group,e)\n  }\n}\nrxio.addAdmin = function (group, callback) {\n  console.log(\"rxio.addAdmin\",rxio.connected,group)\n\n  try {\n    if (rxio.connected) {\n      rxio.socket.emit('add_admin', {\n        group_id: group.group_id,\n        admin_uins: group.admin_uins\n      }, (data) => {\n        console.log('add_admin',group,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err add_admin',group,e)\n  }\n}\nrxio.leaveGroup = function (group, callback) {\n  console.log(\"rxio.leave_group\",rxio.connected,group)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.emit('leave_group', {\n        group_id: group.group_id\n      }, (data) => {\n        console.log('leave_group',group,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err leave_group',group,e)\n  }\n}\nrxio.deleteConversation = function (group, callback) {\n  console.log(\"rxio.delete_conversation\",rxio.connected,group)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.emit('delete_conversation', {\n        group_id: group.group_id\n      }, (data) => {\n        console.log('delete_conversation',group,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err delete_conversation',group,e)\n  }\n  \n}\nrxio.createMessage = function (mgs, callback) {\n  console.log(\"rxio.create_message\",rxio.connected,mgs)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.emit('create_message', {\n        group_id: mgs.group_id,\n        type: mgs.type,\n        version: mgs.version,\n        sender_name: mgs.sender_name,\n        message: mgs.message,\n        attachments: mgs.attachments\n      }, (data) => {\n        console.log('create_message',mgs,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err create_message',mgs,e)\n  }\n  \n}\nrxio.updateGroup = function (group, callback) {\n  console.log(\"rxio.update_group\",rxio.connected,group)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.emit('update_group', {\n        group_id: group.group_id,\n        name: group.name,\n        avatar_url: group.avatar_url,\n        push_all: group.push_all\n      }, (data) => {\n        console.log('update_group',group,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err update_group',group,e)\n  }\n}\nrxio.pinGroup = function (group_id, callback) {\n  console.log(\"rxio.pin_group\",rxio.connected,group_id)\n\n  try {\n    if (rxio.connected) {\n      rxio.socket.emit('pin_group', {\n        group_id: group_id\n      }, (data) => {\n        console.log('pin_group',group_id,data)\n        callback(data)\n      })\n    }\n  } catch(e){\n    console.log('err pin_group',group_id,e)\n  }\n \n}\nrxio.unpinGroup = function (group_id, callback) {\n  console.log(\"rxio.unpin_group\",rxio.connected,group_id)\n\n  try{\n    if (rxio.connected) {\n      rxio.socket.emit('unpin_group', {\n        group_id: group_id\n      }, (data) => {\n        console.log('unpin_group',group_id,data)\n        callback(data)\n      })\n    }\n  }catch(e){\n    console.log('err unpin_group',group_id,e)\n  }\n}\nrxio.joinLink = function (token, callback) {\n  console.log(\"rxio.join_link\",rxio.connected,token)\n\n  try {\n    if (rxio.connected && token) {\n      rxio.socket.emit('join_link', {\n        token: token\n      }, (data) => {\n        console.log('join_link',token,data)\n        callback(data)\n      })\n    }\n  } catch (e) {\n    console.log('err join_link',token,e)\n  }\n}\n// W E B R T C //\nrxio.sendIceSdp = function (webrtcSdp, callback) {\n  console.log(\"rxio.ice_sdp\",rxio.connected,webrtcSdp)\n\n  try {\n    callback = callback || function () {}\n    if (rxio.connected) {\n      rxio.socket.emit('ice_sdp', webrtcSdp, (data) => {\n        console.log('ice_sdp',webrtcSdp,data)\n        callback(data)\n      })\n    }\n  } catch (e) {\n    console.log('err ice_sdp',webrtcSdp,e)\n  }\n}\n\nrxio.sendIceCandidate = function (webrtcSdp, callback) {\n  console.log(\"rxio.ice_candidate\",rxio.connected,webrtcSdp)\n\n  try {\n    callback = callback || function () {}\n    if (rxio.connected) {\n      rxio.socket.emit('ice_candidate', webrtcSdp, (data) => {\n        console.log('ice_candidate',webrtcSdp,data)\n        callback(data)\n      })\n    }\n  } catch (e) {\n    console.log('err ice_candidate',webrtcSdp,e)\n  }\n}\n\nrxio.sendCallEvent = function (event, eventCall, callback) {\n  console.log(\"rxio.call_event\",rxio.connected,event,eventCall)\n\n  try {\n    if (rxio.connected) {\n      rxio.socket.emit('event', event)\n      rxio.socket.emit('call_event', eventCall)\n    }\n  } catch (e) {\n    console.log('err call_event',event,eventCall,e)\n  }\n \n}\n\nrxio.sendContacts = function (arrContacts, callback) {\n  try {\n    let checkArray = false\n    if (rxio && rxio.token) {\n      for (let objkey of arrContacts) {\n        let arrkeys = Object.keys(objkey) \n        if (arrkeys.indexOf('phone') === -1 && arrkeys.indexOf('name') === -1) {\n          checkArray = true\n          break\n        }\n      }\n\n      if (checkArray) {\n        callback(null, 'err')  \n        return\n      } else {\n        let params = { \"force\":0, \"contacts\": arrContacts, \"udid\":\"\"}\n        let headers = { 'Accept': 'application/json', 'Content-Type': 'application/json; charset=utf-8',  'TC-Token': rxio.token }\n        if (params.contacts && params.contacts.length > 0 ) {\n          fetch(global.rxu.config.address_book, {\n            method: 'POST',\n            body: JSON.stringify(params),\n            headers: headers }).then((res) => { return res.json() })\n            .then((json) => {\n              console.log('sendContacts',arrContacts,json)\n              callback(json, null) \n            }).catch(er => console.log('sendContacts',er))\n        } else {\n          callback(null, 'err: Contacts Empty')  \n          return\n        }  \n      }      \n    }\n  } catch(e) {\n    callback(null, 'err: '+ e.message) \n    console.log('err sendContacts',e)\n  }\n}\n\nconst addHandlers = function () {\n  // System events\n  // rxio.socket.on('message', function(data) {\n  //   console.log('Messsage')\n  //   console.log(data)\n  // });\n\n  // rxio.socket.on('update_message', function(data) {\n  //   console.log('Update Messsage')\n  //   console.log(data)\n  // });\n\n  // rxio.socket.on('user_status', function(data) {\n  //   console.log('User Status')\n  //   console.log(data)\n  // });\n\n  // rxio.socket.on('group', function(data) {\n  //   console.log('Group')\n  //   console.log(data)\n  // });\n\n  // rxio.socket.on('error', function(data) {\n  //   console.log('Error')\n  //   console.log(data)\n  // });\n\n  // rxio.socket.on('event', function(data) {\n  //   console.log('Event')\n  //   console.log(data)\n  // });\n\n  // socket?.on(\"delete_group\") { [weak self] (data, ack) in\n  //     guard let self = self else { return }\n  //     if let _data = data[0] as? [String: Any], let groupID = _data[\"group_id\"] as? String {\n  //         self.delegates.forEach({ $0?.didDeleteGroup(groupID) })\n  //     }\n  // }\n  // socket?.on(\"update_group\") { [weak self] (data, ack) in\n  //     guard let self = self else { return }\n  //     if let data = self.getDataFromAck(data), let groupUpdate = try? self.decoder.decode(NTGroupUpdate.self, from: data) {\n  //         self.delegates.forEach({ $0?.didUpdateGroup(NTConversation(groupUpdate: groupUpdate)) })\n  //     }\n  // }\n  // // MARK: - Call Events\n  // socket?.on(\"start_call\") { [weak self] (data, ack) in\n  //     guard let self = self else { return }\n  //     if let data = self.getDataFromAck(data),\n  //         let res = try? self.decoder.decode(NTCallResponse.self, from: data) {\n  //         self.delegates.forEach { $0?.didReceiveCall(event: NTCallEvent.startCall(res.call)) }\n  //     }\n  // }\n  // socket?.on(\"answer_call\") { (data, ack) in\n  //     if let data = self.getDataFromAck(data),\n  //         let res = try? self.decoder.decode(NTAnswerCall.self, from: data) {\n  //         self.delegates.forEach { $0?.didReceiveCall(event: NTCallEvent.answerCall(res)) }\n  //     }\n  // }\n  // socket?.on(\"stop_call\") { (data, ack) in\n  //     if let data = self.getDataFromAck(data),\n  //         let res = try? self.decoder.decode(NTStopCall.self, from: data) {\n  //         self.delegates.forEach { $0?.didReceiveCall(event: NTCallEvent.stopCall(res)) }\n  //     }\n  // }\n  // socket?.on(\"ice_sdp\") { (data, ack) in\n  //     if let data = self.getDataFromAck(data),\n  //         let res = try? self.decoder.decode(NTIceSdp.self, from: data) {\n  //         self.delegates.forEach { $0?.didReceiveCall(event: NTCallEvent.iceSdp(res)) }\n  //     }\n  // }\n  // socket?.on(\"ice_candidate\") { (data, ack) in\n  //     if let data = self.getDataFromAck(data),\n  //         let res = try? self.decoder.decode(NTIceCandidate.self, from: data) {\n  //         self.delegates.forEach { $0?.didReceiveCall(event: NTCallEvent.iceCandidate(res)) }\n  //     }\n  // }\n  // socket?.on(\"delete_conversation\") { (data, ack) in\n  //     if let _ = self.getDataFromAck(data) {\n  //         print(\"delete_conversation\")\n  //     }\n  // }\n}\n\n// rxio.initReconnectTimer = function() {\n// }\n\n// rxio.getListConversation = function(uid, page, pageSize, sort_by) {\n// rxio.getListConversation = function(callback) {\n//   if (rxio.connected) {\n//     let msg = {\n//       \"uin\": 281474976981363,\n//       \"sort_by\": 1,\n//       \"pindex\": 0, // index from 0\n//       \"psize\": 10\n//     }\n\n//     // rxio.socket.emit('list_group', msg, function(data){\n//       let data = {\"result\":0,\"groups\":[{\"group_id\":\"285622781010304\",\"avatar_url\":\"\",\"name\":\"\",\"type\":3,\"owner_uin\":\"281474976981363\",\"creator_uin\":\"281474976981363\",\"occupants_uins\":[\"281474976981363\",\"281474976710895\"],\"created_at\":\"1599642348\",\"updated_at\":\"0\",\"last_message_id\":\"273644758776201233\",\"blocked_uins\":[],\"removed_uins\":[],\"muted_uins\":[],\"last_active_messages\":[],\"pinned_uins\":[],\"last_message\":{\"message_id\":\"273644758776201233\",\"group_id\":\"285622781010304\",\"message\":\"hello3\",\"sender_uin\":\"281474976710895\",\"created_at\":\"1600074900841990\",\"updated_at\":\"0\",\"status\":0,\"recipient_uins\":[\"281474976981363\",\"281474976710895\"],\"received_uins\":[],\"seen_uins\":[\"281474976710895\"],\"deleted_uins\":[],\"type\":0,\"attachments\":\"\",\"group_name\":\"\",\"group_avatar\":\"\",\"sender_name\":\"Long\",\"sender_avatar\":\"GpANDOdb8XFsKO7v0pXTam8f7gsM2nLPDiSyn7FX1Sztc-2p2D9W3lM3sMjP4rv4\",\"group_type\":3,\"nonce\":\"\",\"version\":0},\"received_list\":[{\"uin\":\"281474976981363\",\"message_id\":\"273644758776201233\"},{\"uin\":\"281474976710895\",\"message_id\":\"273644758776201233\"}],\"seen_list\":[{\"uin\":\"281474976981363\",\"message_id\":\"273644758776201233\"},{\"uin\":\"281474976710895\",\"message_id\":\"273644758776201233\"}],\"status_list\":[{\"uin\":\"281474976981363\",\"online_status\":1,\"message_status\":\"\",\"last_seen_at\":0},{\"uin\":\"281474976710895\",\"online_status\":2,\"message_status\":\"\",\"last_seen_at\":1600078113}],\"last_messages\":[],\"unread_cnt\":0}]}\n//       if (data && data.groups && data.groups.constructor === Array && data.groups.length > 0) {\n//         // rxio.groups =\n//         callback(data.groups)\n//       }\n//     // });\n//   }\n// }\n\n//     // MARK: - LOGIN\n//     public func login(token: String, uin: Int) {\n//         self.token = token\n//         self.uin = uin\n//         self.manager = SocketManager(socketURL: baseURL, config: [.forceWebsockets(true), .log(false), .compress, .connectParams([\"session\": token])])\n//         self.manager.reconnects = false\n//         self.socket = manager.socket(forNamespace: \"/data\")\n//         self.socket?.connect()\n//         self.addHandlers()\n//         self.initReconnectTimer()\n//     }\n\n//     public func setBaseUrl(_ url: URL) {\n//         self.baseURL = url\n//     }\n\n//     public func runNowOrWhenSDKReady(task: @escaping NTTask) {\n//         if isReady {\n//             task(true)\n//         } else {\n//             self.listTasks.append(task)\n//         }\n//     }\n\n//     private func completeUndoneTasks() {\n//         for task in listTasks {\n//             task(true)\n//         }\n//         self.listTasks = []\n//     }\n\n//     private func initReconnectTimer() {\n//         self.reconnectTimer?.invalidate()\n//         self.reconnectTimer = Timer.scheduledTimer(timeInterval: reconnectInterval, target: self, selector: #selector(self.reconnectFired), userInfo: nil, repeats: true)\n//     }\n\n//     @objc func reconnectFired() {\n//         self.reconnectIfNeed()\n//     }\n\n//     // MARK: - LOGOUT\n//     public func logout() {\n//         self.disconnect()\n//         self.delegates.removeAll()\n//         self.socket = nil\n//     }\n\n//     public func reconnectIfNeed() {\n//         guard self.socket !== nil else { return }\n//         if\n//             self.socket?.status !== .connected &&\n//             self.socket?.status !== .connecting {\n\n//             self.socket?.connect()\n//         }\n//     }\n\n//     public func disconnect() {\n//         self.isReady = false\n//         guard self.socket !== nil else { return }\n//         self.socket?.disconnect()\n\n// //        self.reconnectTimer?.invalidate()\n// //        self.reconnectTimer = nil\n//     }\n\n//     public func connectChat(channelID: String) {\n//         self.reconnectIfNeed()\n//     }\n\n//     public var isConnected: Bool {\n//         return socket?.status === .connected\n//     }\n\n//     // MARK: - Send Call Events\n//     public func createCall(event: NTCallEvent, completion: NTCompletion<NTCallEvent>?) {\n\n//         let msg = event.toDictionary()\n\n//         socket?.emitWithAck(event.type(), msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - create_message failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion?(.failure(NTError.parsingFailed))\n//                 return\n//             }\n\n//             if let result = data.toJsonString {\n//                 print(\"NetaloSDK - create_message result: \\(result)\")\n//             }\n\n//             if case NTCallEvent.createCall = event,\n//                 let res = try? self.decoder.decode(NTCallResponse.self, from: data)\n//             {\n//                 completion?(.success(NTCallEvent.createCall(res.call)))\n//             }\n//         }\n//     }\n\n//     public func send(event: NTCallEvent, for callId: String, senderUin: String, receiverUin: String, completion: NTCompletion<NTCallEvent>? = nil) {\n// //        guard case IMCallEvent.iceCandindate = event else { return }\n\n//         var msg: [String: Any] = [:]\n\n//         if case NTCallEvent.stopCall = event {\n//             msg[\"call_id\"] = callId\n//             msg[\"uin\"] = senderUin\n//         }\n\n//         if case NTCallEvent.iceSdp(let data) = event {\n//             msg = [\n//                 \"call_id\": callId,\n//                 \"sender_uin\": senderUin,\n//                 \"receiver_uin\": receiverUin,\n//                 \"type\": data.type,\n//                 \"sdp\": data.sdp,\n//             ]\n//         }\n\n//         if case NTCallEvent.iceCandidate(let data) = event {\n//             msg = [\n//                 \"call_id\": callId,\n//                 \"sender_uin\": senderUin,\n//                 \"receiver_uin\": receiverUin,\n//                 \"candidate\": data.candidate,\n//                 \"sdp_mid\": data.sdpMid,\n//                 \"sdp_mline_index\": data.sdpMlineIndex,\n//             ]\n//         }\n\n//         if case NTCallEvent.answerCall(let data) = event {\n//             msg = [\n//                 \"call_id\": callId,\n//                 \"callee_uin\": Int(data.calleeUin) ?? 0,\n//                 \"answer\": data.type,\n//             ]\n//         }\n\n//         if case NTCallEvent.customEvent(let data) = event {\n//             msg = [\n//                 \"sender_uin\": senderUin,\n//                 \"receiver_uin\": receiverUin,\n//                 \"type\": data.type,\n//                 \"data\": data.data,\n//             ]\n//         }\n\n//         socket?.emit(event.type(), msg)\n//     }\n\n//     // MARK: - DELEGATES\n//     public func addDelegate(_ delegate: NetaloDelegate) {\n//         self.delegates.append(delegate)\n//     }\n\n//     public func removeDelegate(_ delegate: NetaloDelegate) {\n//         self.delegates.removeAll(where: { $0 === delegate })\n//     }\n\n//     // MARK: - REGISTER FCM TOKEN\n//     public func registerFCMToken(uin: Int, token: String, type: NTDefines.TokenType, completion: NTCompletion<String>?) {\n//         let msg: [String: Any] = [\n//             \"uin\": uin,\n//             \"type\": type.rawValue,\n//             \"token\": token\n//         ]\n\n//         print(\"NetaloSDK - register_profile_token: \\(token)\")\n\n//         socket?.emitWithAck(\"register_profile_token\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 completion?(NTResult.failure(.parsingFailed))\n//                 return\n//             }\n\n//             if let result = data.toJsonString {\n//                 print(\"NetaloSDK - register_profile_token result: \\(result)\")\n//                 completion?(.success(result))\n//             } else {\n//                 completion?(.failure(NTError.parsingFailed))\n//             }\n\n//         }\n//     }\n\n//     public func unregisterFCMToken(uin: Int, token: String, type: NTDefines.TokenType, completion: NTCompletion<String>?) {\n//         let msg: [String: Any] = [\n//             \"uin\": String(uin),\n// //            \"type\": type.rawValue,\n//             \"token\": token\n//         ]\n\n//         print(\"NetaloSDK - unregister_profile_token: \\(token)\")\n\n//         socket?.emitWithAck(\"unregister_profile_token\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 completion?(NTResult.failure(.parsingFailed))\n//                 return\n//             }\n\n//             if let result = data.toJsonString {\n//                 print(\"NetaloSDK - register_profile_token result: \\(result)\")\n//                 completion?(.success(result))\n//             } else {\n//                 completion?(.failure(NTError.parsingFailed))\n//             }\n\n//         }\n//     }\n\n//     // MARK: - CREATE GROUP\n//     public func createGroup(group: NTConversation, completion: NTCompletion<NTConversation>?) {\n//         var _occupantUins = group.occupantsUins\n//         _occupantUins.append(group.ownerUin)\n\n//         let msg: [String: Any] = [\n//             \"type\": group.type,\n//             \"owner_uin\": group.ownerUin,\n//             \"occupants_uins\": _occupantUins,\n//             \"name\": group.name,\n//             \"avatar_url\": group.avatarUrl,\n//         ]\n\n//         socket?.emitWithAck(\"create_group\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - create_group failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion?(NTResult.failure(.parsingFailed))\n//                 return\n//             }\n\n//             do {\n//                 let response = try self.decoder.decode(NTConversationResponse.self, from: data)\n\n//                 if response.codeCheck() {\n//                     completion?(.success(response.conversation))\n//                 } else {\n//                     completion?(NTResult.failure(.failed))\n//                 }\n\n//             } catch {\n//                 completion?(NTResult.failure(.failed))\n//             }\n\n//         }\n//     }\n\n//     // MARK: - UPDATE GROUP\n//     public func updateGroup(group: NTConversation,\n//                             addedUins: [String]? = nil,\n//                             removedUins: [String]? = nil,\n//                             completion: NTCompletion<NTConversation>?) {\n//         var msg: [String: Any] = [\n//             \"group_id\": group.groupID,\n//             \"push_all\": addedUins ?? [],\n//             \"pull_all\": removedUins ?? [],\n//         ]\n\n//         if group.name.count > 0 {\n//             msg[\"name\"] = group.name\n//         }\n\n//         if group.avatarUrl.count > 0 {\n//             msg[\"avatar_url\"] = group.avatarUrl\n//         }\n\n//         if group.ownerUin.count > 0 {\n//             msg[\"owner_uin\"] = group.ownerUin\n//         }\n\n//         socket?.emitWithAck(\"update_group\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - update_group failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion?(NTResult.failure(.parsingFailed))\n//                 return\n//             }\n\n//             do {\n//                 let response = try self.decoder.decode(NTConversationResponse.self, from: data)\n\n//                 if response.codeCheck() {\n//                     completion?(.success(response.conversation))\n//                 } else {\n//                     completion?(NTResult.failure(.failed))\n//                 }\n\n//             } catch {\n//                 completion?(NTResult.failure(.failed))\n//             }\n//         }\n//     }\n\n//     // MARK: - DELETE GROUP\n//     public func deleteGroup(groupID: String, completion: NTCompletion<String>?) {\n//         let msg: [String: Any] = [\n//             \"group_id\": groupID\n//         ]\n\n//         socket?.emitWithAck(\"delete_group\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - delete_group failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion?(NTResult.failure(.parsingFailed))\n//                 return\n//             }\n\n//             if let dict = try? JSONSerialization.jsonObject(with: data, options: []) as? [String: Any], let code = dict?[\"result\"] as? Int {\n//                 if code === 0 {\n//                     completion?(.success(\"Success\"))\n//                 } else {\n//                     completion?(NTResult.failure(NTError(code: code)))\n//                 }\n//             }\n//         }\n//     }\n\n//     // MARK: - DELETE GROUP\n//     public func deleteConversation(conversationId: String, completion: NTCompletion<String>?) {\n//         let msg: [String: Any] = [\n//             \"group_id\": conversationId\n//         ]\n\n//         socket?.emitWithAck(\"delete_conversation\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - delete_group failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion?(NTResult.failure(.parsingFailed))\n//                 return\n//             }\n\n//             if let dict = try? JSONSerialization.jsonObject(with: data, options: []) as? [String: Any], let code = dict?[\"result\"] as? Int {\n//                 if code === 0 {\n//                     completion?(.success(\"Success\"))\n//                 } else {\n//                     completion?(NTResult.failure(NTError(code: code)))\n//                 }\n//             }\n//         }\n//     }\n\n//     // MARK: - LEAVE GROUP\n//     public func leaveGroup(groupID: String, completion: NTCompletion<String>?) {\n//         let msg: [String: Any] = [\n//             \"group_id\": groupID\n//         ]\n\n//         socket?.emitWithAck(\"leave_group\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - leave_group failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion?(NTResult.failure(.parsingFailed))\n//                 return\n//             }\n\n//             if let dict = try? JSONSerialization.jsonObject(with: data, options: []) as? [String: Any], let code = dict?[\"result\"] as? Int {\n//                 if code === 0 {\n//                     completion?(.success(\"Success\"))\n//                 } else {\n//                     completion?(NTResult.failure(NTError(code: code)))\n//                 }\n//             }\n//         }\n//     }\n\n//     // MARK: - GET LIST MESSAGE\n//     public func getListMessage(groupID: String, lastMessageID: String, page: Int, pageSize: Int, completion: @escaping NTCompletion<NTMessageList>) {\n//         var msg: [String: Any] = [\n//             \"group_id\": groupID,\n//             \"pindex\": page,\n//             \"psize\": pageSize\n//         ]\n\n//         if lastMessageID.count > 0 {\n//             msg[\"last_message_id\"] = lastMessageID\n//         }\n\n//         socket?.emitWithAck(\"list_message\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - list_message failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion(NTResult.failure(.parsingFailed))\n//                 return\n//             }\n\n//             do {\n//                 let response = try self.decoder.decode(NTMessageList.self, from: data)\n//                 if response.codeCheck() {\n//                     completion(.success(response))\n//                 } else {\n//                     completion(NTResult.failure(.failed))\n//                 }\n\n//             } catch {\n//                 completion(NTResult.failure(.failed))\n//             }\n\n//         }\n//     }\n\n//     // MARK: - SEND MESSAGE\n//     public func sendMessage(_ message: NTMessage, completion: @escaping NTCompletion<NTMessage>) {\n//         var msg: [String: Any] = [\n//             \"group_id\": message.groupID,\n//             \"message\": message.message,\n//             \"sender_name\": message.senderName,\n//             \"sender_avatar\": message.senderAvatar,\n//             \"nonce\": message.messageID\n//         ]\n\n//         if message.messageType !== .text {\n//             msg[\"type\"] = message.type\n//             msg[\"attachments\"] = message.attachments.escapedString\n//                 .replacingOccurrences(of: \"\\\\\\\\\", with: \"\\\\\\\\\\\\\")\n//         }\n\n//         socket?.emitWithAck(\"create_message\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - create_message failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion(.failure(NTError.parsingFailed))\n//                 return\n//             }\n\n//             do {\n//                 let response = try self.decoder.decode(NTMessageResponse.self, from: data)\n\n//                 if response.codeCheck(), let message = response.message {\n//                     completion(.success(message))\n//                 } else {\n//                     if response.duplicateCode() {\n//                         completion(NTResult.failure(.duplicate))\n//                     } else {\n//                         completion(NTResult.failure(.failed))\n//                     }\n//                 }\n\n//             } catch {\n//                 completion(NTResult.failure(.failed))\n//             }\n\n//         }\n//     }\n\n//     // MARK: - UPDATE MESSAGE\n//     public func updateMessage(message: NTMessage,\n//                               status: Int,\n//                               completion: @escaping NTCompletion<NTMessage>) {\n//         let msg: [String: Any] = [\n//             \"group_id\": message.groupID,\n//             \"message_id\": message.messageID,\n//             \"message\": message.message,\n//             \"status\": status\n//         ]\n\n//         socket?.emitWithAck(\"update_message\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - update_message failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion(.failure(NTError.parsingFailed))\n//                 return\n//             }\n\n//             do {\n//                 let response = try self.decoder.decode(NTMessageResponse.self, from: data)\n\n//                 if response.codeCheck(), let message = response.message {\n//                     completion(.success(message))\n//                 } else {\n//                     completion(NTResult.failure(.failed))\n//                 }\n\n//             } catch {\n//                 completion(NTResult.failure(.parsingFailed))\n//             }\n\n//         }\n//     }\n\n//     // MARK: - DELETE MESSAGE\n//     public func deleteMessage(_ messageID: String, completion: @escaping NTCompletion<String>) {\n//         let msg: [String: Any] = [\n//             \"message_id\": messageID\n//         ]\n\n//         socket?.emitWithAck(\"delete_message\", msg).timingOut(after: defaultTimeout) { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - delete_message failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion(.failure(NTError.parsingFailed))\n//                 return\n//             }\n\n//             if let result = data.toJsonString {\n// //                print(\"NetaloSDK - delete_message result: \\(result)\")\n//                 completion(.success(result))\n//             } else {\n//                 completion(.failure(NTError.parsingFailed))\n//             }\n\n//         }\n//     }\n\n//     // MARK: - SEND GROUP EVENT\n//     public func sendGroupEvent(senderID: String, event: NTGroupEvent) {\n//         let msg: [String: Any] = [\n//             \"group_id\": event.groupID,\n//             \"sender_uin\": senderID,\n//             \"type\": event.kind.type(),\n//         ]\n//         self.socket?.emit(\"event\", msg)\n//     }\n\n//     // MARK: - MUTE/UNMUTE group\n//     public func muteGroup(groupID: String, isMute: Bool, completion: @escaping NTCompletion<Bool>) {\n//         let msg: [String: Any] = [\n//             \"group_id\": groupID\n//         ]\n//         let eventName = isMute ? \"mute_group\" : \"unmute_group\"\n//         print(\"NetaloSDK - \\(eventName), group_id: \\(groupID)\")\n\n//         self.socket?.emitWithAck(eventName, msg).timingOut(after: defaultTimeout, callback: { [weak self] (ack) in\n//             guard let self = self else { return }\n//             guard let data = self.getDataFromAck(ack) else {\n//                 print(\"NetaloSDK - \\(eventName) failed with error: \\(NTError.parsingFailed.localizedDescription)\")\n//                 completion(.failure(NTError.parsingFailed))\n//                 return\n//             }\n\n//             do {\n//                 if let dictionary = try JSONSerialization.jsonObject(with: data, options: .fragmentsAllowed) as? [String: Any], let code = dictionary[\"result\"] as? Int {\n//                     completion(.success(code === 0))\n//                 } else {\n//                     completion(.failure(NTError.parsingFailed))\n//                 }\n//             } catch {\n//                 completion(.failure(NTError.parsingFailed))\n//             }\n//         })\n//     }\n\nexport default rxio\n","\n/*global translate*/\nconst { netaMediaAdd, netaGroupsUpdate, netaGroupsRemove, chooseGroupAction, changeStatusLoadMess, netaAuthSettingUpdate, clickPopup } = global.rootRequire('redux')\nconst rxio = global.rootRequire('classes/socket').default\nconst { rxaget, rxChangeSlug, stringToColour, autoConvertTime, subString } = global.rootRequire('classes/ulti')\n\n\n\nexport const uploadFileImages = (fileList = [], token = '', users = [], netaauthUser = {}, group = {}) => {\n    try {\n      if (fileList.length && fileList[0]) {\n        var file = fileList[0]\n        let parts = (file.name || '').split('.');\n        let ext = parts[parts.length - 1] || '';\n        if (['png', 'jpg'].indexOf(ext.toLowerCase()) >= 0) {\n          let fileSize = file.size\n          let extFilename = 'png'\n\n          let _URL = window.URL || window.webkitURL\n          let img = new Image();\n          let objectUrl = _URL.createObjectURL(file)\n\n          let dataParams = {\n            content_type: 'image/' + extFilename,\n            name: 'netalo_' + Math.floor(Date.now()),\n            public: true,\n            size: fileSize\n          }\n          let header = { 'TC-Token': token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n          let requestOptions = {\n            method: 'POST', headers: header, body: JSON.stringify(dataParams), redirect: 'follow'\n          };\n\n          fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n            if (json && json.blod_object && json.blod_object.form_data) {\n              let dataUpload = new FormData()\n              let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n              for (let key of arrKeys) {\n                if (json.blod_object.form_data[key]) {\n                  dataUpload.append(key, json.blod_object.form_data[key])\n                }\n              }\n              dataUpload.append('file', file, file.name)\n              dataUpload.append('success_action_status', 201)\n\n              fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n                if (result.indexOf('Key') !== -1) {\n                  let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                  let strresult = result.match(patt);\n                  if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                    let key = strresult[1]\n                    if (key) {\n                      let optComplete = {\n                        method: 'PUT',\n                        headers: header,\n                        body: JSON.stringify({\n                          content_type: json.content_type, id: json.id, name: json.name, size: json.size, uid: json.uid\n                        })\n                      };\n\n                      fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                        .then(response => {\n                          if (response.status === 200) {\n                            try {\n                              img.onload = () => {\n                                _URL.revokeObjectURL(objectUrl)\n                                const arrUsers = users\n                                const user = netaauthUser\n                                const objUser = arrUsers[user.id.toString()]\n                                let msg = {\n                                  group_id: Number(group.group_id),\n                                  avatar_url: key,\n                                }\n                                if (msg && msg.group_id) {\n                                  if (rxio.connected) {\n                                    rxio.socket.emit(\"update_group\", msg, (data) => {\n                                      if (data && data.result === 0) {\n                                        let msg = {\n                                          group_id: Number(group.group_id),\n                                          type: 6,\n                                          version: 1,\n                                          nonce: (Math.floor(Date.now()) * 1000).toString(),\n                                          sender_name: rxaget(objUser, 'full_name', ''),\n                                          attachments: JSON.stringify({\n                                            updated_group_avatar: key,\n                                            mediaType: 0, type: \"update_group\"\n                                          }).replace(/\"/g, '\\\\\"'),\n                                          \"is_encrypted\": false, \"mentioned_all\": false\n                                        }\n                                        rxio.socket.emit('create_message', msg, (dataMess) => {\n                                          if (dataMess) {\n                                            let groupObj = JSON.parse(JSON.stringify(group))\n                                            groupObj.avatar_url = key\n                                            groupObj.last_message = dataMess.message\n                                            groupObj.last_message_id = dataMess.last_message_id\n                                            changeStatusLoadMess()\n                                            chooseGroupAction(groupObj)\n                                            netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n                                          }\n                                        })\n                                      }\n                                    })\n                                  }\n                                }\n                              }\n                              img.src = objectUrl\n                            } catch (e) { }\n                          }\n                        }).catch(errorPut => console.log('error', errorPut));\n                    }\n                  }\n                }\n              })\n            }\n          }).catch(error => console.log('create_blob error', error))\n        } else alert(translate('The image file format is not suitable. Please select the image file as .jpg or .png'))\n      }\n    } catch (error) { console.log('upload error', error) }\n  }","/* global navigator, RTCSessionDescription, RTCIceCandidate, RTCPeerConnection */\nimport { connect } from 'react-redux'\nimport * as Jsx from './rxCall.jsx'\n\nconst RxComponent = global.rootRequire('components/shares/rxComponent').default\nconst { rxaget, secondsToTime } = global.rootRequire('classes/ulti')\n\nconst { netaCallHistoryUpdate, changeStatusTabmore } = global.rootRequire('redux')\nconst rxio = global.rootRequire('classes/socket').default\n\nconst iceServers = {\n  iceServers: [{\n    urls: ['turn:turn1.netalo.vn:3478'],\n    username: 'developer',\n    credential: 'password'\n  }, {\n    urls: ['stun:stun1.netalo.vn:3478'],\n    username: 'developer',\n    credential: 'password'\n  }]\n}\n\nlet mediaConstraints = {\n  audio: true,\n  video: true,\n}\n\nclass Component_ extends RxComponent {\n  constructor(props, context) {\n    super(props, context, Jsx)\n    this.state = {\n      group: rxaget(this.props, 'group', {}),\n\n      flagCalling: false,\n      ringtone: false,\n      flagStartCall: false,\n      isStarted: false,\n      flagMic: true,\n      flagCamera: false,\n\n      seconds: 0,\n      time: {h:'00',m:'00',s:'00'}\n    }\n\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.users = rxaget(this.props, 'user.users', {}) || {}\n    this.type = rxaget(this.props, 'type', '')\n\n    this.localStream = null\n    this.remoteStream = null\n    this.rtcPeerConnection = null\n    this.timer = null\n    this.timeoutCounter = null\n    this.secondsCounter = 0\n    \n    this.isRoomCreator = false\n    \n    this.callObj = {}\n\n    this.setRemoteStream = this.setRemoteStream.bind(this)\n    this.sendIceCandidate = this.sendIceCandidate.bind(this)\n  }\n\n  componentDidMount() {\n    this.loadHandleSocket()  \n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if ((rxaget(this.props, 'netaCall.status', '') !== rxaget(prevProps, 'netaCall.status', '')) && ['voicecall', 'videocall'].indexOf(rxaget(this.props, 'netaCall.type_call', '')) !== -1) {\n      let typecall = (rxaget(this.props, 'netaCall.type_call', '') === 'videocall') ? 2 : 1\n      let grouptmp = rxaget(this.props, 'netaCall.payload', {})\n      this.onClickStartCall(typecall, grouptmp)\n    }\n  }\n\n  loadHandleSocket() {\n    rxio.getWaitConnect((data) => {\n      if (rxio.connected) {\n        rxio.socket.on('event', async (data) => {\n          if (data.type === 5) {\n            if (this.state.flagStartCall && this.callObj && this.callObj.media_type && this.callObj.media_type === 1) {\n              this.setState({flagCamera: true}, () => {\n                if (this.state.flagStartCall && this.callObj && this.callObj.media_type) {\n                  const receiverUin = (this.userid.toString() === rxaget(data, 'sender_uin', \"\")) ? rxaget(data, 'receiver_uin', \"\") : this.userid.toString()\n                  rxio.socket.emit('event', {\n                    group_id: rxaget(data, 'group_id', ''),\n                    sender_uin: this.userid,\n                    receiver_uin: Number(receiverUin),\n                    type: 7\n                  }, (data1) => {})  \n                }\n              })\n            }\n          }\n\n          if (data.type === 7) {\n            if (this.state.flagStartCall && this.callObj && this.callObj.media_type && this.callObj.media_type === 1) {\n              const receiverUin = (this.userid.toString() === rxaget(data, 'sender_uin', \"\")) ? rxaget(data, 'receiver_uin', \"\") : this.userid.toString()\n              rxio.socket.emit('event', {\n                group_id: rxaget(data, 'group_id', ''),\n                sender_uin: this.userid,\n                receiver_uin: Number(receiverUin),\n                type: 7\n              }, (data1) => {}) \n            }      \n          }\n\n          if (data.type === 8) {\n            rxio.sendCallAvailableAnswer({\n              group_id: rxaget(data, 'group_id', \"\"),\n              sender_uid: rxaget(data, 'sender_uin', \"\"),\n              receiver_uin: rxaget(data, 'receiver_uin', \"\"),\n              type: 2\n            })\n          }\n\n          if (data.type === 9) {\n          }\n\n          if (data.type === 10) {\n            // if (this.call_id) {\n            //   rxio.socket.emit('call_status', { group_id: data.group_id, call_id: this.call_id }, (data) => {\n            //     if (data.status === 1 && data.result === 0) {\n            //       this.setState({ call_answer: true })\n            //       const receiverUin = global.rxu.get(global.rxu.array(this.state.objsCalling.callee_uins).filter(ele => (ele !== this.userid)), [0])\n            //       rxio.socket.emit('event', {\n            //         group_id: data.group_id,\n            //         sender_uin: this.userid.toString(),\n            //         receiver_uin: receiverUin,\n            //         type: 4,\n            //         data: ''\n            //       }, (data1) => {})\n            //       rxio.socket.emit('event', {\n            //         group_id: data.group_id,\n            //         sender_uin: this.userid.toString(),\n            //         receiver_uin: receiverUin,\n            //         type: 8,\n            //         data: ''\n            //       }, (data2) => {})\n            //     }\n            //   })\n            // }\n          }\n        })\n\n        // Nhận cuộc gọi\n        rxio.socket.on('start_call', async (data) => {\n          if (!this.state.flagCalling) {\n            // Load local Stream First\n            try {\n              this.callObj = rxaget(data, 'call', {})\n            \n              this.setState({flagCalling: true, ringtone: true}, async () => {\n                this.localVideoComponent = document.getElementById('local-video')\n                this.remoteVideoComponent = document.getElementById('remote-video')\n\n                await this.setLocalStream(mediaConstraints)\n              })\n            } catch(e) {}\n          }\n        })\n\n        // Nhận offer\n        rxio.socket.on('ice_sdp', async (event) => {\n          // console.log('Socket event callback: offer')\n          try {\n            if (this.state.flagStartCall) {\n              if (event.sdp) {\n                if (!this.isRoomCreator) {\n                  this.rtcPeerConnection = new RTCPeerConnection(iceServers)\n                  this.addLocalTracks(this.rtcPeerConnection)\n                  this.rtcPeerConnection.ontrack = this.setRemoteStream\n                  this.rtcPeerConnection.onicecandidate = this.sendIceCandidate\n                  this.rtcPeerConnection.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: event.sdp }))\n                  await this.createAnswer(this.rtcPeerConnection)\n                } else {\n                  if (this.rtcPeerConnection) {\n                    this.rtcPeerConnection.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: event.sdp }))  \n                  } \n                }  \n              }  \n            } else {\n              this.stopStream()\n            }\n            \n          } catch(e) {}\n        })\n\n        // Nhận answer\n        rxio.socket.on('answer_call', (event) => {\n          // console.log('Socket event callback: webrtc_answer')\n          try {\n            this.setState({isStarted: true, ringtone: false, flagStartCall: true}, async () => {\n              if (this.isRoomCreator) {\n                this.rtcPeerConnection = new RTCPeerConnection(iceServers)\n                this.addLocalTracks(this.rtcPeerConnection)\n                this.rtcPeerConnection.ontrack = this.setRemoteStream\n                this.rtcPeerConnection.onicecandidate = this.sendIceCandidate\n\n                await this.createOffer(this.rtcPeerConnection)  \n                this.startTimer()            \n              }  \n            })\n          } catch(e) {}\n        })\n\n        // Nhận stop call\n        rxio.socket.on('stop_call', (event) => {\n          this.stopStream()  \n        })\n\n        // Nhan Candidate\n        rxio.socket.on('ice_candidate', (event) => {\n          // console.log('Socket event callback: webrtc_ice_candidate')\n          // ICE candidate configuration.\n          if (this.state.flagStartCall) {\n            try {\n              var candidate = new RTCIceCandidate({\n                sdpMid: event.sdp_mid,\n                sdpMLineIndex: event.sdp_mline_index,\n                candidate: event.candidate,\n              })\n              if (this.rtcPeerConnection) {\n                this.rtcPeerConnection.addIceCandidate(candidate)  \n              }\n            } catch(e) {}  \n          } else {\n            this.stopStream()\n          }\n        })    \n      } else {\n        setTimeout(() => {\n          this.loadHandleSocket()  \n        }, 300)\n      }\n    })\n  }\n\n  // Gọi đi\n  async onClickStartCall(type, grouptmp) { \n    type = type || 2\n    this.isRoomCreator = true\n    let arrUser = rxaget(grouptmp, 'occupants_uins', [])\n    if (arrUser.length === 2) {\n      let remoteUser = arrUser.filter(uid => uid !== this.userid)[0]\n\n      if(remoteUser !== '' && remoteUser !== this.userid){\n        let ele = grouptmp || {}\n        ele.callee_uins = arrUser.filter(uid => uid.toString() !== this.userid.toString())\n        ele.caller_uin = this.userid\n        ele.media_type = type\n\n        rxio.createCall(ele, (data) => {\n          // Load local Stream First\n          this.callObj = rxaget(data, 'call', {})\n          \n          this.setState({flagCalling: true, ringtone: true}, async () => {\n            this.localVideoComponent = document.getElementById('local-video')\n            this.remoteVideoComponent = document.getElementById('remote-video')\n\n            await this.setLocalStream(mediaConstraints)\n\n\n            this.startTimeoutCounter()\n\n            // setTimeout(() => { if (!this.state.isStarted) { this.onClickStopCall() } }, 30000)\n          })\n        })\n\n      } else {\n        console.log('Remote user not exist')\n      }\n    } \n  }\n\n  // Chấp nhận cuộc gọi\n  acceptCall() {\n    if (this.callObj && this.callObj.callee_uins && this.callObj.callee_uins.constructor === Array && this.callObj.callee_uins.length === 2) {\n      rxio.socket.emit('answer_call', {\n        group_id: rxaget(this.callObj, 'group_id', ''),\n        call_id: rxaget(this.callObj, 'call_id', ''),\n        callee_uin: this.userid.toString(),\n        answer: 1\n      }, () => {})\n            \n      this.setState({ringtone: false, flagStartCall: true, isStarted: true}, () => {\n        this.startTimer()\n      })  \n    }\n  }\n\n  stopStream() {\n    try {\n      clearInterval(this.timer)  \n      this.timer = null\n    } catch(e) {}\n\n    try {\n      if (this.localStream) {\n        const tracks =  this.localStream.getTracks()\n        tracks.forEach(function (track) { track.stop() })\n        this.localStream = null  \n      }\n    } catch(e) {}\n\n    try {\n      if (this.remoteStream) {\n        const remotetracks =  this.remoteStream.getTracks()\n        remotetracks.forEach(function (track) { track.stop() })\n        this.remoteStream = null  \n      }\n    } catch(e) {}\n    \n    if (this.rtcPeerConnection) {\n      this.rtcPeerConnection.close() \n      this.rtcPeerConnection = null\n    }\n\n    this.isRoomCreator = false\n    this.callObj = {}\n\n    this.stopTimeoutCounter()\n\n    this.setState({ringtone: false, flagCalling: false, flagStartCall: false, isStarted: false, seconds: 0, flagMic: true, flagCamera: false, time: {h:'00',m:'00',s:'00'} })\n  }\n\n  // Kết thục cuộc gọi\n  onClickStopCall() {\n    const params = {\n      group_id: rxaget(this.callObj, 'group_id', ''),\n      uin: this.userid,\n      call_id: rxaget(this.callObj, 'call_id', ''),\n    }\n    \n    rxio.stopCall(params, (data) => {})\n\n    try {\n      if (!this.state.flagStartCall) {\n        // const receiverUin = global.rxu.array(rxaget(this.callObj, 'callee_uins', [])).filter(ele => (ele !== this.userid.toString()))[0]\n\n        let paramsupdate = {\n          group_id: rxaget(this.callObj, 'group_id', ''),\n          message_id: rxaget(this.callObj, 'message_id', ''),\n          message: '',\n          status: 2\n        }\n        rxio.updateMessage(paramsupdate, (dataMsg1) => {       \n        })\n\n        paramsupdate['status'] = 3\n        rxio.updateMessage(paramsupdate, (dataMsg2) => {})\n\n        rxio.socket.emit('event', {\n          group_id: rxaget(this.callObj, 'group_id', ''),\n          sender_uin: this.userid,\n          type: 9\n        }, (data1) => {})\n        rxio.socket.emit('event', {\n          group_id: rxaget(this.callObj, 'group_id', ''),\n          sender_uin: this.userid,\n          type: 10\n        }, (data1) => {})  \n      }\n    } catch(e) {}\n\n    this.stopStream()\n\n    \n    \n\n\n    try {\n      if (this.type === 'callfunc') {\n        this.props.stopCall()  \n      } \n    } catch(e) {\n      console.log(e)\n    }\n    \n  }\n\n  // Count time\n  startTimer() {\n    this.stopTimeoutCounter()\n    setTimeout(() => {\n      if (this.state.seconds === 0) {\n        this.timer = setInterval(() => {this.countUp()}, 1000)\n      }\n    }, 1000)\n  }\n\n  countUp() {\n    let seconds = this.state.seconds + 1;\n    this.setState({\n      time: secondsToTime(seconds),\n      seconds: seconds,\n    })\n  }\n\n  startTimeoutCounter() {\n    setTimeout(() => {\n      if (this.secondsCounter === 0) {\n        this.timeoutCounter = setInterval(() => {\n          this.secondsCounter += 1\n\n          if (this.secondsCounter > 30) {\n            this.onClickStopCall()\n          }\n        }, 1000)\n      }\n    }, 1000)\n  }\n\n  stopTimeoutCounter() {\n    try {\n      clearInterval(this.timeoutCounter)\n      this.timeoutCounter = null\n    } catch(e) {\n      console.log(e)\n    }  \n\n    this.secondsCounter = 0\n  }\n\n  getAvatar(e, user) {\n    if (user.profile_url) {\n      e.target.src=global.rxu.config.get_static + user.profile_url  \n    } else {\n      e.target.src='./images/default/static/avadefault.svg'\n    }\n  }\n\n  // Fuction Handle Stream\n  async setLocalStream(mediaConstraints) {\n    let stream\n    try {\n      navigator.permissions.query({name: 'microphone'}).then((permissionObj) => {\n        if (permissionObj.state === 'denied') {\n          alert('This app don\\'t currently have permission to access your microphone. Allow this app to access your microphone.')\n        }\n      }).catch((error) => {})\n\n      navigator.permissions.query({name: 'camera'}).then((permissionObj) => {\n        if (permissionObj.state === 'denied') {\n          alert('This app don\\'t currently have permission to access your camera. Allow this app to access your camera.')\n        }\n      }).catch((error) => {})\n\n      stream = await navigator.mediaDevices.getUserMedia(mediaConstraints)\n    } catch (error) {\n      console.error('Could not get user media', error)\n    }\n\n    try {\n      this.localStream = stream\n      this.localVideoComponent.srcObject = stream\n    } catch(e) {}\n  }\n\n  addLocalTracks(rtcPeerConnection) {\n    try {\n      if (this.localStream) {\n        this.localStream.getTracks().forEach((track) => {\n          rtcPeerConnection.addTrack(track, this.localStream)\n        })  \n      }\n    } catch(e) {}\n  }\n\n  async createOffer(rtcPeerConnection) {\n    let sessionDescription\n    try {\n      sessionDescription = await rtcPeerConnection.createOffer()\n      rtcPeerConnection.setLocalDescription(sessionDescription)\n    } catch (error) {\n      console.error(error)\n    }\n\n    let sender_uin = this.userid.toString()\n    rxio.sendIceSdp({\n      group_id: rxaget(this.callObj, 'group_id', ''),\n      call_id: rxaget(this.callObj, 'call_id', ''),\n      sender_uin: sender_uin,\n      receiver_uin: global.rxu.array(rxaget(this.callObj, 'callee_uins', [])).filter(ele => (ele !== sender_uin))[0],\n      type: 1,\n      sdp: sessionDescription.sdp\n    })\n  }\n\n  async createAnswer(rtcPeerConnection) {\n    let sessionDescription\n    try {\n      sessionDescription = await rtcPeerConnection.createAnswer()\n      rtcPeerConnection.setLocalDescription(sessionDescription)\n    } catch (error) {\n      console.error(error)\n    }\n\n    let sender_uin = this.userid.toString()\n    rxio.sendIceSdp({\n      group_id: rxaget(this.callObj, 'group_id', ''),\n      call_id: rxaget(this.callObj, 'call_id', ''),\n      sender_uin: sender_uin,\n      receiver_uin: global.rxu.array(rxaget(this.callObj, 'callee_uins', [])).filter(ele => (ele !== sender_uin))[0],\n      type: 2,\n      sdp: sessionDescription.sdp\n    })\n\n    rxio.socket.emit('call_event', {\n      group_id: rxaget(this.callObj, 'group_id', ''),\n      call_id: rxaget(this.callObj, 'call_id', ''),\n      event: 2\n    }, (data) => {})\n  }\n\n  setRemoteStream(event) {\n    try {\n      if (this.remoteVideoComponent) {\n        this.remoteVideoComponent.srcObject = event.streams[0]\n        this.remoteStream = event.stream    \n      }\n    } catch(e) {}\n  }\n\n  sendIceCandidate(event) {\n    if (event.candidate) {\n      let sender_uin = this.userid.toString()\n      rxio.sendIceCandidate({\n        call_id: rxaget(this.callObj, 'call_id', ''),\n        group_id: rxaget(this.callObj, 'group_id', ''),\n        receiver_uin: global.rxu.array(rxaget(this.callObj, 'callee_uins', [])).filter(ele => (ele !== sender_uin))[0],\n        sdp_mline_index: event.candidate.sdpMLineIndex,\n        sender_uin: sender_uin,\n        candidate: event.candidate.candidate\n      })\n    }\n  }\n\n  changeFlagMic() {\n    let flagMic = this.state.flagMic\n    this.setState({flagMic: !flagMic}, () => {\n      try {\n        this.localStream.getAudioTracks()[0].enabled = !flagMic\n      } catch(e) {}\n    })\n  }\n\n  changeFlagCamera() {\n    let flagCamera = this.state.flagCamera\n    this.setState({flagCamera: !flagCamera}, () => {\n      if (this.state.flagStartCall && this.callObj && this.callObj.media_type === 1) {\n        try {\n          const receiverUin = global.rxu.array(rxaget(this.callObj, 'callee_uins', [])).filter(ele => (ele !== this.userid.toString()))[0]\n          if (flagCamera) {\n            rxio.socket.emit('event', {\n              group_id: rxaget(this.callObj, 'group_id', ''),\n              sender_uin: this.userid,\n              receiver_uin: Number(receiverUin),\n              type: 6\n            }, (data1) => {})  \n          } else {\n            rxio.socket.emit('event', {\n              group_id: rxaget(this.callObj, 'group_id', ''),\n              sender_uin: this.userid,\n              receiver_uin: Number(receiverUin),\n              type: 5\n            }, (data1) => {})  \n          }          \n        } catch(e) {}\n      }\n    })\n  }\n\n  render() {\n    return this.renderComponent()\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  langValue: state.langValue,\n  rxgroup: state.rxgroup,\n  user: state.user,\n  netaauth: state.netaauth,\n  netaCallHistory: state.netaCallHistory,\n  netaCall: state.netaCall\n})\n\nconst mapDispatchToProps = {\n  netaCallHistoryUpdate,  \n  changeStatusTabmore\n}\n\nconst ComponentWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component_)\n\nexport default ComponentWrapped\n","/*global translate*/\nimport React from 'react'\nconst { rxgetLocal } = global.rootRequire('classes/request')\nconst { rxaget } = global.rootRequire('classes/ulti')\nconst { checkNameUser } = global.rootRequire('classes/chat')\nglobal.isclient && require('./rxCall.css')\n\nexport const renderComponent = (vm) => {\n  return (<div>\n  \t{ vm.state.flagCalling && vm.renderZCall() }\n  </div>)\n}\n\nexport const renderZCall = (vm) => {\n  let typeCall = rxaget(vm.callObj, 'media_type', 1)\n  let remote_uin = rxaget(global.rxu.array(rxaget(vm.callObj, 'callee_uins', [])).filter(ele => (ele !== vm.userid.toString())), '0', '')\n  let objUsers = vm.users\n  if (!objUsers[remote_uin]) {\n    let rxusers = rxgetLocal('rxusers')\n    try { if (typeof(rxusers) !== 'undefined') { objUsers = JSON.parse(rxusers) } } catch(e) {}\n  }\n  let uname = (objUsers[remote_uin]) ? checkNameUser(objUsers[remote_uin]) : ''\n  \n  return <div className='zchat_callscreen'>\n\t  \n  \t<div className='zchat_callscreen_bg'></div>\n\n    {vm.state.ringtone && <audio controls autoPlay hidden loop>\n      <source src='./sounds/soundcallmess.mp3' type='audio/mpeg' />\n    </audio>}\n\n  \t<div className='zchat_callscreen_main'>\n  \t\t<div className='zchat_callcenter'>\n  \t\t\t<img className='zchat_callbox_close' alt='' src={'./images/default/icons/icon-close.png'} onClick={e => vm.onClickStopCall()}/>\n  \t\t\t<div className='zchat_callbox'>\n\t        <div className='zchat_callInfo'>\n\n\t\t        <div className='zcall_container'>\n\t\t        \t<div className='zcall_info'>{uname}</div>\n              {!vm.state.flagStartCall && <div className='zcall_content'>\n                {translate('Contacting...')}\n              </div>}\n              {vm.state.flagStartCall && <div className='zcall_content'>\n                {rxaget(vm.state.time, 'm', '00')}:{rxaget(vm.state.time, 's', '00')}\n              </div>}\n\n\t            <div className='zcall_avatar'>\n                <img className='zcall_avatarimg' src={`${global.rxu.config.cdn_endpoint}` + rxaget(objUsers, remote_uin+'.profile_url', '')} alt='profile_url' onError={(e)=>{e.target.onerror = null; vm.getAvatar(e, rxaget(objUsers, remote_uin, {}))}} /> \n              </div>\n              \n\t            <div className='zcall_buttons' id='zcall_buttons'>\n\t            \t<div className='zcall_group_button'>\n                  {vm.state.flagStartCall && <div className='zcall_button' onClick={e => vm.changeFlagMic()}>\n                    <img className='zcall_btn zcall_btn_bg' alt='' src={'./images/default/icons/mic_enable.svg'} style={(vm.state.flagMic) ? {display: 'block'} : {display: 'none'}} />\n                    <img className='zcall_btn zcall_btn_border' alt='' src={'./images/default/icons/mic_disable.svg'} style={(vm.state.flagMic) ? {display: 'none'} : {display: 'block'}}/>\n                  </div>}\n                  {(vm.state.flagStartCall && typeCall === 1) && <div className='zcall_button' onClick={e => vm.changeFlagCamera()}>\n                    <img className='zcall_btn zcall_btn_border' alt='' src={'./images/default/icons/call_video_enable.svg'} style={(!vm.state.flagCamera) ? {display: 'block'} : {display: 'none'}}/>\n                    <img className='zcall_btn zcall_btn_bg' alt='' src={'./images/default/icons/call_video_disable.svg'} style={(vm.state.flagCamera) ? {display: 'block'} : {display: 'none'}} />\n                  </div>}\n\t                <div className='zcall_button' >\n\t                  <img className='zcall_cancel' alt='' src={'./images/default/icons/cancelcall.png'} onClick={e => vm.onClickStopCall()} />\n\t                </div>\n                  {(!vm.state.flagStartCall && !vm.isRoomCreator) && <div className='zcall_button' >\n\t                  <img className='zcall_answer' alt='' src={'./images/default/icons/acceptcall.png'} onClick={e => vm.acceptCall()} />\n\t                </div>}\n\n\t              </div>\n\t            </div>\n\t          </div>\n\t        </div>\n\t      </div>\n\t    </div>\n\n\t    <div className='zchat_videocallcenter' style={((typeCall === 2 || vm.state.flagCamera) && vm.state.flagStartCall) ? {display: 'block'} : {display: 'none'}}>\n        <div className='zchat_videocallinfo'>\n          <div className='zcall_info'>{uname}</div>\n          <div className='zcall_content'>\n            {rxaget(vm.state.time, 'm', '00')}:{rxaget(vm.state.time, 's', '00')}\n          </div>\n        </div>  \n\n        <div className='zchat_videocallmain'>\n          <div className='zchat_videocall_remote'>\n            <video id=\"remote-video\" autoPlay=\"autoplay\"></video>\n          </div>\n\n          <div className='zchat_videocall_local'>\n            <video id=\"local-video\" autoPlay=\"autoplay\" muted=\"muted\"></video>\n          </div>\n        </div>\n\n        <div className='zcall_buttons' id='zcall_buttons'>\n          <div className='zcall_group_button'>\n            {vm.state.flagStartCall && <div className='zcall_button' onClick={e => vm.changeFlagMic()}>\n              <img className='zcall_btn zcall_btn_bg' alt='' src={'./images/default/icons/mic_enable.svg'} style={(vm.state.flagMic) ? {display: 'block'} : {display: 'none'}} />\n              <img className='zcall_btn zcall_btn_border' alt='' src={'./images/default/icons/mic_disable.svg'} style={(vm.state.flagMic) ? {display: 'none'} : {display: 'block'}}/>\n            </div>}\n            {(vm.state.flagStartCall && typeCall === 1) && <div className='zcall_button' onClick={e => vm.changeFlagCamera()}>\n              <img className='zcall_btn zcall_btn_border' alt='' src={'./images/default/icons/call_video_enable.svg'} style={(!vm.state.flagCamera) ? {display: 'block'} : {display: 'none'}}/>\n              <img className='zcall_btn zcall_btn_bg' alt='' src={'./images/default/icons/call_video_disable.svg'} style={(vm.state.flagCamera) ? {display: 'block'} : {display: 'none'}} />\n            </div>}\n            <div className='zcall_button' >\n              <img className='zcall_cancel' alt='' src={'./images/default/icons/cancelcall.png'} onClick={e => vm.onClickStopCall()}  />\n            </div>\n\n          </div>\n        </div>\n      </div>\n  \t</div>\n    \n  </div>\n}","/*global translate*/\nconst { rxaget, rxChangeSlug } = global.rootRequire('classes/ulti')\nconst { rxgetLocal } = global.rootRequire('classes/request')\n\nexport function addContact({ arrContacts = [], udid = '', token, typeForce = 0 }, callback) {\n  try {\n    let address_book_link = global.rxu.config.base_api_neta + '/api/address_book.json'\n    let params = { \"force\": typeForce, \"contacts\": arrContacts, \"udid\": \"\" }\n    let headers = { 'Accept': 'application/json', 'Content-Type': 'application/json; charset=utf-8', 'TC-Token': token }\n    // console.log('addContact',arrContacts,udid,token)\n    if (params.contacts && params.contacts.length > 0) {\n      fetch(address_book_link, {\n        method: 'POST',\n        body: JSON.stringify(params),\n        headers: headers\n      }).then((res) => { return res.json() })\n        .then((json) => {\n          console.log(\"addContact\",headers,json)\n          callback && callback(json)\n        }).catch(er => console.log(\"err addContact\",er))\n    }\n  } catch (error) { }\n}\nexport async function fetchContact ({netaContact={},token=''},callback) {    \n  if (token) {\n    const api_address_book = global.rxu.config.address_book\n    const max_size = 100\n    let checkBreak = true, newContacts=[]\n    for (let i=0; i < 1000; i ++) {\n      let offset = i\n      const params = {\n        offset: offset,\n        limit: max_size,\n        compact: 0\n      }\n      let tempBody = ''\n      for (const property in params) {\n        if (params.hasOwnProperty(property)) {\n          tempBody += `${property}=${params[property]}&`\n        }\n      }\n      // console.log(\"fetchContact params\",params)\n      let res = await fetch(api_address_book + '?' + tempBody, { method: 'GET', headers: { Accept: 'application/json', 'TC-Token': token, Connection: 'Keep-Alive', 'Accept-Encoding': 'gzip' }, body: null })\n      try {\n        let json = await res.json()\n        if (res && [404,401].indexOf(res.status) !== -1) { checkBreak = true }\n        else if (json && json.constructor === Array && json.length > 0) {\n          for (let ocontact of json) {\n            if (typeof(netaContact) === 'object' && typeof(netaContact[ocontact.phone]) === 'undefined') {\n              checkBreak = false\n              break\n            }\n          }\n          newContacts=[...newContacts,...json]\n          if (json.length < max_size) { checkBreak = true }\n        }\n      } catch(e) {\n        checkBreak = true \n      }\n      if (checkBreak === true) {\n        // console.log(\"fetchContact end\",newContacts.length)\n        callback && callback(newContacts)\n        break \n      }\n      await new Promise(r => setTimeout(r, 1000));\n    }\n  }\n}\nexport function checkBlock(group, userid) {\n  let isBlocked = 0\n  try {\n    if (group && group.type && group.type === 3 && group.blocked_uins) {\n      group.blocked_uins.map(i => {\n        let index = group.occupants_uins.indexOf(i.toString())\n        if (index !== -1) {\n          isBlocked = 1 // mình chặn ng ta\n          if (userid && group.occupants_uins[index].toString() === userid.toString()) {\n            isBlocked = 2 // mình bị chặn\n          }\n        }\n        return isBlocked\n      })\n    }\n  } catch (error) { console.log(error) }\n  return isBlocked\n}\nexport function checkNameUser(user, userid = '', netauser) {\n  let result = ''\n  let netaAuthSetting =  global.rxu.json(rxgetLocal('netaAuthSetting'), { groups:{} })\n  if (user&&(!user.id && user.Id)) user.id = user.Id\n  if (userid && user.id && user.id.toString() === userid.toString()) {\n    result = translate('You')\n    if(netauser && netauser.user && netauser.user.name){\n      result = netauser.user.name + ' ('+ translate('You')+\")\"\n    }\n  } \n  else if(netaAuthSetting.groups && netaAuthSetting.groups[Number(user.id)]){\n    result = rxaget(netaAuthSetting.groups[Number(user.id)], 'name', '')\n  }\n  else {\n    let netaContact = global.rxu.json(rxgetLocal('netaContacts'), { status: false, data: {} })\n    let objContact = rxaget(netaContact, 'data', {})\n    if (user && user.phone) {\n      if (objContact && objContact[user.phone]) {\n        result = objContact[user.phone]\n      } else if (user.full_name) {\n        result = user.full_name\n      } else {\n        result = user.phone\n      }\n    }\n  }\n\n  return result\n}\nexport function updateUsersOnline(occupants_uins, oldCountMemberOnl, usersStatus, oldUserStatus) {\n  try {\n    let status = { ...(oldUserStatus || usersStatus) }, isChange = false, countMemberOnl = 0\n    let { id } = (rxgetLocal('rxuserneta') &&\n      global.rxu.json(rxgetLocal('rxuserneta'), { user: {} }).user)||{}\n    // console.log(\"updateUsersOnline\",occupants_uins.length,  Object.keys(status).length)\n    occupants_uins && occupants_uins.map(i => {\n      if (!status[Number(i)]) {\n        status[Number(i)] = {\n          online_status: 2,\n          message_status: \"\",\n          last_seen_at: 0,\n        }\n        isChange = true\n      }\n      if (usersStatus[Number(i)] && usersStatus[Number(i)].online_status !== status[Number(i)].online_status) {\n        delete usersStatus[Number(i)].uin\n        status[Number(i)] = usersStatus[Number(i)]\n        isChange = true\n        // console.log(\"?\", usersStatus[Number(i)] && usersStatus[Number(i)].online_status, status[Number(i)] && status[Number(i)].online_status)\n      }\n      if (Number(i) === Number(id)) {\n        status[Number(i)] = {\n          online_status: 1,\n          message_status: \"\",\n          last_seen_at: 0,\n        }\n      }\n      return\n    })\n    Object.keys(status).map(i => {\n      if (occupants_uins.indexOf(i.toString()) === -1) {\n        // console.log(i,\"--\",status[Number(i)])\n        delete status[i]\n        isChange = true\n      } else {\n        if (status[Number(i)].online_status === 1) countMemberOnl += 1\n      }\n    })\n    if (countMemberOnl !== oldCountMemberOnl) isChange = true\n    // isChange && console.log(\"[updateUsersOnline]\", status)\n    return { isChange, usersStatus: { ...status }, countMemberOnl: countMemberOnl }\n  } catch(e) {return{}} \n}\nexport function checkNameGroup (group, users, userid) { \n  let result = ''\n  try {\n    if (users) {\n      if (group && group.type === 3) {\n        let netaAuthSetting =  global.rxu.json(rxgetLocal('netaAuthSetting'), { groups:{} })\n        if(netaAuthSetting.groups && netaAuthSetting.groups[Number(group.group_id)]){\n          result = rxaget(netaAuthSetting.groups[Number(group.group_id)], 'name', '')\n\n          if (!result) {\n            let usertmp = users[group.owner_uin.toString()]\n            const partnerUin = global.rxu.array(rxaget(group, 'occupants_uins', [])).filter(ele => (ele.toString() !== userid.toString()))\n            if (partnerUin.length > 0) { usertmp = users[partnerUin[0].toString()] }\n            result = checkNameUser(usertmp)\n          }\n        } else if (group && group.occupants_uins && group.occupants_uins.constructor === Array && group.occupants_uins.length === 2 && userid && group.occupants_uins.indexOf(userid.toString()) !== -1) {\n          const arruserid = group.occupants_uins.filter(o => o !== userid.toString())\n          if (arruserid && arruserid.constructor === Array) {\n            const user = users[arruserid[0]]\n            result = checkNameUser(user)\n          }\n        } else if (group && group.owner_uin) {\n          let usertmp = users[group.owner_uin.toString()]\n          const partnerUin = global.rxu.array(rxaget(group, 'occupants_uins', [])).filter(ele => (ele.toString() !== userid.toString()))\n          \n          if (partnerUin.length > 0) {\n            usertmp = users[partnerUin[0].toString()]\n          }\n          result = checkNameUser(usertmp)\n\n        } else {\n          result = checkNameUser(users[group.owner_uin.toString()]) || group.name\n        }\n      } else {\n        if (group && !group.name) {\n          const occupants_uins = group.occupants_uins || []\n          if (occupants_uins && occupants_uins.length > 0) {\n            const groupname = []\n            occupants_uins.forEach(uin => {\n              const fullname = (users[uin.toString()]) ? checkNameUser(users[uin.toString()]) : ''\n              if (fullname) {\n                groupname.push(fullname)\n              }\n            })\n            result = groupname.join(', ')\n          }\n        } else {\n          result = rxaget(group, 'name', '')\n        }\n      }\n    }\n  } catch (e) {\n    // console.log(e)\n  }\n\n  return result || translate('Stranger')\n}\nexport function getGroupById (group, users, userid) { \n  let result = 0\n  try {\n    if (users) {\n      if (group && group.type === 3) {\n        if (group && group.occupants_uins && group.occupants_uins.constructor === Array && group.occupants_uins.length === 2 && userid && group.occupants_uins.indexOf(userid.toString()) !== -1) {\n          const arruserid = group.occupants_uins.filter(o => o !== userid.toString())\n          if (arruserid && arruserid.constructor === Array) {\n            result = users[arruserid[0]]\n          }\n        } \n      } else {\n        //console.log('CAN NOT CHECK ID FOR GROUP HAVE MANY MEMBER')\n      }\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return result \n}\n\nexport function checkAvatarGroup (group, users, userid) {\n  let result = false\n  try {\n    if (group && group.avatar_url) {\n      result = true\n    } else if (group && group.type === 3 && !group.avatar_url) {\n      if (group && group.occupants_uins && group.occupants_uins.constructor === Array && group.occupants_uins.length === 2 && userid && group.occupants_uins.indexOf(userid.toString()) !== -1) {\n        const arruserid = group.occupants_uins.filter(o => o !== userid.toString())\n        if (arruserid && arruserid.constructor === Array && arruserid[0] && users[arruserid[0]] && users[arruserid[0]].profile_url) {\n          result = true\n        }\n      }\n    }\n  } catch (e) {}\n\n  return result\n}\n\nexport function checkName (uid, users, type) {\n  if (uid) {\n    const username = rxaget(users, uid + '', {})\n\n    if (!type) {\n      return (username.full_name) ? username.full_name : (username.name_contact) ? username.name_contact : ''\n    } else {\n      let fullname = username.name_contact || username.full_name\n      if (fullname) {\n        fullname = rxChangeSlug(fullname).slice(0, 2).toUpperCase()\n        return fullname || ''\n      } else {\n        return ''\n      }\n    }\n  } else {\n    return ''\n  }\n}\n\nexport function checkNameContact (user) {\n  let result = ''\n  if (user) {\n    if (user.name_contact) {\n      result = user.name_contact\n    } else if (user.full_name) {\n      result = user.full_name\n    } else if (user.phone) {\n      result = user.phone\n    } else {\n      result = translate('Stranger')\n    }\n  }\n\n  return result\n}\n\nexport function checkAvatarSender (omess, users) {\n  let result = false\n  if (users && omess && omess.sender_uin && users[omess.sender_uin.toString()] && users[omess.sender_uin.toString()].profile_url) {\n    result = true\n  }\n  return result\n}\n\nexport function checkAvatarSenderTagName (users, userId) {\n  if (users && users[userId] && users[userId].profile_url) return true\n  return false\n}\n\nexport function checkIsOwner (omess, userid) {\n  if (userid && rxaget(omess, 'sender_uin', '').toString() === userid.toString()) {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport function parseMessageDesc (objmsg, users, userid) {\n  let message = ''\n  let attachments = {}\n  if (objmsg) {\n    if (!isNaN(objmsg.type)) {\n      try {\n        attachments = JSON.parse(rxaget(objmsg, 'attachments', '').replace(/[\\t\\r\\n]/g, ''))\n      } catch (e) {\n        if (typeof (rxaget(objmsg, 'attachments', '')) === 'object') {\n          attachments = rxaget(objmsg, 'attachments', '')\n        }\n      }\n      if (objmsg.status !== 4) {\n        if (objmsg.deleted_uins && objmsg.deleted_uins.constructor === Array && objmsg.deleted_uins.length > 0 && objmsg.deleted_uins.indexOf(userid) !== -1) {\n          message = translate('The message has been deleted')\n        } else {\n          let mess =''\n          switch (objmsg.type) {\n            case 1:\n              let call_name = ''\n              mess = translate(' finished')\n              if (attachments.media_type === 1) {\n                call_name = translate('Voice call')\n              } else if (attachments.media_type === 2) {\n                call_name = translate('Video call')\n              }\n\n              message = call_name + mess\n              break\n            case 2:\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid)+\": \"+ translate('Image')\n              break\n            case 3:\n              message = 'Audio'\n              break\n            case 4:\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid)+\": \"+ 'Video'\n              break\n            case 5:\n              if(typeof objmsg.sender_uin === 'number'){\n                objmsg.sender_uin = String(objmsg.sender_uin)\n              }\n              mess = translate(' created a group')\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid) + mess\n              break\n            case 6:\n              const userins = []\n              if(typeof objmsg.sender_uin === 'number'){\n                objmsg.sender_uin = String(objmsg.sender_uin)\n              }\n              try {\n                if (attachments && attachments.added_uins && attachments.added_uins.constructor === Array && attachments.added_uins.length > 0) {\n                  for (const uid of attachments.added_uins) {\n                    const uname = checkNameUser(rxaget(users, uid.toString(), {}),userid)\n                    if (uname) {\n                      userins.push(uname)\n                    }\n                  }\n                }\n              } catch (e) {\n                console.log(e)\n              }\n              if (userins.length > 0) {                \n\n                mess = translate(' added ')\n                message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid) + mess + userins.join(', ')\n              }\n              else if (attachments.removed_uins && attachments.removed_uins.constructor === Array && attachments.removed_uins.length > 0) {\n                try {\n                  let rmMem = []\n                  for (const uid of attachments.removed_uins) {\n                    const uname = checkNameUser(rxaget(users, uid.toString(), {}), userid)\n                    if (uname) {\n                      rmMem.push(uname)\n                    }\n                  }\n                  if (rmMem.length > 0) {\n                    mess = translate(' removed ')\n                    message = checkNameUser(rxaget(users, objmsg.sender_uin, {}), userid) + mess + rmMem.join(', ')\n                  }\n                } catch (error) {console.log(\"prasemess\",error) }\n              }  \n              else if(attachments.pin_message){\n                if (attachments.pin_message.type === -1) {\n                  message = attachments.pin_message.content\n                }\n                else\n                  message = checkNameUser(rxaget(users, objmsg.sender_uin.toString(), {})) + translate(' pinned one message')\n              } \n              else if (attachments && attachments.updated_group_avatar) {\n                message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid) + translate(' update avatar')\n              }\n              else if (attachments && attachments.updated_group_name) {\n                message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid) + translate(' update group name')\n              }\n              else if (attachments && attachments.type === 'update_group' && (attachments.owner_uin || attachments.admin_uins)) {\n                message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid) + translate(' change group admin to: ')\n                  + checkNameUser(rxaget(users, (attachments.owner_uin || attachments.admin_uins[0]), {}))\n              } else if (attachments && attachments.group_id && attachments.push_all && attachments.push_all.constructor === Array && attachments.push_all.length > 0 ) {\n                try {\n                  const arrUserNameAdd = []\n                  for (const uid of attachments.push_all) {\n                    const unameNew = checkNameUser(rxaget(users, uid.toString(), {}))\n                    if (unameNew) {\n                      arrUserNameAdd.push(unameNew)\n                    }\n                  }\n                  if (arrUserNameAdd.length > 0) {\n                    message = arrUserNameAdd.join(', ') + translate(' joined group with link')  \n                  }\n                } catch(e1) {}\n              }\n              break\n            case 7:\n              if(typeof objmsg.sender_uin === 'number'){\n                objmsg.sender_uin = String(objmsg.sender_uin)\n              }\n              mess = translate(' has left the group')\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid) + mess\n              break\n            case 8:\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid)+\": \"+ objmsg.message\n              break\n            case 9:\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid)+\": \"+objmsg.message\n              break\n            case 10:\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid)+\": \"+'Sticker'\n              break\n            case 12:\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid)+\": \"+translate('File')\n              break\n            case 14:\n              message = translate('Current Location')\n              break\n            case 15:\n              message = translate('Live Location')\n              break\n            case 16:\n              message = 'Group Call'\n              break\n            default:\n              message = checkNameUser(rxaget(users, objmsg.sender_uin, {}),userid)+\": \"+objmsg.message || ''\n              break\n          }\n        }\n      } else {\n        message = translate('The message has been deleted')\n      }\n    } else {\n      if (objmsg.status !== 4) {\n        if (objmsg.deleted_uins && objmsg.deleted_uins.constructor === Array && objmsg.deleted_uins.length > 0 && objmsg.deleted_uins.indexOf(userid) !== -1) {\n          message = translate('The message has been deleted')\n        } else {\n          message = objmsg.message || ''\n        }\n      } else {\n        message = translate('The message has been deleted')\n      }\n    }\n\n    if (message && message.indexOf('@') !== -1) {\n      const userstag = message.match(/(@\\d+\\b)/ig)\n      if (userstag && userstag.constructor === Array && userstag.length > 0) {\n        userstag.forEach(o => {\n          const useridtmp = o.replace('@', '') || ''\n          if (users[useridtmp]) {\n            message = message.replace(o, /*'<b>' +/*'@'+ */checkNameUser(rxaget(users, useridtmp, {})) /*+ '</b>'*/)\n          }\n        })\n      }\n    }\n\n    return message || ''\n  } else {\n    return ''\n  }\n}\n","/*License (MIT)\n\nCopyright Â© 2013 Matt Diamond\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \nto permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of \nthe Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO \nTHE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \nDEALINGS IN THE SOFTWARE.\n*/\n\nvar blobURL = URL.createObjectURL( new Blob([ '(',\n  function(){\n    var recLength = 0, recBuffersL = [], recBuffersR = [], sampleRate;\n\n    this.onmessage = function(e) {\n      switch (e.data.command) {\n        case 'init':\n          init(e.data.config);\n          break;\n        case 'record':\n          record(e.data.buffer);\n          break;\n        case 'exportWAV':\n          exportWAV(e.data.type);\n          break;\n        case 'exportMonoWAV':\n          exportMonoWAV(e.data.type);\n          break;\n        case 'getBuffers':\n          getBuffers();\n          break;\n        case 'clear':\n          clear();\n          break;\n        default: \n          break;\n      }\n    };\n\n    function init(config) {\n      sampleRate = config.sampleRate;\n    }\n\n    function record(inputBuffer) {\n      recBuffersL.push(inputBuffer[0]);\n      recBuffersR.push(inputBuffer[1]);\n      recLength += inputBuffer[0].length;\n    }\n\n    function exportWAV(type) {\n      var bufferL = mergeBuffers(recBuffersL, recLength);\n      var bufferR = mergeBuffers(recBuffersR, recLength);\n      var interleaved = interleave(bufferL, bufferR);\n      var dataview = encodeWAV(interleaved);\n      var audioBlob = new Blob([dataview], {\n        type: type\n      });\n\n      this.postMessage(audioBlob);\n    }\n\n    function exportMonoWAV(type) {\n      var bufferL = mergeBuffers(recBuffersL, recLength);\n      var dataview = encodeWAV(bufferL, true);\n      var audioBlob = new Blob([dataview], {\n        type: type\n      });\n\n      this.postMessage(audioBlob);\n    }\n\n    function getBuffers() {\n      var buffers = [];\n      buffers.push(mergeBuffers(recBuffersL, recLength));\n      buffers.push(mergeBuffers(recBuffersR, recLength));\n      this.postMessage(buffers);\n    }\n\n    function clear() {\n      recLength = 0;\n      recBuffersL = [];\n      recBuffersR = [];\n    }\n\n    function mergeBuffers(recBuffers, recLength) {\n      var result = new Float32Array(recLength);\n      var offset = 0;\n      for (var i = 0; i < recBuffers.length; i++) {\n        result.set(recBuffers[i], offset);\n        offset += recBuffers[i].length;\n      }\n      return result;\n    }\n\n    function interleave(inputL, inputR) {\n      var length = inputL.length + inputR.length;\n      var result = new Float32Array(length);\n\n      var index = 0, inputIndex = 0;\n\n      while (index < length) {\n        result[index++] = inputL[inputIndex];\n        result[index++] = inputR[inputIndex];\n        inputIndex++;\n      }\n      return result;\n    }\n\n    function floatTo16BitPCM(output, offset, input) {\n      for (var i = 0; i < input.length; i++, offset += 2) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n      }\n    }\n\n    function writeString(view, offset, string) {\n      for (var i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    }\n\n    function encodeWAV(samples, mono) {\n      var buffer = new ArrayBuffer(44 + samples.length * 2);\n      var view = new DataView(buffer);\n\n      /* RIFF identifier */\n      writeString(view, 0, 'RIFF');\n      /* file length */\n      view.setUint32(4, 32 + samples.length * 2, true);\n      /* RIFF type */\n      writeString(view, 8, 'WAVE');\n      /* format chunk identifier */\n      writeString(view, 12, 'fmt ');\n      /* format chunk length */\n      view.setUint32(16, 16, true);\n      /* sample format (raw) */\n      view.setUint16(20, 1, true);\n      /* channel count */\n      view.setUint16(22, mono ? 1 : 2, true);\n      /* sample rate */\n      view.setUint32(24, sampleRate, true);\n      /* byte rate (sample rate * block align) */\n      view.setUint32(28, sampleRate * 4, true);\n      /* block align (channel count * bytes per sample) */\n      view.setUint16(32, 4, true);\n      /* bits per sample */\n      view.setUint16(34, 16, true);\n      /* data chunk identifier */\n      writeString(view, 36, 'data');\n      /* data chunk length */\n      view.setUint32(40, samples.length * 2, true);\n\n      floatTo16BitPCM(view, 44, samples);\n\n      return view;\n    }\n  }.toString(),\n')()' ], { type: 'application/javascript' } ) )\n\n\nif (typeof window !== \"undefined\") {\n    (function(window) {\n\n        var Recorder = function(source, cfg) {\n            var config = cfg || {};\n            var bufferLen = config.bufferLen || 4096;\n            this.context = source.context;\n            if (!this.context.createScriptProcessor) {\n                this.node = this.context.createJavaScriptNode(bufferLen, 2, 2);\n            } else {\n                this.node = this.context.createScriptProcessor(bufferLen, 2, 2);\n            }\n\n            var worker = new Worker(blobURL);\n            worker.postMessage({\n                command: 'init',\n                config: {\n                    sampleRate: this.context.sampleRate\n                }\n            });\n            var recording = false,\n                currCallback;\n\n            this.node.onaudioprocess = function(e) {\n                if (!recording) return;\n                worker.postMessage({\n                    command: 'record',\n                    buffer: [\n                        e.inputBuffer.getChannelData(0),\n                        e.inputBuffer.getChannelData(1)\n                    ]\n                });\n            }\n\n            this.configure = function(cfg) {\n                for (var prop in cfg) {\n                    if (cfg.hasOwnProperty(prop)) {\n                        config[prop] = cfg[prop];\n                    }\n                }\n            }\n\n            this.record = function() {\n                recording = true;\n            }\n\n            this.stop = function() {\n                recording = false;\n            }\n\n            this.clear = function() {\n                worker.postMessage({\n                    command: 'clear'\n                });\n            }\n\n            this.getBuffers = function(cb) {\n                currCallback = cb || config.callback;\n                worker.postMessage({\n                    command: 'getBuffers'\n                })\n            }\n\n            this.exportWAV = function(cb, type) {\n                currCallback = cb || config.callback;\n                type = type || config.type || 'audio/wav';\n                if (!currCallback) throw new Error('Callback not set');\n                worker.postMessage({\n                    command: 'exportWAV',\n                    type: type\n                });\n            }\n\n            this.exportMonoWAV = function(cb, type) {\n                currCallback = cb || config.callback;\n                type = type || config.type || 'audio/wav';\n                if (!currCallback) throw new Error('Callback not set');\n                worker.postMessage({\n                    command: 'exportMonoWAV',\n                    type: type\n                });\n            }\n\n            worker.onmessage = function(e) {\n                var blob = e.data;\n                currCallback(blob);\n            }\n\n            source.connect(this.node);\n            this.node.connect(this.context.destination); // if the script node is not connected to an output the \"onaudioprocess\" event is not triggered in chrome.\n        };\n\n        Recorder.setupDownload = function(blob, filename) {\n            var url = (window.URL || window.webkitURL).createObjectURL(blob);\n            var link = document.getElementById(\"save\");\n            link.href = url;\n            link.download = filename || 'output.wav';\n        }\n\n        window.Recorder = Recorder;\n\n    })(window);  \n}\n","import React from 'react'\n\nexport function rxCountStart (index, size = false) {\n  let arrRatings = [0, 0, 0, 0, 0]\n  let arrRatingstemplate = []\n  index = (typeof (index) === 'undefined') ? 0 : index\n\n  for (var i = 0; i < arrRatings.length; i++) {\n    if (i <= (index - 1)) {\n      arrRatings[i] = 1\n    } else {\n      arrRatings[i] = 0\n    }\n  }\n\n  if (size === true) {\n    arrRatingstemplate = arrRatings.map((perdata, index) => (\n      <div key={index}>\n        {perdata === 0 && <div className='rx-star-off-big' /> }\n        {perdata === 1 && <div className='rx-star-big' />}\n      </div>\n    ))\n  } else {\n    arrRatingstemplate = arrRatings.map((perdata, index) => (\n      <div key={index}>\n        {perdata === 0 && <div className='rx-star-off' /> }\n        {perdata === 1 && <div className='rx-star' />}\n      </div>\n    ))\n  }\n\n  return arrRatingstemplate\n}\n","export function rxCurrency (x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n","export function rxslug (str) {\n  return str.split(' ').join('-').toLowerCase()\n}\n\nexport function normalString (str) {\n  let normalStr = str.split('-').join(' ')\n  return toTitleCase(normalStr)\n}\n\nfunction toTitleCase (str) {\n  return str.replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { loginAction, logoutAction } from './../../redux'\nimport { apipost, rxsetCookie, rxsetLocal } from './../../classes/request'\n\nclass loginComponent_ extends Component {\n  constructor (props) {\n    super(props)\n\n    this.mounted = true\n    this.state = {\n      editingData: {},\n      msg: ''\n    }\n  }\n\n  componentDidMount () { this._ismounted = true }\n  componentWillUnmount () { this._ismounted = false }\n\n  onBlurData (e, name) {\n    let editingData = this.state.editingData\n    editingData[name] = e.target.value\n    this.setState({ editingData: editingData })\n  }\n\n  onClickLoginSubmit (e) {\n    let editingData = this.state.editingData\n\n    this.setState({ editingData: editingData }, () => {\n      apipost(global.rxu.config.api_authorize, this.state.editingData, {\n        '1': (json) => {\n          if (this._ismounted) {\n            (json.data && json.data.user) ? rxsetCookie('authorize', json.data.user.authorization, 120) : rxsetCookie('authorize', json.data.authorization, 120)\n            rxsetLocal('arrper', json.data.arrper)\n            this.setState({ msg: '' })\n\n            json.data.user = { ...json.data.user, arrper: json.data.arrper, arrperdetail: json.data.arrperdetail }\n            this.props.loginAction(json.data.user)\n            this.props.history.push('/admin/dashboard')\n          }\n        },\n        '-2': (json) => {\n          if (this._ismounted) {\n            var strmsg = ''\n            if (json.msg === 'Sai định dạng' || json.msg === 'Không thể đăng nhập!') {\n              strmsg = json.msg\n            }\n            this.props.logoutAction()\n            this.setState({ msg: strmsg })\n          }\n        }\n      })\n    })\n  }\n\n  render () {\n    return (\n      <div className='authloginpage'>\n        <form>\n          <div className='authform' onKeyPress={(e) => { let charCode = e.which || e.charCode || e.keyCode || 0; if (charCode === 13) this.onClickLoginSubmit(e) }}>\n            <div className='authform__head'>Đăng nhập</div>\n            <p className='authform_msgerror'>{this.state.msg}</p>\n            <input tabIndex='1' type='text' placeholder='Tài khoản' className='authform__input' autoComplete='username' onChange={(e) => this.onBlurData(e, 'username')} />\n            <input tabIndex='2' type='password' placeholder='Mật khẩu' className='authform__input' autoComplete='password' onChange={(e) => this.onBlurData(e, 'password')} />\n            <div tabIndex='3' className='authform__btnsubmit' onClick={(e) => { this.onClickLoginSubmit(e) }} onKeyPress={(e) => { this.onClickLoginSubmit(e) }}>Đăng Nhập</div>\n            <p className='authform__msg'>Bạn chưa có tài khoản? <Link to='/register'>Đăng ký tài khoản</Link></p>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = {\n  logoutAction,\n  loginAction\n}\n\nconst loginComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(loginComponent_)\n\nexport default loginComponent\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { apipost } from './../../classes/request'\nconst { setComp } = global.rootRequire('redux')\nclass registerComponent extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      editingData: {},\n      msg: ''\n    }\n  }\n\n  onBlurData (e, name) {\n    let editingData = this.state.editingData\n    editingData[name] = e.target.value\n    this.setState({ editingData: editingData })\n  }\n\n  onClickRegisterSubmit (e) {\n    let editingData = this.state.editingData\n\n    this.setState({ editingData: editingData }, () => {\n      apipost(global.rxu.config.api_user, this.state.editingData, {\n        '1': (json) => {\n          this.setState({ msg: '' })\n          // this.props.history.push('login')\n          this.props.setComp('login')\n        },\n        '-2': (json) => {\n          var strmsg = ''\n          if (json.msg === 'Dupplicate data') {\n            strmsg = 'Email đã được đăng ký'\n          } else if (json.msg === 'Email invalid format') {\n            strmsg = 'Định dạng Email không đúng'\n          } else {\n            strmsg = 'Các trường * không được để trống'\n          }\n          this.setState({ msg: strmsg })\n        }\n      })\n    })\n  }\n\n  render () {\n    return (\n      <div className='authloginpage'>\n        <div className='authform'>\n          <div className='register-form'>\n            <div className='authform__head'>Đăng ký</div>\n            <p className='authform_msgerror'>{this.state.msg}</p>\n            <input tabIndex='1' type='text' placeholder='Tài khoản' className='authform__input' onChange={(e) => this.onBlurData(e, 'username')} />\n            <input tabIndex='2' type='text' placeholder='Tên đầy đủ' className='authform__input' onChange={(e) => this.onBlurData(e, 'fullname')} />\n            <input tabIndex='3' type='text' placeholder='Email' className='authform__input' onChange={(e) => this.onBlurData(e, 'email')} />\n            <input tabIndex='4' type='text' placeholder='Số điện thoại' className='authform__input' onChange={(e) => this.onBlurData(e, 'phone')} />\n            <input tabIndex='5' type='text' placeholder='Địa chỉ' className='authform__input' onChange={(e) => this.onBlurData(e, 'address')} />\n            <input tabIndex='6' type='password' placeholder='Mật khẩu' className='authform__input' autoComplete='new-password' onChange={(e) => this.onBlurData(e, 'password')} />\n            <input tabIndex='7' type='password' placeholder='Xác nhận mật khẩu' className='authform__input' onChange={(e) => this.onBlurData(e, 'repassword')} />\n            <div tabIndex='10' className='authform__btnsubmit' onClick={(e) => this.onClickRegisterSubmit(e)} onKeyPress={(e) => this.onClickRegisterSubmit(e)} >Tạo tài khoản</div>\n            <p className='authform__msg'>Bạn đã có tài khoản? <Link to='/login'>Đăng nhập</Link></p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n})\nconst mapDispatchToProps = { setComp }\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(registerComponent)\n\n","/*eslint-disable no-undef*/\n/*global translate*/\nimport { connect } from 'react-redux'\nimport React, { Component } from 'react'\n\nglobal.isclient && require('./RxManageGroup.css')\nconst { rxsetLocal, rxgetLocal } = global.rootRequire('classes/request')\nconst { rxaget, rxChangeSlug, stringToColour, autoConvertTime, subString } = global.rootRequire('classes/ulti')\nconst { checkNameGroup, checkAvatarGroup, checkNameContact, checkNameUser, getGroupById, checkBlock, updateUsersOnline } = global.rootRequire('classes/chat')\nconst { netaMediaAdd, netaGroupsUpdate, netaGroupsRemove, chooseGroupAction, changeStatusLoadMess, netaAuthSettingUpdate, clickPopup } = global.rootRequire('redux')\nconst RxImageGallery = global.rootRequire('components/shares/rxImageGallery').default\nconst rxio = global.rootRequire('classes/socket').default\nconst BlockUser = global.rootRequire('components/shares/block_user/block_user').default\nconst CreateGroupChat = global.rootRequire('components/shares/create_group_chat/create_group_chat').default\nlet zget = global.rxu.get\n\nclass RxManagerGroup extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      group: props.groupManager ?? {}, //rxaget(props, 'groupManager', {}) ,\n      images: [],\n      videos: [],\n      files: [],\n      tabactive: 'images',\n      paging_page: 0,\n      paging_size: 50,\n      block_scroll: false,\n      arrData: [],\n      doneBtnClick: false,\n      closeBtnClick: false,\n      displayLeaveGroupScreen: false,\n      leaveGroup_okBtnClick: false,\n      displaySelectManagerScreen: false,\n      displayGroupList: true,\n      // groupsMemberTemp: rxaget(this.props, 'rxgroupsMember.group', {}),\n      group_id: '',\n      isShowPopUp: false,\n      admin_uins_index: rxaget(props, 'groupManager.admin_uins', {}).length - 1,\n      groupsNChat: [],\n      groupsNChatOrigin: [],\n      groupsNChatChecked: [],\n      countMemberOnl: 0,\n      groupsTemp: [],\n      chooseLeader_groupsTemp: [],\n      leaderMemberChecked: '',\n      clickAddMemberBtn: false,\n      lg_chooseLeader_groupsTemp: [],\n      lg_leaderMemberChecked: '',\n      groupNameValue: '',\n      theInputFileKey: new Date().getTime(),\n      click_lg_chooseLeader_okBtn: false,\n      loadingMedia: true,\n      // notificationStatus :JSON.parse(rxgetLocal('netaNotificationStatus'))\n      notificationStatus: global.rxu.json(rxgetLocal('netaNotificationStatus'), {}) || {},\n      flagCreateGroupPopup: false,\n      groupImageURL: '',\n      flagManageGroupContextMenu: false,\n\n      isShowPopupManageGroup: true,\n      usersStatus: {},\n    }\n\n    this.users = rxaget(this.props, 'user.users', {}) || {}\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    // const contactsUsers = []\n    // if (this.users && Object.keys(this.users).length > 0) {\n    //   for (const userid of Object.keys(this.users)) {\n    //     let arrgroup = rxaget(this.props, 'rxgroup.group.occupants_uins', [])\n    //     if (userid !== this.userid && arrgroup.indexOf(userid) === -1 ) {\n    //       contactsUsers.push(this.users[userid])\n    //     }\n    //   }\n    //   this.state.groupsNChat = this.state.groupsNChatOrigin = contactsUsers\n    // }\n    this.controller = {}\n    this.keyClickFunction = this.keyClickFunction.bind(this);\n    this.uploadFileImages = this.uploadFileImages.bind(this)\n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n    this.user = rxaget(this.props, 'netaauth.user', {})\n    this.users = rxaget(this.props, 'user.users', {}) || {}\n    this.downloadFile = this.downloadFile.bind(this)\n    this.doneAccountInfo = this.doneAccountInfo.bind(this)\n    this.chooseLeader_okBtnClick = this.chooseLeader_okBtnClick.bind(this)\n    this.removeMember = this.removeMember.bind(this)\n    this.onChangeNotiGroup = this.onChangeNotiGroup.bind(this)\n\n    let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n    if (this.state.group.group_id && netaAuthSetting.groups[Number(this.state.group.group_id)]\n      && netaAuthSetting.groups[Number(this.state.group.group_id)].disableNoti) {\n      this.state.disableNoti = true\n    } else this.state.disableNoti = false\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyClickFunction, false);\n  }\n\n  componentDidMount() {\n    let occupants_uins = this.state.group.occupants_uins\n    this.loadGroupsTemp(occupants_uins, this.users)\n    document.addEventListener(\"keydown\", this.keyClickFunction, false);\n    const contactsUsers = []\n    if (this.users && Object.keys(this.users).length > 0) {\n      let arrgroup = rxaget(this.props, 'groupManager.occupants_uins', [])\n      for (const userid of Object.keys(this.users)) {\n        if (\n          userid !== this.userid &&\n          arrgroup.indexOf(userid) === -1\n        )\n          contactsUsers.push(this.users[userid])\n      }\n      this.setState({\n        groupsNChat: contactsUsers,\n        groupsNChatOrigin: contactsUsers\n      })\n    }\n    // this.preGetMedia(rxaget(this.props, 'netaMedia', {}), rxaget(this.state.group, 'group_id', ''))\n\n    const { isChange, usersStatus, countMemberOnl } = updateUsersOnline(occupants_uins, this.state.countMemberOnl, this.state.usersStatus)\n    if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })\n\n\n    rxio.getUpdateGroup((data) => {\n      let groupObj = JSON.parse(JSON.stringify(this.state.group))\n      if (data.push_all.length) {\n        groupObj.occupants_uins = [...new Set([...groupObj.occupants_uins, ...data.push_all])]\n        // console.log(groupObj.occupants_uins, 'data sau khi add')\n      }\n      else if (data.pull_all.length) {\n        groupObj.occupants_uins = groupObj.occupants_uins.filter(group => !data.pull_all.includes(group))\n        // console.log(groupObj.occupants_uins, 'data sau khi remove')\n      }\n\n      // this.props.chooseGroupAction(groupObj)\n      // this.loadGroupsTemp(groupObj.occupants_uins, this.users)\n      this.setState({ group: groupObj }, () => {\n        // this.props.chooseGroupAction(groupObj)\n        this.loadGroupsTemp(groupObj.occupants_uins, this.users)\n      })\n    })\n\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // let disableNoti\n    // let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n    // if (this.state.group.group_id && netaAuthSetting.groups[Number(this.state.group.group_id)]\n    //   && netaAuthSetting.groups[Number(this.state.group.group_id)].disableNoti) {\n    //   disableNoti = true\n    // } else {\n    //   disableNoti = false\n    // }\n    // if (disableNoti !== this.state.disableNoti) {\n    //   this.setState({ disableNoti: disableNoti })\n    // }\n\n    console.log(nextProps.usersStatus, 'nextProps.usersStatus')\n    if (nextProps.usersStatus) {\n      const { isChange, usersStatus, countMemberOnl } =\n        updateUsersOnline(this.state.group.occupants_uins, this.state.countMemberOnl, nextProps.usersStatus, this.state.usersStatus)\n      if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })\n    }\n\n    if (JSON.stringify(nextProps.groupManager) !== JSON.stringify(this.props.groupManager)\n      // rxaget(nextProps, 'groupManager.group_id', '') !== rxaget(this.state, 'group.group_id', '')\n    ) {\n      const newgroup = rxaget(nextProps, 'groupManager', {})\n      let occupants_uins = newgroup.occupants_uins || []\n      this.loadGroupsTemp(occupants_uins, this.users)\n\n      let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n      let disableNoti = false\n      if (newgroup.group_id && netaAuthSetting.groups[Number(newgroup.group_id)] && netaAuthSetting.groups[Number(newgroup.group_id)].disableNoti) {\n        disableNoti = true\n      }\n\n      if (this.controller[rxaget(this.state.group, 'group_id', '')]) {\n        this.controller[rxaget(this.state.group, 'group_id', '')].abort();\n        delete this.controller[rxaget(this.state.group, 'group_id', '')]\n      }\n      this.preGetMedia(rxaget(nextProps, 'netaMedia', {}), rxaget(newgroup, 'group_id', ''))\n\n      const { isChange, usersStatus, countMemberOnl } = updateUsersOnline(occupants_uins, this.state.countMemberOnl, this.state.usersStatus)\n      if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })\n      \n      this.setState({ group: rxaget(nextProps, 'groupManager', {}), closeBtnClick: false, doneBtnClick: false, loadingMedia: true, disableNoti: disableNoti })\n    }\n\n    if (rxaget(this.state.group, 'group_id', '') !== nextProps.rxgroup.groupid) {\n      this.setState({ closeBtnClick: false, doneBtnClick: false })\n    }\n\n    if (nextProps.user.users && JSON.stringify(nextProps.user.users) !== JSON.stringify(this.users)) {\n      let occupants_uins = nextProps.groupManager.occupants_uins || []\n      this.users = rxaget(nextProps, 'user.users', {}) || {}\n      this.loadGroupsTemp(occupants_uins, this.users)\n    }\n\n    if (nextProps?.rxgroup?.group.group_id === this.props.groupManager.group_id\n      && JSON.stringify(nextProps.rxgroup.group) !== JSON.stringify(this.props.groupManager)\n    ) {\n      let occupants_uins = nextProps.rxgroup.group.occupants_uins || []\n      this.setState({ group: nextProps.rxgroup.group })\n      this.loadGroupsTemp(occupants_uins, this.users)\n    }\n\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    let isRerender = false\n    if (JSON.stringify(nextState) !== JSON.stringify(this.state))\n      isRerender = true\n    else if (rxaget(nextProps, 'groupManager.group_id', '') !== rxaget(this.state, 'group.group_id', ''))\n      isRerender = true\n    return isRerender\n  }\n\n  preGetMedia(netaMedia, group_id) {\n    var arrData = []\n    if (netaMedia && netaMedia.data && netaMedia.data[group_id]) {\n      const objMedia = JSON.parse(JSON.stringify(netaMedia.data[group_id]))\n      if (objMedia && objMedia.images) {\n        for (const key of Object.keys(objMedia.images || {})) {\n          if (objMedia.images[key]) { arrData.push(objMedia.images[key]) }\n        }\n      }\n    }\n    arrData.sort((a, b) => (a.msg_create_at > b.msg_create_at) ? -1 : ((b.msg_create_at > a.msg_create_at) ? 1 : 0))\n    this.setState({\n      loadingMedia: true, arrData: arrData,\n      block_scroll: false, paging_page: 0\n    }, () => this.loadMediaStatic())\n  }\n\n  lg_chooseLeader(ele) {\n    this.setState({ lg_leaderMemberChecked: ele.id })\n  }\n\n  chooseLeader(ele) {\n    this.setState({ leaderMemberChecked: ele.id })\n  }\n\n  isLeader(eleId) {\n    let isLeaderFlag = false\n    try {\n      eleId = eleId.toString()\n      let owner_uin = this.state.group.owner_uin.toString()\n      if (eleId === owner_uin) {\n        isLeaderFlag = true\n      }\n      else if (this.state.group.occupants_uins.indexOf(owner_uin) === -1\n        && this.state.group.admin_uins\n        && this.state.group.admin_uins.indexOf(eleId) >= 0) {\n        isLeaderFlag = true\n      }\n      // eleId !== owner_uin && console.log(\" this.state.group\", eleId,owner_uin,this.state.group.admin_uins)\n    } catch (error) { }\n    return isLeaderFlag\n  }\n\n  onChangeSearch_chooseLeader(e) {\n    let value = e.target.value\n    let arrGroups\n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }\n    if (e.target.value.length > 0) {\n      arrGroups = this.state.groupsTemp.filter(o => (rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1 || rxChangeSlug(o.phone).indexOf(rxChangeSlug(value)) !== -1))\n    } else {\n      value = ''\n      arrGroups = this.state.groupsTemp.filter(o => rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1)\n    }\n    this.setState({ chooseLeader_groupsTemp: arrGroups })\n  }\n\n  fetchImage(src, callback) {\n    const timenow = Math.floor(Date.now() / 1000)\n    try {\n      let timeCreateImg = (typeof this.checkImage[src] !== 'undefined') ? rxaget(this.checkImage[src], 'created_at', 0) : 0\n      if (!this.checkImage[src] || ((timenow - timeCreateImg) > 43200 && timeCreateImg > 0)) {\n        fetch(src, { headers: { 'TC-Token': this.token }, redirect: 'follow' })\n          .then(res => {\n            if (res && res.redirected && res.url && src) {\n              try {\n                callback(res.url)\n                this.props.netaBlobsUpdate(src, res.url)\n              } catch (e) {\n                callback('')\n              }\n            } else {\n              callback('')\n            }\n          })\n      } else {\n        callback(rxaget(this.checkImage[src], 'link', ''))\n      }\n    } catch (e) {\n      callback('')\n    }\n  }\n\n  onChangeSearch_lg_chooseLeader(e) {\n    let value = e.target.value\n    let arrGroups\n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }\n    if (e.target.value.length > 0) {\n      arrGroups = this.state.groupsTemp.filter(o => (rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1 || rxChangeSlug(o.phone).indexOf(rxChangeSlug(value)) !== -1))\n    } else {\n      value = ''\n      arrGroups = this.state.groupsTemp.filter(o => rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1)\n    }\n    this.setState({ lg_chooseLeader_groupsTemp: arrGroups })\n  }\n\n  onChangeSearchNChat(e) {\n    let value = e.target.value\n    let arrGroups\n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }\n    if (value) {\n      arrGroups = this.state.groupsNChatOrigin.filter(member => (rxChangeSlug(checkNameUser(member)).indexOf(rxChangeSlug(value)) !== -1 || rxChangeSlug(member.phone).indexOf(rxChangeSlug(value)) !== -1))\n    } else {\n      arrGroups = this.state.groupsNChatOrigin\n    }\n    this.setState({\n      groupsNChat: arrGroups,\n    }, () => {\n      const images = document.getElementsByClassName('ava-useravatar')\n      if (images && images.length > 0) {\n        for (let i = 0; i < images.length; i++) {\n          const valueAttr = images[i].getAttribute('data-id')\n          if (valueAttr && valueAttr.indexOf('userava') !== -1) {\n            const userid = valueAttr.replace('userava', '')\n            if (userid) {\n              const avatar_url = global.rxu.config.get_avatar + userid\n              this.fetchImage(avatar_url, (data) => {\n                if (data) {\n                  images[i].src = data\n                }\n              })\n            }\n          }\n        }\n      }\n    })\n  }\n\n  leaveGroupBtnClick() {\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    let groupObjMemberIdArr = groupObj.occupants_uins\n    let contactsUsers = []\n    if (groupObj && groupObj.occupants_uins && groupObj.occupants_uins.constructor === Array && this.users && Object.keys(this.users).length > 0) {\n      for (const userid of Object.keys(this.users)) {\n        if (groupObjMemberIdArr.indexOf(userid.toString()) !== -1) {\n          contactsUsers.push(this.users[userid])\n        }\n      }\n      if (contactsUsers.length > 0) {\n        let user = rxaget(this.props, 'netaauth.user', {})\n        this.props.clickPopup('leave_group', { data: { groups: contactsUsers, user: user, group: groupObj } }, (data) => {\n          if (data) {\n            this.funcChooseLeader(data)\n          } else {\n            this.leaveGroup()\n          }\n          // console.log('Đây là thời điểm mà hoàn tất rời khỏi nhóm.')\n          // this.props.closePopup?.();\n        })\n      }\n    }\n  }\n\n  funcChooseLeader(leaderChecked) {\n    let groupObj = rxaget(this.props, 'groupManager', {})\n    let leaderMemberChecked = leaderChecked\n    let index = this.state.admin_uins_index\n\n    groupObj.admin_uins[index] = leaderMemberChecked.toString()\n    const params = {\n      group_id: Number(groupObj.group_id),\n      admin_uins: groupObj.admin_uins\n    }\n\n    rxio.addAdmin(params, (data) => {\n      if (data) {\n        try {\n          this.setState({ closeBtnClick: false, doneBtnClick: false })\n          const arrUsers = this.users\n          const user = rxaget(this.props, 'netaauth.user', {})\n          const objUser = arrUsers[user.id.toString()]\n          const paramsCreateMess = {\n            group_id: Number(this.state.group.group_id),\n            type: 6,\n            version: 1,\n            nonce: (Math.floor(Date.now()) * 1000).toString(),\n            sender_name: rxaget(objUser, 'full_name', ''),\n            attachments: JSON.stringify({\n              mediaType: 0, type: 'update_group',\n              admin_uins: [groupObj.admin_uins[index]]\n            }).replace(/\"/g, '\\\\\"'),\n            \"is_encrypted\": false, \"mentioned_all\": false\n          }\n          rxio.createMessage(paramsCreateMess, (dataMess) => {\n            if (dataMess) {\n              let groupObj = JSON.parse(JSON.stringify(this.state.group))\n              groupObj.admin_uins = groupObj.admin_uins[index]\n              groupObj.last_message = dataMess.message\n              groupObj.last_message_id = dataMess.last_message_id\n              this.props.changeStatusLoadMess()\n              this.props.chooseGroupAction(groupObj)\n              this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n              this.leaveGroup()\n            }\n          })\n        } catch (error) { console.log(\"addAdmin\", error) }\n      }\n    }) //async function\n\n    this.setState({ displayLeaveGroupScreen: false })\n  }\n\n\n  leaveGroup_cancelBtnClick() {\n    this.setState({ displayLeaveGroupScreen: false })\n  }\n\n  leaveGroup_okBtnClick() {\n    if (this.state.group.admin_uins) {\n      let admin_unis = this.state.group.admin_uins\n      let isOpen = !admin_unis.some(i => (this.userid.toString() !== i.toString() && this.state.group.occupants_uins.indexOf(i.toString()) >= 0))\n\n      if (isOpen) {\n        this.setState({ displaySelectManagerScreen: true })\n      } else {\n        this.leaveGroup()\n      }\n    }\n  }\n\n\n  chooseLeader_okBtnClick() {\n    // let groupObj = rxaget(this.state, 'group', {})\n    let groupObj = rxaget(this.props, 'groupManager', {})\n    let leaderMemberChecked = this.state.leaderMemberChecked\n    let index = this.state.admin_uins_index\n\n    groupObj.admin_uins[index] = leaderMemberChecked.toString()\n    let owner_uin = Number(groupObj.admin_uins[index])\n    if (groupObj.admin_uins[index]) {\n      const msg = {\n        group_id: Number(groupObj.group_id),\n        name: \"\",\n        owner_uin: owner_uin\n      }\n      rxio.socket.emit(\"update_group\", msg, (data) => {\n        if (data && data.result === 0) {\n          try {\n            this.setState({\n              closeBtnClick: false,\n              doneBtnClick: false,\n              leaderMemberChecked: ''\n            })\n\n            const arrUsers = this.users\n            const user = rxaget(this.props, 'netaauth.user', {})\n            const objUser = arrUsers[user.id.toString()]\n            const paramsCreateMess = {\n              group_id: Number(this.state.group.group_id),\n              type: 6,\n              version: 1,\n              nonce: (Math.floor(Date.now()) * 1000).toString(),\n              sender_name: rxaget(objUser, 'full_name', ''),\n              attachments: JSON.stringify({\n                mediaType: 0, type: 'update_group',\n                owner_uin: owner_uin\n              }).replace(/\"/g, '\\\\\"'),\n              \"is_encrypted\": false, \"mentioned_all\": false\n            }\n            rxio.createMessage(paramsCreateMess, (dataMess) => {\n              if (dataMess) {\n                let groupObj = JSON.parse(JSON.stringify(this.state.group))\n                groupObj.owner_uin = owner_uin\n                groupObj.last_message = dataMess.message\n                groupObj.last_message_id = dataMess.last_message_id\n                this.props.changeStatusLoadMess()\n                this.props.chooseGroupAction(groupObj)\n                this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n              }\n            })\n          } catch (error) { console.log(\"addAdmin\", error) }\n        }\n      })\n    }\n  }\n\n  lg_chooseLeader_okBtnClick() {\n    let groupObj = rxaget(this.props, 'groupManager', {})\n    let leaderMemberChecked = this.state.lg_leaderMemberChecked\n    let index = this.state.admin_uins_index\n\n    const params = {\n      group_id: Number(groupObj.group_id),\n      admin_uins: [leaderMemberChecked.toString()]\n    }\n    rxio.addAdmin(params, (data) => {\n      if (data) {\n        try {\n          this.setState({\n            closeBtnClick: false,\n            doneBtnClick: false,\n            leaderMemberChecked: ''\n          })\n          const arrUsers = this.users\n          const user = rxaget(this.props, 'netaauth.user', {})\n          const objUser = arrUsers[user.id.toString()]\n          const paramsCreateMess = {\n            group_id: Number(this.state.group.group_id),\n            type: 6,\n            version: 1,\n            nonce: (Math.floor(Date.now()) * 1000).toString(),\n            sender_name: rxaget(objUser, 'full_name', ''),\n            attachments: JSON.stringify({\n              mediaType: 0, type: 'update_group',\n              admin_uins: [groupObj.admin_uins[index]]\n            }).replace(/\"/g, '\\\\\"'),\n            \"is_encrypted\": false, \"mentioned_all\": false\n          }\n\n          rxio.createMessage(paramsCreateMess, (dataMess) => {\n            if (dataMess) {\n              let groupObj = JSON.parse(JSON.stringify(this.state.group))\n              groupObj.admin_uins = groupObj.admin_uins[index]\n              groupObj.last_message = dataMess.message\n              groupObj.last_message_id = dataMess.last_message_id\n              this.props.changeStatusLoadMess()\n              this.props.chooseGroupAction(groupObj)\n              this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n              this.leaveGroup()\n            }\n          })\n        } catch (error) { console.log(\"addAdmin\", error) }\n      }\n\n    })\n    this.setState({ displayLeaveGroupScreen: false })\n  }\n\n  leaveGroup() {\n    let groupObj = this.state.group\n    if (groupObj && groupObj.group_id) {\n      if (rxio.connected) {\n        const msgUpGroup = {\n          group_id: Number(groupObj.group_id)\n        }\n        let groupsStore = this.props.netaGroups\n        rxio.leaveGroup(msgUpGroup, (data) => {\n          if (data && [0, 1].indexOf(data.result) !== -1) {\n            this.setState({ displayLeaveGroupScreen: false }, () => {\n              this.props.netaGroupsRemove(groupObj.group_id)\n              if (groupsStore && groupsStore.groups) {\n                let arrGroups = Object.keys(groupsStore.groups)\n                if (arrGroups.constructor === Array && arrGroups.length > 2) {\n                  arrGroups = arrGroups.filter(groupid => groupid !== groupObj.group_id.toString())\n                  if (groupsStore.groups && groupsStore.groups[arrGroups[0]]) {\n                    this.props.chooseGroupAction(groupsStore.groups[arrGroups[0]])\n                  }\n                }\n              }\n            })\n          }\n          this?.props?.closePopup && this.props.closePopup();\n        }) //async function\n      }\n    }\n\n  }\n\n  removeMember(mem) {\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    if (rxio.connected) {\n      const msgUpGroup = {\n        group_id: Number(groupObj.group_id),\n        name: '',\n        avatar_url: '',\n        pull_all: [mem.id.toString()]\n      }\n      rxio.socket.emit('update_group', msgUpGroup, (data) => {\n        const arrUsers = this.users\n        const user = rxaget(this.props, 'netaauth.user', {})\n        const objUser = arrUsers[user.id.toString()]\n        const paramsCreateMess = {\n          group_id: Number(groupObj.group_id),\n          type: 6,\n          version: 1,\n          sender_name: objUser.full_name || '',\n          message: '',\n          attachments: JSON.stringify({ removed_uins: [mem.id.toString()], type: 'update_group' }).replace(/\"/g, '\\\\\"')\n        }\n        rxio.socket.emit('create_message', paramsCreateMess, (dataMess) => {\n          if (dataMess) {\n            let groupObj = JSON.parse(JSON.stringify(this.state.group))\n            groupObj.occupants_uins = data.group.occupants_uins\n            groupObj.last_message = dataMess.message\n            groupObj.last_message_id = dataMess.last_message_id\n            groupObj.timestamp = new Date().getTime() * 1000\n            this.props.changeStatusLoadMess()\n            this.props.chooseGroupAction(groupObj)\n            this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n          }\n        })\n      })\n    }\n  }\n\n  onChangeNotiGroup() {\n    try {\n      let disableNoti = !this.state.disableNoti\n      let groupObj = JSON.parse(JSON.stringify(this.state.group))\n      let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n      !netaAuthSetting.groups[Number(this.state.group.group_id)]\n        && (netaAuthSetting.groups[Number(this.state.group.group_id)] = {})\n      netaAuthSetting.groups[Number(this.state.group.group_id)].disableNoti = disableNoti\n      // rxsetLocal('netaAuthSetting', JSON.stringify(netaAuthSetting))\n      this.props.netaAuthSettingUpdate(netaAuthSetting)\n      this.props.changeStatusLoadMess()\n      this.props.chooseGroupAction(groupObj)\n      this.setState({ disableNoti: disableNoti })\n    } catch (error) { console.log(\"onChangeNotiGroup\", error) }\n  }\n\n  onClickAddMember() {\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    let groupObjMemberIdArr = groupObj.occupants_uins\n    let contactsUsers = []\n    if (this.users && Object.keys(this.users).length > 0) {\n      for (const userid of Object.keys(this.users)) {\n        if (!groupObjMemberIdArr.includes(userid.toString())) {\n          contactsUsers.push(this.users[userid])\n        }\n      }\n      this.setState({ groupsNChat: contactsUsers, groupsNChatChecked: [] }, () => {\n        let user = rxaget(this.props, 'netaauth.user', {})\n        this.props.clickPopup('add_member', { data: { groups: contactsUsers, user: user } }, (data) => {\n          if (data && data.constructor === Array && data.length > 0) {\n            this.onClickUpdateGroup(data)\n          }\n        })\n      })\n    }\n  }\n\n  onClickUpdateGroup(groupsChecked = []) {\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n\n    // let groupsChecked = groupsNChatChecked || []\n    // let clickAddMemberBtn = this.state.clickAddMemberBtn\n    // let groupObjMemberIdArr = JSON.parse(JSON.stringify(groupObj.occupants_uins))\n    // if (groupsChecked && groupsChecked.constructor === Array) {\n    //   for (let i = 0; i < groupsChecked.length; i++) {\n    //     groupObjMemberIdArr.push(String(groupsChecked[i]))\n    //   }\n    // }\n\n    if (groupsChecked.length > 0) {\n      let arrMember = groupsChecked.map(o => o.toString())\n\n      // if (clickAddMemberBtn === false && groupObj && groupObj.group_id && arrMember.constructor === Array && arrMember.length > 0) {\n      if (groupObj && groupObj.group_id && arrMember.constructor === Array && arrMember.length > 0) {\n        if (rxio.connected) {\n          const msgUpGroup = {\n            group_id: Number(groupObj.group_id),\n            name: '',\n            avatar_url: '',\n            push_all: arrMember\n          }\n          rxio.updateGroup(msgUpGroup, (data) => {\n            const arrUsers = this.users\n            const user = rxaget(this.props, 'netaauth.user', {})\n            const objUser = arrUsers[user.id.toString()]\n            const paramsCreateMess = {\n              group_id: Number(groupObj.group_id),\n              type: 6,\n              version: 1,\n              sender_name: objUser.full_name || '',\n              message: '',\n              attachments: JSON.stringify({ added_uins: arrMember, type: 'update_group' }).replace(/\"/g, '\\\\\"')\n            }\n            rxio.createMessage(paramsCreateMess, (dataMess) => {\n              if (dataMess) {\n                let groupObj = JSON.parse(JSON.stringify(this.state.group))\n                groupObj.occupants_uins = data.group.occupants_uins\n                groupObj.last_message = dataMess.message\n                groupObj.last_message_id = dataMess.last_message_id\n                groupObj.timestamp = new Date().getTime() * 1000\n                // this.clearSearchBox()\n                this.props.changeStatusLoadMess()\n                this.setState({ addMemberScreen: false })\n                this.props.chooseGroupAction(groupObj)\n                this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n              }\n            })\n          })\n        }\n      }\n    } else {\n      alert(translate('Add Member Error'))\n    }\n    // this.setState({ clickAddMemberBtn: true })\n  }\n\n  closeAddMemberScreen() {\n    this.clearSearchBox()\n    this.setState({ addMemberScreen: false })\n  }\n\n  onClickAddMemberGroup(contact) {\n    const groupsNChatChecked = JSON.parse(JSON.stringify(this.state.groupsNChatChecked))\n    console.log(groupsNChatChecked, 'groupsNChatChecked')\n    if (groupsNChatChecked.indexOf(contact.id) === -1) {\n      groupsNChatChecked.push(contact.id)\n    } else {\n      groupsNChatChecked.splice(groupsNChatChecked.indexOf(contact.id), 1)\n    }\n    this.setState({ groupsNChatChecked })\n  }\n\n  lg_closeNewManager() {\n    this.setState({ displaySelectManagerScreen: false })\n  }\n\n  newManager_dropListClick() {\n    if (this.state.displayGroupList === true) {\n      this.setState({ displayGroupList: false })\n    } else {\n      this.setState({ displayGroupList: true })\n    }\n  }\n\n  backBtnClickGroup() {\n    this.setState({ doneBtnClick: false })\n  }\n\n  editAccountInfo() {\n    this.setState({ doneBtnClick: true, groupNameValue: checkNameGroup(this.state.group, this.users, this.userid) })\n  }\n\n  doneAccountInfo() {\n    this.setState({ doneBtnClick: false })\n    try {\n      if (this.state.groupNameValue !== checkNameGroup(this.state.group, this.users, this.userid)) {\n        let newName = this.state.groupNameValue\n        if (this.state.group.type === 3) {\n          const user = rxaget(this.props, 'netaauth.user', {})\n          let groupObj = JSON.parse(JSON.stringify(this.state.group))\n          groupObj.name = newName\n          groupObj.group_name = newName\n          groupObj.group_fullname = newName\n          groupObj.last_message = {\n            attachments: `{\"updated_group_name\":${newName},\"mediaType\":0,\"type\":\"update_group\"}`,\n            group_id: Number(this.state.group.group_id),\n            type: 6,\n            sender_uin: user.id.toString()\n          }\n          let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n          !netaAuthSetting.groups[Number(this.state.group.group_id)]\n            && (netaAuthSetting.groups[Number(this.state.group.group_id)] = {})\n          netaAuthSetting.groups[Number(this.state.group.group_id)].name = newName\n          rxsetLocal('netaAuthSetting', JSON.stringify(netaAuthSetting))\n          this.props.changeStatusLoadMess()\n          this.props.chooseGroupAction(groupObj)\n          // this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n        }\n        else\n          if (rxio.connected) {\n            let msg = {\n              group_id: Number(this.state.group.group_id),\n              \"name\": newName\n            }\n            rxio.socket.emit(\"update_group\", msg, (data) => {\n              if (data && data.result === 0) {\n                try {\n                  const arrUsers = this.users\n                  const user = rxaget(this.props, 'netaauth.user', {})\n                  const objUser = arrUsers[user.id.toString()]\n                  let msg = {\n                    group_id: Number(this.state.group.group_id),\n                    type: 6,\n                    version: 1,\n                    nonce: (Math.floor(Date.now()) * 1000).toString(),\n                    sender_name: rxaget(objUser, 'full_name', ''),\n                    attachments: JSON.stringify({\n                      updated_group_name: newName,\n                      mediaType: 0, type: \"update_group\"\n                    }).replace(/\"/g, '\\\\\"'),\n                    \"is_encrypted\": false, \"mentioned_all\": false\n                  }\n                  rxio.socket.emit('create_message', msg, (dataMess) => {\n                    console.log(\"doneAccountInfo update_group\", dataMess)\n                    if (dataMess) {\n                      let groupObj = JSON.parse(JSON.stringify(this.state.group))\n                      groupObj.name = newName\n                      groupObj.group_name = newName\n                      groupObj.group_fullname = newName\n                      groupObj.last_message = dataMess.message\n                      groupObj.last_message_id = dataMess.last_message_id\n                      this.props.changeStatusLoadMess()\n                      this.props.chooseGroupAction(groupObj)\n                      this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n                    }\n                  })\n                } catch (error) { console.log(\"update_group name\", error) }\n              }\n            })\n          }\n      }\n    } catch (error) { console.log(\"update_group name\", error) }\n  }\n\n  openNewManager() {\n    this.setState({ closeBtnClick: true })\n  }\n\n  closeNewManager() {\n    this.setState({ closeBtnClick: false })\n  }\n\n  loadImgStatic(obj, name, url = global.rxu.config.cdn_endpoint) {\n    if (obj.sender_avatar) {\n      return global.rxu.config.get_static + obj.sender_avatar\n    } else if (obj.avatar_url) {\n      return global.rxu.config.get_static + obj.avatar_url\n    } else if (obj.type === 3 && !obj.avatar_url) {\n      const users = this.users\n      if (obj && obj.occupants_uins && obj.occupants_uins.constructor === Array && obj.occupants_uins.length === 2 && obj.occupants_uins.indexOf(this.userid.toString()) !== -1) {\n        const arruserid = obj.occupants_uins.filter(o => o !== this.userid.toString())\n        if (arruserid && arruserid.constructor === Array && arruserid[0] && users[arruserid[0]] && users[arruserid[0]].profile_url) {\n          return url + users[arruserid[0]].profile_url\n        }\n      } else {\n        return './images/default/static/avadefault.svg'\n      }\n    } else {\n      return './images/default/static/avadefault.svg'\n    }\n  }\n\n  async loadMediaStatic() {\n    const group = this.state.group\n    const paging_page = this.state.paging_page\n    const paging_size = this.state.paging_size\n    const block_scroll = this.state.block_scroll\n    const netaMedia = JSON.parse(JSON.stringify(rxaget(this.props.netaMedia, 'data.' + group.group_id, { images: {}, videos: {}, files: {} })))\n    let breakLoop = false\n    let checkContinue = 0\n    if (group && group.group_id && this.token) {\n      if (!block_scroll) {\n        for (let i = paging_page; i < 100; i++) {\n          let pageoffset = i\n          pageoffset = i\n          const api_media_chat = global.rxu.config.get_media_chat\n            + '?load_attachments=true&offset=' + pageoffset * paging_size + '&group_id='\n            + group.group_id + '&media_type=2%2C%204%2C%2012&limit=' + paging_size\n          this.controller[group.group_id] = new AbortController();\n          let { signal } = this.controller[group.group_id];\n          let res = await fetch(api_media_chat, {\n            signal: signal, method: 'GET', headers: {\n              Accept: 'application/json', 'TC-Token': this.token,\n              Connection: 'Keep-Alive', 'Accept-Encoding': 'gzip'\n            }, body: null\n          }).catch(function (error) { });\n          try {\n            let json = await res.json()\n            if (json && this.state.group.group_id === group.group_id) {\n              const arrMedia = json.filter((v, i, a) => a.findIndex(t => ((t.media_uid + t.message_id) === (v.media_uid + v.message_id))) === i).sort((a, b) => (a.msg_create_at > b.msg_create_at) ? 1 : ((b.msg_create_at > a.msg_create_at) ? -1 : 0))\n              for (const media of arrMedia) {\n                let attachments = {}\n                try {\n                  attachments = JSON.parse(rxaget(media, 'attachments', '').replace(/[\\t\\r\\n]/g, ''))\n                } catch (e) {\n                  if (typeof (rxaget(media, 'attachments', '')) === 'object') {\n                    attachments = rxaget(media, 'attachments', '')\n                  }\n                }\n                if (media.media_type === 2) {\n                  if (attachments && attachments.images && attachments.images.constructor === Array && attachments.images.length > 0) {\n                    for (const oimage of attachments.images) {\n                      media.url = rxaget(oimage, 'url', '')\n                      if (!netaMedia.images[media.url] && media.url) {\n                        netaMedia.images[media.url] = { url: media.url, message_id: media.message_id, group_id: media.group_id, media_type: media.media_type, msg_create_at: media.msg_create_at }\n                        checkContinue = checkContinue + 1\n                      }\n                    }\n                  }\n                }\n\n                if (media.media_type === 4) {\n                  if (attachments && attachments.video && attachments.video.constructor === Object) {\n                    media.url = rxaget(attachments, 'video.url', '') || ''\n                    media.thumbnail_url = rxaget(attachments, 'video.thumbnail_url', '') || ''\n                    if (netaMedia.videos && !netaMedia.videos[media.url] && media.url) {\n                      netaMedia.videos[media.url] = { url: media.url, thumbnail_url: media.thumbnail_url, message_id: media.message_id, group_id: media.group_id, media_type: media.media_type, msg_create_at: media.msg_create_at }\n                      checkContinue = checkContinue + 1\n                    }\n                  }\n                }\n\n                if (media.media_type === 12) {\n                  if (attachments && attachments.file && attachments.file.constructor === Object) {\n                    media.url = rxaget(attachments, 'file.url', '') || ''\n                    media.ext = rxaget(attachments, 'file.file_extension', '') || ''\n                    media.file_name = rxaget(attachments, 'file.file_name', '') || ''\n                    if (netaMedia.files && !netaMedia.files[media.url] && media.url) {\n                      netaMedia.files[media.url] = { url: media.url, ext: media.ext, name: media.file_name, message_id: media.message_id, group_id: media.group_id, media_type: media.media_type, msg_create_at: media.msg_create_at }\n                      checkContinue = checkContinue + 1\n                    }\n                  }\n                }\n              }\n              if (checkContinue === 0 || this.state.group.group_id !== group.group_id) { breakLoop = true }\n\n              // this.props.netaMediaAdd(group.group_id, netaMedia)\n\n              if ((arrMedia && arrMedia.constructor === Array && arrMedia.length < paging_size) || this.state.group.group_id !== group.group_id) {\n                breakLoop = true\n              }\n              // console.log(\"++\", i, paging_size, arrMedia.length, checkContinue, breakLoop)\n            }\n            else if (this.state.group.group_id !== group.group_id) {\n              console.log(\"ASYCN CHANGE ID\")\n            }\n          } catch (eJson) {\n            this.setState({ paging_page: 0, arrData: [], block_scroll: false })\n            break\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          if (this.state.group.group_id === group.group_id) {\n\n            let arrDataTmp = []\n            const type = this.state.tabactive || 'images'\n            if (netaMedia && netaMedia[type]) {\n              for (const key of Object.keys(netaMedia[type] || {})) {\n                if (netaMedia[type][key]) { arrDataTmp.push(netaMedia[type][key]) }\n              }\n            }\n            arrDataTmp = arrDataTmp.sort((a, b) => (a.msg_create_at > b.msg_create_at) ? -1 : ((b.msg_create_at > a.msg_create_at) ? 1 : 0))\n\n            this.setState({ arrData: arrDataTmp })\n          }\n\n          if (breakLoop) {\n            if (this.state.group.group_id === group.group_id) {\n              this.setState({ paging_page: i + 1, block_scroll: true, loadingMedia: false })\n            }\n            break\n          }\n        }\n      }\n    }\n  }\n\n  changeTabActive(type) {\n    const group_id = rxaget(this.state.group, 'group_id', '')\n    const netaMedia = rxaget(this.props.netaMedia, 'data.' + group_id, { images: {}, videos: {}, files: {} })\n    let arrData = []\n    if (netaMedia && netaMedia[type]) {\n      for (const key of Object.keys(netaMedia[type] || {})) {\n        if (netaMedia[type][key]) { arrData.push(netaMedia[type][key]) }\n      }\n    }\n    arrData = arrData.sort((a, b) => (a.msg_create_at > b.msg_create_at) ? -1 : ((b.msg_create_at > a.msg_create_at) ? 1 : 0))\n    this.setState({ tabactive: type, arrData: arrData })\n  }\n\n  showGallery({ index, type }) {\n    this.setState({ checkgallery: true, galleryPosition: Number(index), type: type })\n  }\n\n  keyClickFunction(event) {\n    if (event.keyCode === 27) {\n      this.closeGallery()\n    }\n  }\n\n  closeGallery() {\n    this.setState({ checkgallery: false })\n  }\n\n  downloadFile(file_id, file_name) {\n    const src = global.rxu.config.get_static + '/' + file_id\n    try {\n      const downloadLink = document.createElement('a')\n      downloadLink.href = src\n      downloadLink.download = file_name\n      downloadLink.setAttribute('download', 'download')\n      document.body.appendChild(downloadLink)\n      downloadLink.click()\n      document.body.removeChild(downloadLink)\n    } catch (e) { }\n  }\n\n  getStringsImages(arrData) {\n    let galleryImages = ''\n    arrData.forEach(element => {\n      galleryImages += element.url.replace(/\\s/g, '') + ','\n    })\n    return (\n      galleryImages\n\n    )\n  }\n\n  clearSearchBox() {\n    const chatDiv = document.getElementById('addmember_searchBox')\n    chatDiv.value = ''\n\n  }\n\n  func_getCharacName(name) {\n    let arrName = name.split(' ');\n    if (arrName.length === 1) {\n      let _name = arrName[0][0] + arrName[0][1]\n      return _name.toUpperCase()\n    }\n    else {\n      let _name = (arrName[0][0] + arrName[arrName.length - 1][0])\n      return _name.toUpperCase()\n    }\n  }\n\n  loadGroupsTemp(occupants_uins, users) {\n    // let groupId = occupants_uins//this.state.group.occupants_uins\n    // let groups = users//this.users\n    let groupsTemp = []\n    let countMemberOnl = 0\n    if (occupants_uins) {\n      for (const useridkey of Object.keys(users)) {\n        for (let i = 0; i < occupants_uins.length; i++) {\n          if (String(occupants_uins[i]) === String(users[(useridkey)].id)) {\n            groupsTemp.push(users[(useridkey)])\n            if (users[(useridkey)].online_status === 1) {\n              countMemberOnl++\n            }\n          }\n        }\n      }\n      this.setState({\n        occupants_uins: occupants_uins,\n        groupsTemp: groupsTemp,\n        chooseLeader_groupsTemp: groupsTemp,\n        lg_chooseLeader_groupsTemp: groupsTemp,\n        countMemberOnl: countMemberOnl\n      })\n    }\n\n  }\n\n  uploadFileImages(fileList) {\n    try {\n      if (fileList.length && fileList[0]) {\n        var file = fileList[0]\n        let parts = (file.name || '').split('.');\n        let ext = parts[parts.length - 1] || '';\n        if (['png', 'jpg'].indexOf(ext.toLowerCase()) >= 0) {\n          let fileSize = file.size\n          let extFilename = 'png'\n\n          let _URL = window.URL || window.webkitURL\n          let img = new Image();\n          let objectUrl = _URL.createObjectURL(file)\n\n          let dataParams = {\n            content_type: 'image/' + extFilename,\n            name: 'netalo_' + Math.floor(Date.now()),\n            public: true,\n            size: fileSize\n          }\n          let header = { 'TC-Token': this.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n          let requestOptions = {\n            method: 'POST', headers: header, body: JSON.stringify(dataParams), redirect: 'follow'\n          };\n\n          fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n            if (json && json.blod_object && json.blod_object.form_data) {\n              let dataUpload = new FormData()\n              let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n              for (let key of arrKeys) {\n                if (json.blod_object.form_data[key]) {\n                  dataUpload.append(key, json.blod_object.form_data[key])\n                }\n              }\n              dataUpload.append('file', file, file.name)\n              dataUpload.append('success_action_status', 201)\n\n              fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n                if (result.indexOf('Key') !== -1) {\n                  let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                  let strresult = result.match(patt);\n                  if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                    let key = strresult[1]\n                    if (key) {\n                      let optComplete = {\n                        method: 'PUT',\n                        headers: header,\n                        body: JSON.stringify({\n                          content_type: json.content_type, id: json.id, name: json.name, size: json.size, uid: json.uid\n                        })\n                      };\n\n                      fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                        .then(response => {\n                          if (response.status === 200) {\n                            try {\n                              img.onload = () => {\n                                _URL.revokeObjectURL(objectUrl)\n                                const arrUsers = this.users\n                                const user = rxaget(this.props, 'netaauth.user', {})\n                                const objUser = arrUsers[user.id.toString()]\n                                let msg = {\n                                  group_id: Number(this.state.group.group_id),\n                                  avatar_url: key,\n                                }\n                                if (msg && msg.group_id) {\n                                  if (rxio.connected) {\n                                    rxio.socket.emit(\"update_group\", msg, (data) => {\n                                      if (data && data.result === 0) {\n                                        let msg = {\n                                          group_id: Number(this.state.group.group_id),\n                                          type: 6,\n                                          version: 1,\n                                          nonce: (Math.floor(Date.now()) * 1000).toString(),\n                                          sender_name: rxaget(objUser, 'full_name', ''),\n                                          attachments: JSON.stringify({\n                                            updated_group_avatar: key,\n                                            mediaType: 0, type: \"update_group\"\n                                          }).replace(/\"/g, '\\\\\"'),\n                                          \"is_encrypted\": false, \"mentioned_all\": false\n                                        }\n                                        rxio.socket.emit('create_message', msg, (dataMess) => {\n                                          if (dataMess) {\n                                            let groupObj = JSON.parse(JSON.stringify(this.state.group))\n                                            groupObj.avatar_url = key\n                                            groupObj.last_message = dataMess.message\n                                            groupObj.last_message_id = dataMess.last_message_id\n                                            this.props.changeStatusLoadMess()\n                                            this.props.chooseGroupAction(groupObj)\n                                            this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n                                          }\n                                        })\n                                      }\n                                    })\n                                  }\n                                }\n                              }\n                              img.src = objectUrl\n                            } catch (e) { }\n                          }\n                        }).catch(errorPut => console.log('error', errorPut));\n                    }\n                  }\n                }\n              })\n            }\n          }).catch(error => console.log('create_blob error', error))\n        } else alert(translate('The image file format is not suitable. Please select the image file as .jpg or .png'))\n      }\n    } catch (error) { console.log('upload error', error) }\n  }\n\n  disableDrop = event => {\n    event.preventDefault();\n  }\n\n  onClickStopCall() {\n    this.props.closePopup()\n  }\n\n  onClickShowPopupCreateGroup() {\n    let flagCreateGroupPopup = this.state.flagCreateGroupPopup\n    this.setState({ flagCreateGroupPopup: !flagCreateGroupPopup })\n  }\n\n  \n  createNewChat(user) {\n    let flagCreateGroupPopup = this.state.flagCreateGroupPopup\n    let typePopup = this.state.typePopup\n    if (flagCreateGroupPopup) {\n      let groupsNChatChecked = this.state.groupsNChatChecked\n      if (groupsNChatChecked.indexOf(user.id) === -1) {\n        groupsNChatChecked.push(user.id)\n      } else {\n        groupsNChatChecked.splice(groupsNChatChecked.indexOf(user.id), 1)\n      }\n      this.setState({ groupsNChatChecked })\n    } else {\n      if (typePopup === 'create_group') {\n        let userOwner = rxaget(this.state, 'user', {})\n        let partner_id = user.id\n        const params = {\n          'type': 3,\n          'owner_uin': userOwner.id,\n          'name': '',\n          'avatar_url': '',\n          'occupants_uins': [userOwner.id, partner_id],\n          'sender_name': userOwner.name\n        }\n        try {\n          if (this.props.netaPopup && this.props.netaPopup.status) {\n            let funcCreateGroup = this.props.netaPopup.callback\n\n            rxio.createNewGroup(params, (data) => {\n              if (data && data.group) {\n                if (data.group.type === 3) {\n                  data.group.partner_id = partner_id\n                }\n                this.props.chooseGroupAction(data.group)\n              }\n              setTimeout(() => {\n                funcCreateGroup()\n                this.resetState()\n              }, 1000)\n            })\n          }\n        } catch (e) {\n          console.log(e)\n        }\n      } else if (typePopup === 'add_member') {\n        let groupsNChatChecked = this.state.groupsNChatChecked\n        if (groupsNChatChecked.indexOf(user.id) === -1) {\n          groupsNChatChecked.push(user.id)\n        } else {\n          groupsNChatChecked.splice(groupsNChatChecked.indexOf(user.id), 1)\n        }\n        this.setState({ groupsNChatChecked })\n      } else if (typePopup === 'leave_group') {\n        let groupsNChatChecked = [user.id]\n        this.setState({ groupsNChatChecked })\n      }\n    }\n  }\n\n  onClickClosePopup = () => {\n    this.setState({ flagCreateGroupPopup: false })\n  }\n\n  chooseFileImages(fileList) {\n    console.log(fileList, 'phai lít')\n    if(!fileList?.length) return\n    let groupImageURL = URL.createObjectURL(fileList[0])\n    this.setState({ groupImage: fileList, chooseFileImagesStatus: true, groupImageURL: groupImageURL })\n  }\n\n  onAfterBlockUser = group => {\n    this.setState({ group: {...group} }, () => this.props.chooseGroupAction(group))\n    this.forceUpdate()\n  }\n\n  render() {\n    const group = this.state.group\n    const tabactive = this.state.tabactive\n    const arrData = this.state.arrData\n    const galleryImages = arrData && this.getStringsImages(arrData)\n    \n    let arrUserSelected = []\n    let contactTitle = ''\n    if (this.state.groupsNChatOrigin && this.state.groupsNChatOrigin.constructor === Array && this.state.groupsNChatOrigin.length > 0) {\n      arrUserSelected = this.state.groupsNChatOrigin.filter(ucontact => this.state.groupsNChatChecked.indexOf(ucontact.id) !== -1)\n    }\n    this.state.groupsNChat.sort(this.compareContact)\n\n    return (\n      <div className='zchat_mangagerscreen'>\n        <div className='zchat_callscreen_bg'></div>\n        <div className={`zchat_callscreen_main ${this.state.isShowPopupManageGroup ? 'visible' : 'invisible'}`}>\n          {/* {this.state.flagManageGroupContextMenu &&  */}\n          <div className='zchat_mangagercenter'>\n            <img className='zchat_mangagercenter_close' alt='' src={'./images/default/icons/icon-close.png'} onClick={e => this.onClickStopCall()} />\n\n            <div className='' >\n              <div className='newManager_ztab-more-user'>\n                <div className='zmore-header'>\n                  <div className='edit-img-user_manage_group'>\n                    {/* <div className='edit-img-user_group'> */}\n                    {(checkAvatarGroup(this.state.group, this.users, this.userid))\n                      && <>\n                        <img src={this.loadImgStatic(this.state.group, 'group', global.rxu.config.get_static)} alt='' className='account-ava-group images-static'\n                          onError={(e) => { e.target.style.display = 'none' }} />\n                        <img src={this.loadImgStatic(this.state.group, 'group')} alt='' className='account-ava-group images-static'\n                          onError={(e) => { e.target.style.display = 'none' }} />\n                      </>}\n                    {!(this.state.group.avatar_url || (this.users[this.state.group.partner_id] && this.users[this.state.group.partner_id]['profile_url'])) &&\n                      <span className='account-ava-span'\n                        style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameGroup(this.state.group, this.users).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>\n                        {rxChangeSlug(checkNameGroup(this.state.group, this.users, this.userid), true).slice(0, 2).toUpperCase()}\n                      </span>\n                    }\n\n                  </div>\n                  <div className='zmore-btn-edit_groupAcount'>\n                    {((this.isLeader(this.userid) && rxaget(group, 'type', 0) !== 3) || rxaget(group, 'type', 0) === 3) &&\n                      <span className='zmore-txt-edit_manage_group' onClick={e => this.editAccountInfo()}>\n                        {translate('Edit')}\n                      </span>\n                    }\n\n                  </div>\n                </div>\n                <span className='ztab-more-user_txtname'>\n                  {subString(checkNameGroup(this.state.group, this.users, this.userid), 20)}\n                </span>\n\n                {/* {(rxaget(group, 'type', 0) === 3)\n                  && getGroupById(this.state.group, this.users, this.userid).online_status === 1\n                  && <span className='ztab-more-user_status'>\n                    {translate('Online')}\n                  </span>\n                } */}\n\n                {/* {console.log(this.state.group, 'this.state.group')}\n                {console.log(this.state.usersStatus, 'this.state.usersStatus')}\n                {console.log(this, 'this')} */}\n\n                {(rxaget(group, 'type', 0) === 3)\n                  && this.state.group\n                  && (this.state.group.partner_id || this.state.group.occupants_uins[0])\n                  && this.state.usersStatus[Number(this.state.group.partner_id || this.state.group.occupants_uins[0])]\n                  && (this.state.usersStatus[Number(this.state.group.partner_id || this.state.group.occupants_uins[0])].online_status === 1\n                    ? <span className='ztab-more-user_status'>Online</span>\n                    : this.state.usersStatus[Number(this.state.group.partner_id\n                      || this.state.group.occupants_uins[0])].last_seen_at > 0\n                      ? <span className='ztab-more-user_status'>\n                        {translate('Last seen ')}\n                        {autoConvertTime(this.state.usersStatus[Number(this.state.group.partner_id || this.state.group.occupants_uins[0])].last_seen_at)}\n                      </span>\n                      : <span className='ztab-more-user_status'>Offline</span>\n                  )\n                }\n\n                {/* {(rxaget(group, 'type', 0) === 3)\n                  && getGroupById(this.state.group, this.users, this.userid).online_status !== 1\n                  && <span className='ztab-more-user_status'>\n                    {translate('Last seen ')}\n                    {autoConvertTime(rxaget(group, 'last_message.created_at', ''))\n                      || autoConvertTime(rxaget(group, 'created_at', ''))}\n                  </span>\n                } */}\n\n                {(rxaget(group, 'type', 0) !== 3)\n                  && <span className='ztab-more-user_status'>\n                    {this.state.groupsTemp?.length}\n                    {translate(' member')}\n                    {this.state.countMemberOnl > 0 ? (', ' + this.state.countMemberOnl + ' Online') : ''}\n                  </span>\n                }\n\n                <div className='newManager_dropList' onClick={e => this.newManager_dropListClick()}>\n                  <div className={(rxaget(group, 'type', 0) !== 3) ? 'newManager_dropList_body' : 'className_hiden'}>\n                    <div className='newManager_dropList_title'>\n                      {translate('Group members')}\n                    </div>\n                    <div className='newManager_dropList_icon'>\n                      <i className={this.state.displayGroupList === true ? 'editGroup_arrow_right' : 'arrow down'}></i>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {(rxaget(group, 'type', 0) === 3) && <div className='ztab-more-info'>\n                <div className='ztab-more-info_phone'>\n                  <span className='ztab-more-info_phone-txt'>{translate('Phone number')}</span>\n                  <span className='ztab-more-info_phone_number_user'>{zget(this.users, [this.state.group.partner_id], {}).phone}</span>\n\n                </div>\n                {/*<div className='ztab-more-info_act'>\n                  <img className='icon32 icon-act' alt='' src={zget(this.props, 'themeValue')==='blueColor'?'./images/icons/messenger_bl.png':'./images/icons/messenger.png'} />\n                  <img className='icon32 icon-act' alt='' src={zget(this.props, 'themeValue')==='blueColor'?'./images/icons/callright_bl.png':'./images/icons/callright.png'}  />\n                  <img className='icon32 icon-act' alt='' src={zget(this.props, 'themeValue')==='blueColor'?'./images/icons/videocall_bl.png':'./images/icons/videocall.png'} />\n                </div>*/}\n              </div>}\n\n              {/* Danh sach nhom */}\n              <div className={(rxaget(group, 'type', 0) === 3) || (this.state.displayGroupList === true) ? 'newManager_contactlist_hiden' : 'newManager_contactlist'} id='zgroup_list' onScroll={this.scrollGroupChat}>\n                {this.state.groupsTemp.map((ele, index) =>\n                  <div className={(ele.group_id === this.state.group_id) ? 'newManager_zgroupitem-contact active clearfix' : 'newManager_zgroupitem-contact clearfix'} key={index}  >\n                    {/*<div id='menu-mouseright-chat'><RxModalMouseRightChat /></div>*/}\n                    <div className='newManager_avatar'>\n                      {(ele.profile_url) && <img src={global.rxu.config.cdn_endpoint + ele.profile_url} alt='' className='ava-group images-static'\n                        onError={(e) => { e.target.onerror = null; e.target.src = global.rxu.config.get_static + ele.profile_url }} />}\n                      {(!ele.profile_url) &&\n                        <span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameContact(ele).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>\n                          {rxChangeSlug(checkNameUser(ele)).slice(0, 2).toUpperCase()}\n                        </span>\n                      }\n                    </div>\n\n                    <div className={'zgroup_maininfo-contact' + (ele.id !== this.userid && this.isLeader(this.userid) ? \"edit\" : '')}>\n                      <div className='newManager_userinfo_place'> {subString(checkNameUser(ele, this.userid, this.props.netaauth), 20)} </div>\n                      {!this.isLeader(ele.id) && <div className='remove_member'\n                        onClick={() => this.removeMember(ele)} >{translate('Remove')}</div>}\n                      {<div className={this.isLeader(ele.id) ? 'newManager_leader' : 'newManager_leader_hiden'}>{translate('Leader')}</div>}\n                      {(ele.online_status) && <div className={ele.online_status === 1 ? 'newManager_user_online' : 'newManager_user_hiden'}>Online</div>}\n                    </div>\n                    <div className='group_divider' ></div>\n                  </div>\n                )\n                }\n              </div>\n              <div className={(rxaget(group, 'type', 0) === 3) ? 'ztab-add-member_hiden' : 'ztab-add-member'} >\n                <div className='zact-add_manage_group'>\n                  <span className={rxaget(group, 'type', 0) !== 3 ? 'zact-add-member' : 'zact-add-member_hiden'}\n                    onClick={e => this.onClickAddMember()}\n                  >\n                    {translate('Add member')}\n                  </span>\n                  {/* <span className={rxaget(group, 'type', 0) === 3 ? 'zact-block-contact':'zact-block-contact_hiden'} > \n                    {translate('Block contact')}\n                  </span> */}\n                </div>\n              </div>\n\n              <div className={(rxaget(group, 'type', 0) !== 3) ? 'tab_create_group_chat_hiden' : 'tab_create_group_chat'} >\n                <div className='tab_create_group_chat_area'>\n                  <span className={rxaget(group, 'type', 0) === 3 ? 'tab_create_group_chat_main' : 'tab_create_group_chat_main_hiden'}>\n                    <CreateGroupChat\n                      currentUser={this.users[this.userid]} //cái này là id của mình (acc đang đăng nhập) chứ không phải của thằng được click\n                      userChecked={this.users[this.state.group.partner_id]}\n                      netaauth={this.props.netaauth}\n                      users={this.state.groupsNChat}\n                      createGroupChatText= {translate('Create a group')}\n                      onShow={() => this.setState({ isShowPopupManageGroup: false })} \n                      onHide={() => this.setState({ isShowPopupManageGroup: true })} \n                      onHideAllPopup={() => this.setState({ isShowPopupManageGroup: true })} \n                    />\n                  </span>\n                </div>\n              </div>\n              \n              <div className={this.state.notificationStatus === true ? 'ztab-more-act' : 'ztab-more-act_hiden'}>\n                <div className='zact-add_manage_group_noti'>\n                  <span className='group_manage_allow_noti'>\n                    {translate('Allows notifications')}\n                  </span>\n                  <div className='manage_group_noti_mode'>\n                    <label className='switch'>\n                      <input className='pushToggles' type='checkbox' checked={!this.state.disableNoti}\n                        onChange={e => this.onChangeNotiGroup()} />\n                      <span className='slider round'></span>\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              {/* HERE - Blocke User */}\n                { group.type === 3 && <div className='group_manage_block_user'>\n                  <BlockUser\n                    isBlocked={checkBlock(group, this.userid)} \n                    group={group}\n                    onAfterBlockUser={this.onAfterBlockUser}\n                    blockText= {translate('Block contact')}\n                    unBlockText= {translate('Unblock contact')}\n                    blockConfirmText = {translate('Are you sure you want to block this contact, you and this person will not be able to make calls or send messages')}\n                    unBlockConfirmText = {translate('Are you sure you want to unblock this contact')}\n                    cancelBtnText = {translate('Cancel')}\n                    acceptBtnText = {translate('Accept')}\n                  />\n                </div>}\n              {/* END - Block User */}\n\n              <div className='ztab-more-act'>\n                <div className={rxaget(group, 'type', 0) !== 3 ? 'zact' : 'zact_hiden'}>\n                  <span className={rxaget(group, 'type', 0) !== 3 ? 'zact-leave-group' : 'zact-leave-group_hiden'}\n                    onClick={e => this.leaveGroupBtnClick()}>\n                    {translate('Leave group')}\n                  </span>\n\n                  <span className={rxaget(group, 'type', 0) === 3 ? 'zact-block-contact' : 'zact-block-contact_hiden'} >\n                    {translate('Block contact')}\n                  </span>\n                </div>\n              </div>\n              <div className='ztab-more-document'>\n                <div className='zdocument-header'>\n                  <span className={(tabactive === 'images') ? 'zdocument-header-txt zdocument-header-txt-active' : 'zdocument-header-txt'} onClick={e => this.changeTabActive('images')}>{translate('Image')}</span>\n                  <span className={(tabactive === 'videos') ? 'zdocument-header-txt zdocument-header-txt-active' : 'zdocument-header-txt'} onClick={e => this.changeTabActive('videos')}>Video</span>\n                  <span className={(tabactive === 'files') ? 'zdocument-header-txt zdocument-header-txt-active' : 'zdocument-header-txt'} onClick={e => this.changeTabActive('files')}>{translate('Document')}</span>\n                </div>\n                <div className='zdocument-list'>\n                  {(arrData && arrData.length > 0) && <>\n                    {arrData.map((ele, index) => (\n                      <div key={ele.media_uid + ele.url} className='zdocument-item'>\n                        {(tabactive === 'images') && <img src={global.rxu.config.get_static + ele.url} alt='' className='zdoc-item' onClick={e => this.showGallery({ index, type: 'img' })} />}\n                        {(tabactive === 'videos') && <div className='zvideo-list' onClick={e => this.showGallery({ index, type: 'video' })}>\n                          {(ele.thumbnail_url && ele.thumbnail_url !== '') && <img src={global.rxu.config.get_static + ele.thumbnail_url} alt='' className='zvideo-item' onClick={e => this.showGallery({ index, type: 'video' })} />}\n                          <div className='zvideo-item-play'><img src={'./images/default/static/icon-media-play-white.svg'} alt='icon-media-play-white' /></div>\n                        </div>}\n                        {(tabactive === 'files') && <div className='zdoc-list' title={ele.name || ''}>\n                          <div className='zicon-doc'><span className='icon-doc' onClick={e => this.downloadFile(ele.url, ele.name)} /></div>\n                          <div className='zicon-name' title={ele.name || ''}><span className='icon-doc-name'>{(ele.name) ? ele.name.substring(0, (6)) + '...' : ''}</span></div>\n                        </div>}\n                      </div>))}\n                  </>}\n\n                  <div className=\"loading\" style={{ display: this.state.loadingMedia ? 'flex' : 'none' }}><div className=\"dot-flashing\"></div></div>\n                </div>\n                {this.state.checkgallery && RxImageGallery &&\n                  <RxImageGallery images={galleryImages} closeShowGallery={() => this.closeGallery()} position={this.state.galleryPosition} type={this.state.type} />\n                }\n              </div>\n\n              <div className={this.state.displayLeaveGroupScreen ? 'leaveGroup_rectangle' : 'leaveGroup_rectangle_hiden'}>\n                <div className='leaveGroup_rectangle_1'></div>\n                <div className='leaveGroup_rectangle_2'></div>\n              </div>\n            </div>\n          </div>\n          {/* } */}\n\n          <div className={this.state.doneBtnClick === true ? 'edit_group_manage_area' : 'edit_group_manage_area_hiden'} >\n            <div className='edit_group_manage'>\n              <div className='zmore-header'>\n                <div className='zmore-btn-back_place' onClick={e => this.backBtnClickGroup()}>\n                  <i className='icon-arrow-left' ></i>\n                </div>\n                <div className='rxAccount-edit-btn-done'>\n                  <span className='manage_group-edit-txt-done' onClick={e => this.doneAccountInfo()}>\n                    {translate('Done')}\n                  </span>\n                </div>\n                <div className='edit-img-manage-group' onClick={(e) => { rxaget(group, 'type', 0) !== 3 && this.refs.data_image.click() }}>\n                  <input type='file'\n                    id='data_image'\n                    ref='data_image'\n                    multiple={false}\n                    key={this.state.theInputFileKey + '_data_image'}\n                    style={{ display: 'none' }}\n                    onChange={(e) => this.uploadFileImages(e.target.files)}\n                    accept=\"image/jpg,image/png,video/mp4\" />\n                  {rxaget(group, 'type', 0) !== 3 && <div className=\"icon-camera\"></div>}\n                  {(checkAvatarGroup(this.state.group, this.users, this.userid)) &&\n                    <>\n                      <img src={this.loadImgStatic(this.state.group, 'group')} alt=''\n                        className={'account-ava-group images-static' + (rxaget(group, 'type', 0) !== 3 ? \" edit\" : \"\")}\n                        onError={(e) => { e.target.style.display = 'none' }} />\n                      <img src={this.loadImgStatic(this.state.group, 'group', global.rxu.config.get_static)} alt=''\n                        className={'account-ava-group images-static' + (rxaget(group, 'type', 0) !== 3 ? \" edit\" : \"\")}\n                        onError={(e) => { e.target.style.display = 'none' }} />\n                    </>\n                  }\n                  {!(this.state.group.avatar_url || (this.users[this.state.group.partner_id] && this.users[this.state.group.partner_id]['profile_url'])) &&\n                    <span className={'account-ava-span' + (rxaget(group, 'type', 0) !== 3 ? \" edit\" : \"\")}\n                      style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameGroup(this.state.group, this.users).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>\n                      {rxChangeSlug(checkNameGroup(this.state.group, this.users, this.userid)).slice(0, 2).toUpperCase()}\n                    </span>\n                  }\n\n                </div>\n\n              </div>\n              <div className='rxAccount_group_name_place'>\n                <div className='rxAccount_group_name_title'>{(rxaget(group, 'type', 0) !== 3) ? translate('Group name') : translate('Full name')}</div>\n                <input className='rxAccount_group_name_input' placeholder={translate('Edit name')}\n                  value={this.state.groupNameValue}\n                  onChange={(event) => this.setState({ groupNameValue: event.target.value })} ></input>\n                <div className='edit_divider_manage_group'></div>\n              </div>\n              <div className={(rxaget(group, 'type', 0) !== 3) ? 'rxAccount_btn_newManager' : 'rxAccount_btn_newManager_hiden'} onClick={e => this.openNewManager()}>{translate('Add new leader')}</div>\n            </div>\n          </div>\n          <div className={this.state.closeBtnClick === true ? 'add_new_group_leader_area' : 'add_new_group_leader_area_hiden'}>\n            <div className='add_new_group_leader'>\n              <div className='newManager_title_place'>\n                <div className='newManager_title'>{translate('Choose leader')}</div>\n                <div className='newManager_btn_close'>\n                  <img className='newManager_icon_close filter_img_class' src={'./images/default/icons/icon-basic-up.svg'} alt=\"\" onClick={e => this.closeNewManager()} />\n                </div>\n              </div>\n              <div className='newgroup_searchwrap'>\n                <div className='newgroup_icon_search_area'>\n                  <img className='newgroup_icon_search_search filter_img_class' src={'./images/default/icons/search-active.svg'} alt='' />\n                </div>\n                <input type='search' placeholder={translate('Search')} maxLength='30' className={zget(this.props, 'themeBackgroudValue') === 'darkTheme' ? 'newgroup_search_place darkThemeInput' : 'newgroup_search_place lightThemeInput'} onChange={e => { this.onChangeSearch_chooseLeader(e) }} onDrop={this.disableDrop}></input>\n\n                <div className='newgroup_icon_close_area'></div>\n              </div>\n              {/* doi truong nhom*/}\n              <div className='selectManager_contactlist' id='zgroup_list' onScroll={this.scrollGroupChat}>\n                {this.state.chooseLeader_groupsTemp.map((ele, index) => (\n                  this.userid !== ele.id && <div className={(ele.group_id === this.state.group_id) ? 'newManager_zgroupitem-contact active clearfix' : 'newManager_zgroupitem-contact clearfix'} key={index}  >\n                    <div className='newManager_avatar'>\n                      {(ele.profile_url) && <img src={global.rxu.config.cdn_endpoint + ele.profile_url} alt='' className='ava-group images-static'\n                        onError={(e) => { e.target.onerror = null; e.target.src = global.rxu.config.get_static + ele.profile_url }} />\n                      }\n                      {(!ele.profile_url) &&\n                        <span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameContact(ele).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>{rxChangeSlug(checkNameContact(ele)).slice(0, 2).toUpperCase()}</span>\n                      }\n                    </div>\n                    <div className='zgroup_maininfo-contact' onClick={e => this.chooseLeader(ele)}>\n                      <div className='newManager_userinfo_place'> {subString(checkNameUser(ele), 20)} </div>\n                      <div className='newManager_checked'>\n                        <label className='container101'>\n                          <input className='checkmark_leader' checked={this.state.leaderMemberChecked === ele.id} type='radio' name=\"newManager_radio\" />\n                          <span className='checkmark_choose_leader' onClick={e => this.chooseLeader(ele)}></span>\n                        </label>\n                      </div>\n                    </div>\n                    <div className='group_divider_choose_leader' ></div>\n                  </div>\n                ))}\n              </div>\n              <div className='chooseLeader_okBtn_area'>\n                <div className='chooseLeader_okBtn' onClick={e => this.chooseLeader_okBtnClick()}>{translate('Done')}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  themeBackgroudValue: state.themeBackgroudValue,\n  user: state.user,\n  netaauth: state.netaauth,\n  rxgroup: state.rxgroup,\n  netaGroups: state.netaGroups,\n  netaMedia: state.netaMedia,\n  usersStatus: state.usersStatus\n})\n\nconst mapDispatchToProps = {\n  netaMediaAdd,\n  changeStatusLoadMess,\n  chooseGroupAction,\n  netaGroupsUpdate,\n  netaAuthSettingUpdate,\n  netaGroupsRemove,\n  clickPopup\n}\n\nconst RxManagerGroupWrap = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RxManagerGroup)\n\nexport default RxManagerGroupWrap","import React, { useState } from 'react';\n\nimport './block_user.css'\nconst rxio = global.rootRequire('classes/socket').default\n\nconst BlockUser = (props) => {\n    let { \n        isBlocked, group, blockText, unBlockText, blockConfirmText, \n        unBlockConfirmText, acceptBtnText, cancelBtnText, onAfterBlockUser \n    } = props\n    const [isDisplayPopup, setIsDisplayPopup] = useState(false);\n    // console.log(props, 'BlockUser props')\n\n    return <div className='block-user-wrapper'>\n        {isDisplayPopup\n            ? <div className='block-user-popup'>\n                <div className='block_user-bg'></div>\n                <div className='block_user_main'>\n                    <div className='popup_blocke_user'>\n                        <div className='block_user_title'> {!isBlocked ? blockText : unBlockText}</div>\n                        <div className='block_user_body'>{!isBlocked ? blockConfirmText : unBlockConfirmText}</div>\n                        <div className='block_user_btn_area'>\n                            <div className='block_user_cancel'>\n                                <div className='block_user_cancel_btn' onClick={e => setIsDisplayPopup(false)} >{cancelBtnText}</div>\n                            </div>\n                            <div className='block_user_accept'>\n                                <div className='block_user_accept_btn'\n                                    onClick={e => onClickBlockContact(group, !isBlocked, onAfterBlockUser, () => {\n                                        setIsDisplayPopup(false)\n                                        // setIsBlocked(!isBlocked)\n                                    })}>\n                                    {acceptBtnText}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            : <span className='block-user-text' onClick={() => setIsDisplayPopup(true)}>\n                {!isBlocked ? blockText : unBlockText}\n            </span>}\n    </div>\n}\n\nexport default BlockUser\n\nconst onClickBlockContact = (group, isBlocked, onAfterBlockUser, callback) => {\n    // console.log(isBlocked, 'isBlocked')\n    // console.log(onAfterBlockUser, 'onAfterBlockUser')\n    // console.log(callback, 'callback')\n    let type = isBlocked ? \"unblock_user\" : \"block_user\"\n    rxio.blockUser({ group_id: group.group_id, uni: group.partner_id, type: type }, () => {\n        // console.log(isBlocked, 'isBlocked')\n        // console.log(group.partner_id, 'group.partner_id')\n        group.blocked_uins = isBlocked ? [group.partner_id] : []\n        onAfterBlockUser && onAfterBlockUser(group) //   that.props.chooseGroupAction(group)\n    })\n    callback && callback()\n}","\n/*global translate*/\nimport React, { useState } from 'react';\nimport { uploadFileImages } from '../rxUtils'\nimport './create_group_chat.css'\n\nconst rxio = global.rootRequire('classes/socket').default\nconst { rxaget, stringToColour, rxChangeSlug, subString } = global.rootRequire('classes/ulti')\nconst { checkNameGroup, checkAvatarGroup, checkNameContact, checkNameUser, getGroupById, checkBlock } = global.rootRequire('classes/chat')\nconst { chooseGroupAction, netaGroupsUpdate } = global.rootRequire('redux')\n\nconst CreateGroupChat = (props) => {\n    let { \n        createGroupChatText,\n        themeBackgroudValue,\n        users,\n        currentUser,\n        netaauth,\n        userChecked,\n        onShow,\n        onHide\n    } = props\n\n    const [isDisplayPopup, setIsDisplayPopup] = useState(false);\n    const [newGroupName, setNewGroupName] = useState('');\n    const [searchText, setSearchText] = useState('');\n    const [checkedUsers, setCheckedUsers] = useState([userChecked]); \n    const [groupImages, setGroupImages] = useState([]);\n    const [isChooseFileImage, setIsChooseFileImage] = useState(false);\n    const [groupImageURL, setGroupImageURL] = useState('');\n\n\n    const onClickCreateTitle = () => {\n        setIsDisplayPopup(true)\n        onShow && onShow()\n    }\n\n    const onClickDauX = () => {\n        setIsDisplayPopup(false)\n        onHide && onHide() \n    }\n\n    const onCheckUser = (e, user) => {\n        if (e.target?.checked) setCheckedUsers([...new Set([...checkedUsers, { ...user }])])\n        else setCheckedUsers(checkedUsers.filter(u => u.id != user.id))\n    }\n\n    const chooseFileImages = (fileList) => {\n        setGroupImages([...fileList])\n        setIsChooseFileImage(true)\n        setGroupImageURL(URL.createObjectURL(fileList[0]))\n    }\n\n    const onClickCreateGroup = (callback) => {\n        let emptyValue = ''\n        if (newGroupName) {\n          emptyValue = newGroupName.replace(/[\\s]/g, '') \n        }\n        // const checkedUserIds = checkedUsers.map(u => u.id);\n        if (emptyValue.length > 0) { \n          if (checkedUsers.length === 0) { \n            alert(translate('You have not selected a member')) \n          } else { \n            const params = { \n              type: 2,\n              owner_uin: currentUser.id,\n              name: newGroupName,\n              avatar_url: '',\n              occupants_uins: checkedUsers.map(u => u.id),\n              sender_name: currentUser.full_name\n            }\n            try {\n                rxio.createNewGroup(\n                    params, \n                    data => { \n                        if (data && data.group) {\n                            if (isChooseFileImage) { \n                                // this.uploadFileImages(groupImage, data.group)\n                            } else { \n                                chooseGroupAction(data.group)\n                                netaGroupsUpdate(Number(data.group.group_id), data.group)\n                            }\n                        }\n                        setTimeout(() => {\n                            // callback()\n                            setGroupImages('')\n                            setIsChooseFileImage(false)\n                            setGroupImageURL('')\n                            setIsDisplayPopup(false)\n                        }, 1000) \n                    }\n                )\n            } catch (e) {\n              console.log(e)\n            }\n          }\n        } else {\n          const mess = translate('The group name can not be blank')\n          alert(mess)\n        }\n      }\n\n    return <div className='create_group_wrapper'>\n        {isDisplayPopup\n            ?  <div className='create_group_popup'>\n                    <div className='create_group_title_area'>\n                        <div className='create_group_title'>\n                            {translate(\"Create a group\")}\n                        </div>\n                        <div className='create_group_btn_close'>\n                            <img className='create_group_icon_close'\n                                src={'./images/default/icons/icon-basic-up.svg'} \n                                onClick={onClickDauX}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"create_group_info\">\n                        <div className=\"newgroup_camera_icon_place\">\n                            <input type='file' id='data_image_camera' multiple={false} \n                            // key={theInputFileKey + '_data_image_camera'} \n                            style={{ display: 'none' }}\n                            onChange={(e) => chooseFileImages(e.target.files)} \n                            accept=\"image/jpg,image/png,video/mp4\"\n                            />\n                            {groupImageURL.length === 0 \n                                && <div className=\"newgroup_icon_area icon_camera\" >\n                                    <img className=\"newgroup_icon_search filter_img_class\" src={\"./images/default/icons/camera.svg\"} alt=\"\" />\n                                </div>}\n                            {groupImageURL.length > 0 && <img className=\"newgroup_chooseAvatar\" src={groupImageURL} alt=\"\" />}\n                        </div>\n                        <input placeholder={translate(\"Enter a group name\")} maxLength=\"30\" className=\"create_group_name\" onChange={e => setNewGroupName(e.target.value)} value={newGroupName} />\n                    </div>\n\n                    <div className='create_group_leader_search_area'>\n                        <div className='create_group_leader_icon_search_area'>\n                            <img className='create_group_leader_icon_search filter_img_class' src={\"./images/default/icons/search-active.svg\"} alt='' />\n                        </div>\n                        <input type='search' maxLength='30' id='newgroup_search_input' placeholder={translate(\"Search\")} \n                            value={searchText}\n                            onChange={e => setSearchText(e.target.value) } \n                            autoComplete='off'\n                            className={themeBackgroudValue === \"darkTheme\"\n                            ? \"create_group_leader_search_input darkThemeInput\"\n                            : \"create_group_leader_search_input lightThemeInput\"\n                            }\n                        >\n                        </input>\n                        \n                        {/* <div className='create_group_group_manage_close_area'></div> */}\n                    </div>\n\n                    <div className='newgroup_popup_list'>\n                    {\n                        checkedUsers.length > 0 \n                        && <div className='new_list_contacts_selected'>\n                        {\n                            checkedUsers.map(user => (\n                            <div key={user.id} className='item-row-selected-user'>\n                                {subString(checkNameUser(user), 20)}\n                                <img className='item-row-selected-close' src={'./images/default/icons/icon-close.png'} alt='' \n                                /> \n                            </div>\n                            ))\n                        }\n                        </div>\n                    }\n\n                    <div className='create_group_contact_list'>\n                        {users.map((user, index) => {\n                            // return <div>{user.id}</div>\n                            let fullnameFirstLetter = rxChangeSlug(checkNameUser(user, currentUser, netaauth)).slice(0, 1)\n                            let contactTitle = ''\n\n                            if (contactTitle !== fullnameFirstLetter) {\n                                user.contactTitle = true\n                                contactTitle = fullnameFirstLetter\n                            } else {\n                                user.contactTitle = false\n                            }\n\n                            return (\n                                user.id !== currentUser \n                                && (\n                                    <div key={index}>\n                                        {user.contactTitle \n                                            && <div className='zcontact_title'>{fullnameFirstLetter}</div>\n                                        }\n                                        <div \n                                            //   onClick={e => { this.createNewChat(user) }} \n                                            className='group_contacts_item clearfix' >\n                                            <div className='zgroup_avatar'>\n                                                {user.profile_url && (\n                                                    <img src={global.rxu.config.cdn_endpoint + user.profile_url} alt=''\n                                                    data-id={'userava' + user.id} className='ava-useravatar images-static'\n                                                    onError={e => { e.target.onerror = null; e.target.src = global.rxu.config.get_static + user.profile_url }}\n                                                    />\n                                                )}\n                                                {!user.profile_url && <span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameContact(user).slice(0, 2).toUpperCase())}, #FFFFFF)` }} >\n                                                    {rxChangeSlug(checkNameUser(user)).slice(0, 2).toUpperCase()}\n                                                </span>}\n                                            </div>\n                                            <div className='zgroup_maininfo-contact'>\n                                                <div className='newgroup_userinfo_place'> {subString(checkNameUser(user), 20)} </div>\n                                                <div className='newgroup_checked'>\n                                                    <label className='container100'>\n                                                        <input className='checkmark1' type='checkbox' checked={checkedUsers.find(u => u.id == user.id)} \n                                                    onChange={e => onCheckUser(e, user)} />\n                                                        <span className='checkmark'></span>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            <div className='newgroup_divider'></div>\n                                        </div>\n                                    </div>\n                                )\n                            )\n                        })}\n                    </div>\n                </div>\n\n                <div className='create-newgroup-row'>\n                    <div className='create-newgroup-btn' onClick={e => onClickCreateGroup()}>\n                        {translate(\"Create a group\")}\n                    </div>\n                </div>\n            </div>\n\n            : <span className='create_group_title-manage-group' onClick={onClickCreateTitle}>\n                {createGroupChatText}\n            </span>}\n    </div>\n}\n\nexport default CreateGroupChat\n\n\n\n\n","/*eslint-disable no-undef*/\n/*global translate*/\nimport { connect } from 'react-redux'\nimport React, { Component, Fragment } from 'react'\n\nglobal.isclient && require('./rxAccountInfo.css')\nconst { rxsetLocal, rxgetLocal } = global.rootRequire('classes/request')\nconst { rxaget, rxChangeSlug, stringToColour, autoConvertTime, subString } = global.rootRequire('classes/ulti')\nconst { checkBlock, checkNameGroup, checkAvatarGroup, checkNameContact, checkNameUser, updateUsersOnline } = global.rootRequire('classes/chat')\n\nconst { netaMediaAdd, netaGroupsUpdate, netaGroupsRemove, chooseGroupAction, changeStatusLoadMess, netaAuthSettingUpdate, clickPopup, clickCall, updateRecentContactGroups, netaAuthSettingSoundUpdate, updateRecentSearchGroups } = global.rootRequire('redux')\nconst RxImageGallery = global.rootRequire('components/shares/rxImageGallery').default\nconst rxio = global.rootRequire('classes/socket').default\nlet zget = global.rxu.get\n\n\nclass RxAccountInfo extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      group: JSON.parse(JSON.stringify(rxaget(this.props, 'rxgroup.group', {}))),\n      images: [],\n      videos: [],\n      files: [],\n      tabactive: 'images',\n      paging_page: 0,\n      paging_size: 50,\n      block_scroll: false,\n      arrData: [],\n      doneBtnClick: false,\n      closeBtnClick: false,\n      displayLeaveGroupScreen: false,\n      leaveGroup_okBtnClick: false,\n      displaySelectManagerScreen: false,\n      displayGroupList: true,\n      groupsMemberTemp: rxaget(this.props, 'rxgroupsMember.group', {}),\n      group_id: '',\n      isShowPopUp: false,\n      admin_uins_index: rxaget(this.props, 'rxgroup.group.admin_uins', {}).length - 1,\n      groupsNChat: [],\n      groupsNChatOrigin: [],\n      groupsNChatChecked: [],\n      countMemberOnl: 0,\n      groupsTemp: [],\n      chooseLeader_groupsTemp: [],\n      leaderMemberChecked: '',\n      clickAddMemberBtn: false,\n      lg_chooseLeader_groupsTemp: [],\n      lg_leaderMemberChecked: '',\n      groupNameValue: '',\n      theInputFileKey: new Date().getTime(),\n      click_lg_chooseLeader_okBtn: false,\n      loadingMedia: true,\n      // notificationStatus :JSON.parse(rxgetLocal('netaNotificationStatus'))\n      notificationStatus: global.rxu.json(rxgetLocal('netaNotificationStatus'), {}) || {},\n      usersStatus: {},\n      flagCopyLink: false,\n      isBlocked: false,\n      groupLink: ''\n    }\n\n    this.users = rxaget(this.props, 'user.users', {}) || {}\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    // const contactsUsers = []\n    // if (this.users && Object.keys(this.users).length > 0) {\n    //   for (const userid of Object.keys(this.users)) {\n    //     let arrgroup = rxaget(this.props, 'rxgroup.group.occupants_uins', [])\n    //     if (userid !== this.userid && arrgroup.indexOf(userid) === -1 ) {\n    //       contactsUsers.push(this.users[userid])\n    //     }\n    //   }\n    //   this.state.groupsNChat = this.state.groupsNChatOrigin = contactsUsers\n    // }\n    this.controller = {}\n    this.keyClickFunction = this.keyClickFunction.bind(this);\n    this.uploadFileImages = this.uploadFileImages.bind(this)\n\n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n    this.user = rxaget(this.props, 'netaauth.user', {})\n    this.users = rxaget(this.props, 'user.users', {}) || {}\n    this.downloadFile = this.downloadFile.bind(this)\n    this.doneAccountInfo = this.doneAccountInfo.bind(this)\n    this.chooseLeader_okBtnClick = this.chooseLeader_okBtnClick.bind(this)\n    this.removeMember = this.removeMember.bind(this)\n    this.onChangeNotiGroup = this.onChangeNotiGroup.bind(this)\n    this.onClickBlockContact = this.onClickBlockContact.bind(this)\n    // this.state.disableNotiSound = false\n    let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n    let disableNoti\n    let disableNotiSound\n    if (this.state.group.group_id && netaAuthSetting.groups[Number(this.state.group.group_id)]) {\n      if (netaAuthSetting.groups[Number(this.state.group.group_id)].disableNoti) {\n        disableNoti = true\n      } else {\n        disableNoti = false\n      }\n\n      if (netaAuthSetting.groups[Number(this.state.group.group_id)].disableNotiSound) {\n        disableNotiSound = true\n      } else {\n        disableNotiSound = false\n      }\n\n    } else {\n      disableNoti = false\n      disableNotiSound = false\n    }\n    this.state.disableNoti = disableNoti\n    this.state.disableNotiSound = disableNotiSound\n\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyClickFunction, false);\n  }\n\n  componentDidMount() {\n    let isBlocked = checkBlock(this.state.group, this.userid)    \n    if (isBlocked !== this.state.isBlocked) {\n      this.setState({ isBlocked })\n    }\n    let occupants_uins = this.state.group.occupants_uins\n    this.loadGroupsTemp(occupants_uins, this.users)\n    document.addEventListener(\"keydown\", this.keyClickFunction, false);\n    const contactsUsers = []\n    if (this.users && Object.keys(this.users).length > 0) {\n      let arrgroup = rxaget(this.props, 'rxgroup.group.occupants_uins', [])\n      for (const userid of Object.keys(this.users)) {\n        if (\n          userid !== this.userid &&\n          arrgroup.indexOf(userid) === -1\n        )\n          contactsUsers.push(this.users[userid])\n      }\n      this.setState({\n        groupsNChat: contactsUsers,\n        groupsNChatOrigin: contactsUsers\n      })\n    }\n    this.preGetMedia(rxaget(this.props, 'netaMedia', {}), rxaget(this.state.group, 'group_id', ''))\n\n    const { isChange, usersStatus, countMemberOnl } = updateUsersOnline(occupants_uins, this.state.countMemberOnl, this.state.usersStatus)\n    if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })\n\n    rxio.getUpdateGroup((data) => {\n      let groupObj = this.state.group\n      if (groupObj.group_id === data.group_id) {\n        let occupantsUinsTmp = groupObj['occupants_uins'].concat(data.push_all)\n        groupObj['occupants_uins'] = Array.from(new Set(occupantsUinsTmp))\n        this.loadGroupsTemp(groupObj['occupants_uins'], this.users)\n        // this.props.chooseGroupAction(groupObj) \n        this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n        this.setState({ group: groupObj })\n      }\n    })\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    let disableNoti\n    let disableNotiSound\n    let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n    if (this.state.group.group_id && netaAuthSetting.groups[Number(this.state.group.group_id)]) {\n      if (netaAuthSetting.groups[Number(this.state.group.group_id)].disableNoti) {\n        disableNoti = true\n      } else {\n        disableNoti = false\n      }\n\n      if (netaAuthSetting.groups[Number(this.state.group.group_id)].disableNotiSound) {\n        disableNotiSound = true\n      } else {\n        disableNotiSound = false\n      }\n    } else {\n      disableNoti = false\n      disableNotiSound = false\n    }\n    if (disableNoti !== this.state.disableNoti) {\n      this.setState({ disableNoti: disableNoti })\n    }\n    if (disableNotiSound !== this.state.disableNotiSound) {\n      this.setState({ disableNotiSound: disableNotiSound })\n    }\n\n    if (nextProps.usersStatus) {\n      const { isChange, usersStatus, countMemberOnl } =\n        updateUsersOnline(this.state.group.occupants_uins, this.state.countMemberOnl, nextProps.usersStatus, this.state.usersStatus)\n      if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })\n    }\n\n    if (rxaget(this.state.group, 'group_id', '') !== nextProps.rxgroup.groupid) {\n      this.setState({ closeBtnClick: false, doneBtnClick: false })\n    }\n    if (nextProps.user.users && JSON.stringify(nextProps.user.users) !== JSON.stringify(this.users)) {\n      let occupants_uins = nextProps.rxgroup.group.occupants_uins || []\n      this.users = rxaget(nextProps, 'user.users', {}) || {}\n      this.loadGroupsTemp(occupants_uins, this.users)\n    }\n    if (rxaget(nextProps, 'rxgroup.groupid', '') !== rxaget(this.state.group, 'group_id', '')) {\n      if (this.controller[rxaget(this.state.group, 'group_id', '')]) {\n        this.controller[rxaget(this.state.group, 'group_id', '')].abort();\n        // console.log(\"abort\", rxaget(this.state.group, 'group_id', ''))\n        delete this.controller[rxaget(this.state.group, 'group_id', '')]\n      }\n      this.preGetMedia(rxaget(nextProps, 'netaMedia', {}), rxaget(nextProps, 'rxgroup.groupid', ''))\n    }\n    if (nextProps.rxgroup.group && JSON.stringify(nextProps.rxgroup.group) !== JSON.stringify(this.state.group)) {\n      let occupants_uins = nextProps.rxgroup.group.occupants_uins || []\n      this.loadGroupsTemp(occupants_uins, this.users)\n      const newgroup = JSON.parse(JSON.stringify(nextProps.rxgroup.group))\n      let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n      let disableNoti = false\n      if (newgroup.group_id && netaAuthSetting.groups[Number(newgroup.group_id)]\n        && netaAuthSetting.groups[Number(newgroup.group_id)].disableNoti)\n        disableNoti = true\n\n      const { isChange, usersStatus, countMemberOnl } = updateUsersOnline(occupants_uins, this.state.countMemberOnl, this.state.usersStatus)\n      if (isChange) this.setState({ isChange: isChange, usersStatus: usersStatus, countMemberOnl: countMemberOnl })\n\n      this.setState({ group: newgroup, disableNoti: disableNoti })\n    }\n    if (nextProps.rxgroup && nextProps.rxgroup.group) {\n      let isBlocked = checkBlock(nextProps.rxgroup.group, this.userid)\n      if (isBlocked !== this.state.isBlocked) {\n        this.setState({ isBlocked })      \n      }\n    }\n\n    if (rxaget(nextProps, 'netaMedia.status', '') !== rxaget(this.props, 'netaMedia.status', '') && rxaget(nextProps, 'netaMedia.change', '') !== '') {\n      let arrData = this.state.arrData\n      let mediaObj = arrData.find(o => o.url === rxaget(nextProps, 'netaMedia.change', ''))\n      if (!mediaObj) {\n        try {\n          this.preGetMedia(rxaget(nextProps, 'netaMedia', {}), rxaget(this.state.group, 'group_id', ''))\n        } catch (e) { }\n      }\n    }\n\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    let isRerender = false\n    if (JSON.stringify(nextState) !== JSON.stringify(this.state))\n      isRerender = true\n    else if (nextProps.rxgroup && JSON.stringify(nextProps.rxgroup.group) !== JSON.stringify(this.state.group))\n      isRerender = true\n    return isRerender\n  }\n\n  preGetMedia(netaMedia, group_id) {\n    var arrData = []\n    if (netaMedia && netaMedia.data && netaMedia.data[group_id]) {\n      const objMedia = JSON.parse(JSON.stringify(netaMedia.data[group_id]))\n      if (objMedia && objMedia.images) {\n        for (const key of Object.keys(objMedia.images || {})) {\n          if (objMedia.images[key]) { arrData.push(objMedia.images[key]) }\n        }\n      }\n    }\n    arrData.sort((a, b) => (a.msg_create_at > b.msg_create_at) ? -1 : ((b.msg_create_at > a.msg_create_at) ? 1 : 0))\n    this.setState({\n      loadingMedia: true, arrData: arrData,\n      block_scroll: false, paging_page: 0\n    }, () => this.loadMediaStatic())\n  }\n\n  lg_chooseLeader(ele) {\n    this.setState({ lg_leaderMemberChecked: ele.id })\n  }\n\n  chooseLeader(ele) {\n    this.setState({ leaderMemberChecked: ele.id })\n  }\n\n  isLeader(eleId) {\n    let isLeaderFlag = false\n    try {\n      eleId = eleId.toString()\n      let owner_uin = this.state.group.owner_uin.toString()\n      // console.log(this.state.group.admin_uins, 'id leader')\n      if (eleId === owner_uin) {\n        isLeaderFlag = true //is a leader\n      }\n      else if (this.state.group.occupants_uins.indexOf(owner_uin) === -1\n        && this.state.group.admin_uins\n        && this.state.group.admin_uins.indexOf(eleId) >= 0) {\n        isLeaderFlag = true\n      }\n      // eleId !== owner_uin && console.log(\" this.state.group\", eleId, owner_uin, this.state.group.admin_uins)\n    } catch (error) { }\n    return isLeaderFlag\n  }\n\n  onChangeSearch_chooseLeader(e) {\n    let value = e.target.value\n    let arrGroups\n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }\n    if (e.target.value.length > 0) {\n      arrGroups = this.state.groupsTemp.filter(o => (rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1 || rxChangeSlug(o.phone).indexOf(rxChangeSlug(value)) !== -1))\n    } else {\n      value = ''\n      arrGroups = this.state.groupsTemp.filter(o => rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1)\n    }\n    this.setState({ chooseLeader_groupsTemp: arrGroups })\n  }\n\n  fetchImage(src, callback) {\n    const timenow = Math.floor(Date.now() / 1000)\n    try {\n      let timeCreateImg = (typeof this.checkImage[src] !== 'undefined') ? rxaget(this.checkImage[src], 'created_at', 0) : 0\n      if (!this.checkImage[src] || ((timenow - timeCreateImg) > 43200 && timeCreateImg > 0)) {\n        fetch(src, { headers: { 'TC-Token': this.token }, redirect: 'follow' })\n          .then(res => {\n            if (res && res.redirected && res.url && src) {\n              try {\n                callback(res.url)\n                this.props.netaBlobsUpdate(src, res.url)\n              } catch (e) {\n                callback('')\n              }\n            } else {\n              callback('')\n            }\n          })\n      } else {\n        callback(rxaget(this.checkImage[src], 'link', ''))\n      }\n    } catch (e) {\n      callback('')\n    }\n  }\n\n  onChangeSearch_lg_chooseLeader(e) {\n    let value = e.target.value\n    let arrGroups\n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }\n    if (e.target.value.length > 0) {\n      arrGroups = this.state.groupsTemp.filter(o => (rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1 || rxChangeSlug(o.phone).indexOf(rxChangeSlug(value)) !== -1))\n    } else {\n      value = ''\n      arrGroups = this.state.groupsTemp.filter(o => rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1)\n    }\n    this.setState({ lg_chooseLeader_groupsTemp: arrGroups })\n  }\n\n  onChangeSearchNChat(e) {\n    let value = e.target.value\n    let arrGroups\n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }\n    if (value) {\n      arrGroups = this.state.groupsNChatOrigin.filter(member => (rxChangeSlug(checkNameUser(member)).indexOf(rxChangeSlug(value)) !== -1 || rxChangeSlug(member.phone).indexOf(rxChangeSlug(value)) !== -1))\n    } else {\n      arrGroups = this.state.groupsNChatOrigin\n    }\n    this.setState({\n      groupsNChat: arrGroups,\n    }, () => {\n      const images = document.getElementsByClassName('ava-useravatar')\n      if (images && images.length > 0) {\n        for (let i = 0; i < images.length; i++) {\n          const valueAttr = images[i].getAttribute('data-id')\n          if (valueAttr && valueAttr.indexOf('userava') !== -1) {\n            const userid = valueAttr.replace('userava', '')\n            if (userid) {\n              const avatar_url = global.rxu.config.get_avatar + userid\n              this.fetchImage(avatar_url, (data) => {\n                if (data) {\n                  images[i].src = data\n                }\n              })\n            }\n          }\n        }\n      }\n    })\n  }\n\n  leaveGroupBtnClick() {\n    // console.log('FIRST 33333')\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    let groupObjMemberIdArr = groupObj.occupants_uins\n    let contactsUsers = []\n    if (groupObj && groupObj.occupants_uins && groupObj.occupants_uins.constructor === Array && this.users && Object.keys(this.users).length > 0) {\n      for (const userid of Object.keys(this.users)) {\n        if (groupObjMemberIdArr.indexOf(userid.toString()) !== -1) {\n          contactsUsers.push(this.users[userid])\n        }\n      }\n      if (contactsUsers.length > 0) {\n        let user = rxaget(this.props, 'netaauth.user', {})\n        this.props.clickPopup('leave_group', { data: { groups: contactsUsers, user: user, group: groupObj } }, (data) => {\n          if (data) {\n            this.funcChooseLeader(data)\n          } else {\n            this.leaveGroup()\n          }\n        })\n      }\n    }\n  }\n\n  funcChooseLeader(leaderChecked) {\n    let groupObj = rxaget(this.props, 'rxgroup.group', {})\n    let leaderMemberChecked = leaderChecked\n    // console.log(leaderChecked, 'leaderChecked')\n    let index = this.state.admin_uins_index\n\n    groupObj.admin_uins[index] = leaderMemberChecked.toString()\n    const params = {\n      group_id: Number(groupObj.group_id),\n      admin_uins: groupObj.admin_uins\n    }\n\n    rxio.addAdmin(params, (data) => {\n      if (data) {\n        try {\n          this.setState({ closeBtnClick: false, doneBtnClick: false })\n          const arrUsers = this.users\n          const user = rxaget(this.props, 'netaauth.user', {})\n          const objUser = arrUsers[user.id.toString()]\n          const paramsCreateMess = {\n            group_id: Number(this.state.group.group_id),\n            type: 6,\n            version: 1,\n            nonce: (Math.floor(Date.now()) * 1000).toString(),\n            sender_name: rxaget(objUser, 'full_name', ''),\n            attachments: JSON.stringify({\n              mediaType: 0, type: 'update_group',\n              admin_uins: [groupObj.admin_uins[index]]\n            }).replace(/\"/g, '\\\\\"'),\n            \"is_encrypted\": false, \"mentioned_all\": false\n          }\n          rxio.createMessage(paramsCreateMess, (dataMess) => {\n            if (dataMess) {\n              let groupObj = JSON.parse(JSON.stringify(this.state.group))\n              groupObj.admin_uins = groupObj.admin_uins[index]\n              groupObj.last_message = dataMess.message\n              groupObj.last_message_id = dataMess.last_message_id\n              this.props.changeStatusLoadMess()\n              this.props.chooseGroupAction(groupObj)\n              this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n              this.leaveGroup()\n            }\n          })\n        } catch (error) { console.log(\"addAdmin\", error) }\n      }\n    })\n    // this.setState({ displayLeaveGroupScreen: false })\n  }\n\n  leaveGroup_cancelBtnClick() {\n    this.setState({ displayLeaveGroupScreen: false })\n  }\n\n  leaveGroup_okBtnClick() {\n    if (this.state.group.admin_uins) {\n      let admin_unis = this.state.group.admin_uins\n      let isOpen = !admin_unis.some(i => (this.userid.toString() !== i.toString() && this.state.group.occupants_uins.indexOf(i.toString()) >= 0))\n\n      if (isOpen) {\n        this.setState({ displaySelectManagerScreen: true })\n      }\n      else this.leaveGroup()\n    }\n  }\n\n  chooseLeader_okBtnClick() {\n    let groupObj = rxaget(this.props, 'rxgroup.group', {})\n    let leaderMemberChecked = this.state.leaderMemberChecked\n    let index = this.state.admin_uins_index\n\n    groupObj.admin_uins[index] = leaderMemberChecked.toString()\n    let owner_uin = Number(groupObj.admin_uins[index])\n    if (groupObj.admin_uins[index]) {\n      const msg = {\n        group_id: Number(groupObj.group_id),\n        name: \"\",\n        owner_uin: owner_uin\n      }\n      rxio.socket.emit(\"update_group\", msg, (data) => {\n        if (data && data.result === 0) {\n          try {\n            this.setState({\n              closeBtnClick: false,\n              doneBtnClick: false,\n              leaderMemberChecked: '',\n            })\n\n            const arrUsers = this.users\n            const user = rxaget(this.props, 'netaauth.user', {})\n            const objUser = arrUsers[user.id.toString()]\n            const paramsCreateMess = {\n              group_id: Number(this.state.group.group_id),\n              type: 6,\n              version: 1,\n              nonce: (Math.floor(Date.now()) * 1000).toString(),\n              sender_name: rxaget(objUser, 'full_name', ''),\n              attachments: JSON.stringify({\n                mediaType: 0, type: 'update_group',\n                owner_uin: owner_uin\n              }).replace(/\"/g, '\\\\\"'),\n              \"is_encrypted\": false, \"mentioned_all\": false\n            }\n\n            rxio.createMessage(paramsCreateMess, (dataMess) => {\n              if (dataMess) {\n                let groupObj = JSON.parse(JSON.stringify(this.state.group))\n                groupObj.owner_uin = owner_uin\n                groupObj.last_message = dataMess.message\n                groupObj.last_message_id = dataMess.last_message_id\n                this.props.changeStatusLoadMess()\n                this.props.chooseGroupAction(groupObj)\n                this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n              }\n            })\n          } catch (error) { console.log(\"addAdmin\", error) }\n        }\n      })\n    }\n  }\n\n  lg_chooseLeader_okBtnClick() {\n    let groupObj = rxaget(this.props, 'rxgroup.group', {})\n    let leaderMemberChecked = this.state.lg_leaderMemberChecked\n    let index = this.state.admin_uins_index\n\n    // groupObj.admin_uins[index] = leaderMemberChecked.toString()\n    const params = {\n      group_id: Number(groupObj.group_id),\n      admin_uins: [leaderMemberChecked.toString()]\n    }\n    rxio.addAdmin(params, (data) => {\n\n      if (data) {\n        try {\n          this.setState({\n            closeBtnClick: false,\n            doneBtnClick: false,\n            leaderMemberChecked: ''\n          })\n          const arrUsers = this.users\n          const user = rxaget(this.props, 'netaauth.user', {})\n          const objUser = arrUsers[user.id.toString()]\n          const paramsCreateMess = {\n            group_id: Number(this.state.group.group_id),\n            type: 6,\n            version: 1,\n            nonce: (Math.floor(Date.now()) * 1000).toString(),\n            sender_name: rxaget(objUser, 'full_name', ''),\n            attachments: JSON.stringify({\n              mediaType: 0, type: 'update_group',\n              admin_uins: [groupObj.admin_uins[index]]\n            }).replace(/\"/g, '\\\\\"'),\n            \"is_encrypted\": false, \"mentioned_all\": false\n          }\n\n          rxio.createMessage(paramsCreateMess, (dataMess) => {\n            if (dataMess) {\n              let groupObj = JSON.parse(JSON.stringify(this.state.group))\n              groupObj.admin_uins = groupObj.admin_uins[index]\n              groupObj.last_message = dataMess.message\n              groupObj.last_message_id = dataMess.last_message_id\n              this.props.changeStatusLoadMess()\n              this.props.chooseGroupAction(groupObj)\n              this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n              this.leaveGroup()\n            }\n          })\n        } catch (error) { console.log(\"addAdmin\", error) }\n      }\n\n    })\n    this.setState({ displayLeaveGroupScreen: false })\n  }\n\n  leaveGroup() {\n    let groupObj = this.state.group\n    if (groupObj && groupObj.group_id) {\n      if (rxio.connected) {\n        const msgUpGroup = {\n          group_id: Number(groupObj.group_id)\n        }\n        let groupsStore = this.props.netaGroups\n        rxio.leaveGroup(msgUpGroup, (data) => {\n          if (data && [0, 1].indexOf(data.result) !== -1) {\n            this.setState({ displayLeaveGroupScreen: false }, () => {\n              this.props.netaGroupsRemove(groupObj.group_id)\n\n              if (groupsStore && groupsStore.groups) {\n                let arrGroups = Object.keys(groupsStore.groups)\n                if (arrGroups.constructor === Array && arrGroups.length > 2) {\n                  arrGroups = arrGroups.filter(groupid => groupid !== groupObj.group_id.toString())\n                  if (groupsStore.groups && groupsStore.groups[arrGroups[0]]) {\n                    this.props.chooseGroupAction(groupsStore.groups[arrGroups[0]])\n                  }\n                }\n              }\n            })\n          }\n        })\n\n      }\n    }\n  }\n\n  removeMember(mem) {\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    if (rxio.connected) {\n      const msgUpGroup = {\n        group_id: Number(groupObj.group_id),\n        name: '',\n        avatar_url: '',\n        pull_all: [mem.id.toString()]\n      }\n      // console.log(\"removeMember\",msgUpGroup)\n      rxio.socket.emit('update_group', msgUpGroup, (data) => {\n        // console.log(\"data\", data)\n        const arrUsers = this.users\n        const user = rxaget(this.props, 'netaauth.user', {})\n        const objUser = arrUsers[user.id.toString()]\n        const paramsCreateMess = {\n          group_id: Number(groupObj.group_id),\n          type: 6,\n          version: 1,\n          sender_name: objUser.full_name || '',\n          message: '',\n          attachments: JSON.stringify({ removed_uins: [mem.id.toString()], type: 'update_group' }).replace(/\"/g, '\\\\\"')\n        }\n        rxio.socket.emit('create_message', paramsCreateMess, (dataMess) => {\n          if (dataMess) {\n            let groupObj = JSON.parse(JSON.stringify(this.state.group))\n            groupObj.occupants_uins = data.group.occupants_uins\n            groupObj.last_message = dataMess.message\n            groupObj.last_message_id = dataMess.last_message_id\n            groupObj.timestamp = new Date().getTime() * 1000\n            this.props.changeStatusLoadMess()\n            this.props.chooseGroupAction(groupObj)\n            this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n          }\n        })\n      })\n    }\n  }\n\n  onChangeNotiGroup() {\n    try {\n      let disableNoti = !this.state.disableNoti\n      let groupObj = JSON.parse(JSON.stringify(this.state.group))\n      let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n      !netaAuthSetting.groups[Number(this.state.group.group_id)]\n        && (netaAuthSetting.groups[Number(this.state.group.group_id)] = {})\n      netaAuthSetting.groups[Number(this.state.group.group_id)].disableNoti = disableNoti\n      // rxsetLocal('netaAuthSetting', JSON.stringify(netaAuthSetting))\n      this.props.netaAuthSettingUpdate(netaAuthSetting)\n      this.props.changeStatusLoadMess()\n      this.props.chooseGroupAction(groupObj)\n      this.setState({ disableNoti: disableNoti })\n    } catch (error) { console.log(\"onChangeNotiGroup\", error) }\n  }\n  onChangeNotiSoundGroup() {\n    let disableNotiSound = !this.state.disableNotiSound\n    let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n    !netaAuthSetting.groups[Number(this.state.group.group_id)]\n      && (netaAuthSetting.groups[Number(this.state.group.group_id)] = {})\n    netaAuthSetting.groups[Number(this.state.group.group_id)].disableNotiSound = disableNotiSound\n    this.props.netaAuthSettingSoundUpdate(netaAuthSetting)\n    this.setState({ disableNotiSound: disableNotiSound })\n  }\n\n  onClickAddMember() {\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    let groupObjMemberIdArr = groupObj.occupants_uins\n    let contactsUsers = []\n    if (this.users && Object.keys(this.users).length > 0) {\n      for (const userid of Object.keys(this.users)) {\n        if (!groupObjMemberIdArr.includes(userid.toString())) {\n          contactsUsers.push(this.users[userid])\n        }\n      }\n      this.setState({ groupsNChat: contactsUsers, groupsNChatChecked: [] }, () => {\n        let user = rxaget(this.props, 'netaauth.user', {})\n        this.props.clickPopup('add_member', { data: { groups: contactsUsers, user: user } }, (data) => {\n          if (data && data.constructor === Array && data.length > 0) {\n            this.onClickUpdateGroup(data)\n          }\n        }) //dispatch action \n      })\n    }\n  }\n\n  onClickBlockContact() {\n    const group = JSON.parse(JSON.stringify(this.state.group))\n    let that = this\n    let isBlocked = this.state.isBlocked\n    if([1,3].indexOf(isBlocked) !== -1){      \n      rxio.unblockUser({ group_id: group.group_id, uni: group.partner_id}, () => {\n        let blocked_uins = group.blocked_uins\n\n        for(let i = 0; i < blocked_uins.length; i++){\n          if(blocked_uins[i] === group.partner_id){\n            blocked_uins.splice(i,1)\n          }\n        }\n        group.blocked_uins = blocked_uins\n        that.props.chooseGroupAction(group)\n      })\n    }\n    if([0,2].indexOf(isBlocked) !== -1 ){\n      rxio.blockUser({ group_id: group.group_id, uni: group.partner_id}, () => {        \n        let blocked_uins = group.blocked_uins\n\n        blocked_uins.push(group.partner_id)\n        group.blocked_uins = blocked_uins\n        that.props.chooseGroupAction(group)\n      })\n    }\n\n    this.setState({ displayAskBlock: false })\n  }\n\n  onClickUpdateGroup(groupsChecked = []) {\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    // let groupsChecked = groupsChecked || []\n    // let clickAddMemberBtn = this.state.clickAddMemberBtn\n\n    // let groupObjMemberIdArr = JSON.parse(JSON.stringify(groupObj.occupants_uins)) //mang id thanh vien dang co trong nhom\n    // if (groupsChecked && groupsChecked.constructor === Array) {\n    //   for (let i = 0; i < groupsChecked.length; i++) { //duyet toan bo mang duoc check\n    //     groupObjMemberIdArr.push(String(groupsChecked[i]))\n    //   }\n    // }\n\n    // console.log(clickAddMemberBtn, 'clickAddMemberBtn') //rõ ràng\n\n    if (groupsChecked.length > 0) {\n      let arrMember = groupsChecked.map(o => o.toString()) // danh sách thành viên được check\n      if (groupObj && groupObj.group_id && arrMember.constructor === Array && arrMember.length > 0) {\n        if (rxio.connected) {\n          const msgUpGroup = {\n            group_id: Number(groupObj.group_id),\n            name: '',\n            avatar_url: '',\n            push_all: arrMember\n          }\n          rxio.updateGroup(msgUpGroup, (data) => {\n            const arrUsers = this.users\n            const user = rxaget(this.props, 'netaauth.user', {})\n            const objUser = arrUsers[user.id.toString()]\n            const paramsCreateMess = {\n              group_id: Number(groupObj.group_id),\n              type: 6,\n              version: 1,\n              sender_name: objUser.full_name || '',\n              message: '',\n              attachments: JSON.stringify({ added_uins: arrMember, type: 'update_group' }).replace(/\"/g, '\\\\\"')\n            }\n            rxio.createMessage(paramsCreateMess, (dataMess) => {\n              if (dataMess) {\n                let groupObj = JSON.parse(JSON.stringify(this.state.group))\n                groupObj.occupants_uins = data.group.occupants_uins\n                groupObj.last_message = dataMess.message\n                groupObj.last_message_id = dataMess.last_message_id\n                groupObj.timestamp = new Date().getTime() * 1000\n                // this.clearSearchBox()\n                this.props.changeStatusLoadMess()\n                this.setState({ addMemberScreen: false })\n                this.props.chooseGroupAction(groupObj)\n                this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n              }\n            })\n          })\n        }\n      }\n    } else {\n      alert(translate('Add Member Error'))\n    }\n    // this.setState({ clickAddMemberBtn: true })\n  }\n\n  closeAddMemberScreen() {\n    this.clearSearchBox()\n    this.setState({ addMemberScreen: false })\n  }\n\n  onClickAddMemberGroup(contact) {\n    const groupsNChatChecked = JSON.parse(JSON.stringify(this.state.groupsNChatChecked))\n    if (groupsNChatChecked.indexOf(contact.id) === -1) {\n      groupsNChatChecked.push(contact.id)\n    } else {\n      groupsNChatChecked.splice(groupsNChatChecked.indexOf(contact.id), 1)\n    }\n    this.setState({ groupsNChatChecked })\n  }\n\n  lg_closeNewManager() {\n    this.setState({ displaySelectManagerScreen: false })\n  }\n\n  dropDownListMemberClick() {\n    if (this.state.displayGroupList === true) {\n      this.setState({ displayGroupList: false })\n    } else {\n      this.setState({ displayGroupList: true })\n    }\n  }\n\n  backBtnClickGroup() {\n    this.setState({ doneBtnClick: false })\n  }\n\n  editAccountInfo() {\n    this.setState({ doneBtnClick: true, groupNameValue: checkNameGroup(this.state.group, this.users, this.userid) }, () => {\n      let group_id = zget(this.state.group, 'group_id', '')\n      rxio.listGroupLink(group_id, (dataLink) => {\n        if (dataLink && dataLink.links && dataLink.links.constructor === Array && dataLink.links.length > 0) {\n          this.setState({ groupLink: dataLink.links[0] })\n        }\n      })\n    })\n  }\n\n  btnRevokeLink() {\n    let deepLinkUrl = this.state.groupLink\n    try {\n      let arrRegexStr = deepLinkUrl.split('/')\n      if (arrRegexStr && arrRegexStr.length > 0) {\n        let tokenStr = arrRegexStr[arrRegexStr.length - 1]\n        rxio.revokeLink(tokenStr, (data) => {\n          this.setState({ groupLink: '' })\n        })\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  doneAccountInfo() {    \n    try {\n      if (this.state.groupNameValue !== checkNameGroup(this.state.group, this.users, this.userid)) {\n        let newName = this.state.groupNameValue\n        if(newName.search(/[\\\\]/) !== -1){\n          alert(translate('Group name contains invalid characters'))\n        }else{\n          this.setState({ doneBtnClick: false })\n          if (this.state.group.type === 3) {\n            const user = rxaget(this.props, 'netaauth.user', {})\n            let groupObj = JSON.parse(JSON.stringify(this.state.group))\n            groupObj.name = newName\n            groupObj.group_name = newName\n            groupObj.group_fullname = newName\n            groupObj.last_message = {\n              attachments: `{\"updated_group_name\":${newName},\"mediaType\":0,\"type\":\"update_group\"}`,\n              group_id: Number(this.state.group.group_id),\n              type: 6,\n              sender_uin: user.id.toString()\n            }\n            let netaAuthSetting = JSON.parse(localStorage.getItem('netaAuthSetting') || `{\"groups\":{}}`)\n            !netaAuthSetting.groups[Number(groupObj.group_id)]\n              && (netaAuthSetting.groups[Number(groupObj.group_id)] = {})\n            netaAuthSetting.groups[Number(groupObj.group_id)].name = newName\n\n            let partner_id = groupObj.partner_id || groupObj.occupants_uins[0]\n            !netaAuthSetting.groups[Number(partner_id)]\n              && (netaAuthSetting.groups[Number(partner_id)] = {})\n            netaAuthSetting.groups[Number(partner_id)].name = newName\n\n            rxsetLocal('netaAuthSetting', JSON.stringify(netaAuthSetting))\n            this.props.changeStatusLoadMess()\n            this.props.chooseGroupAction(groupObj)\n            // this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n          }\n          else\n            if (rxio.connected) {\n              const netaRecentSearchGroups = global.rxu.json(rxgetLocal('netaRecentSearchGroups'), {}) || {}\n              let msg = {\n                group_id: Number(this.state.group.group_id),\n                \"name\": newName\n              }\n              rxio.socket.emit(\"update_group\", msg, (data) => {\n                if (data && data.result === 0) {\n                  try {\n                    const arrUsers = this.users\n                    const user = rxaget(this.props, 'netaauth.user', {})\n                    const objUser = arrUsers[user.id.toString()]\n                    let msg = {\n                      group_id: Number(this.state.group.group_id),\n                      type: 6,\n                      version: 1,\n                      nonce: (Math.floor(Date.now()) * 1000).toString(),\n                      sender_name: rxaget(objUser, 'full_name', ''),\n                      attachments: JSON.stringify({\n                        updated_group_name: newName,\n                        mediaType: 0, type: \"update_group\"\n                      }).replace(/\"/g, '\\\\\"'),\n                      \"is_encrypted\": false, \"mentioned_all\": false\n                    }\n                    rxio.socket.emit('create_message', msg, (dataMess) => {\n                      console.log(\"doneAccountInfo update_group\", dataMess)\n                      if (dataMess) {\n                        let groupObj = JSON.parse(JSON.stringify(this.state.group))\n                        groupObj.name = newName\n                        groupObj.group_name = newName\n                        groupObj.group_fullname = newName\n                        groupObj.last_message = dataMess.message\n                        groupObj.last_message_id = dataMess.last_message_id\n                        this.props.changeStatusLoadMess()\n                        this.props.chooseGroupAction(groupObj)\n                        this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n                        if(netaRecentSearchGroups && netaRecentSearchGroups.groups && netaRecentSearchGroups.groups[groupObj.group_id]){\n                          let timeSearch = netaRecentSearchGroups.groups[groupObj.group_id].timeSearch\n                          this.props.updateRecentSearchGroups(groupObj.group_id, groupObj,timeSearch)\n                        }\n                        \n                      }\n                    })\n                  } catch (error) { console.log(\"update_group name\", error) }\n                }\n              })\n            }\n\n          }\n      }\n    } catch (error) { console.log(\"update_group name\", error) }\n  }\n\n  openNewManager() {\n    this.setState({ closeBtnClick: true })\n  }\n\n  closeNewManager() {\n    this.setState({ closeBtnClick: false })\n  }\n  onClickStartCall(typeCall) {\n\n    // this.props.updateRecentContactGroups(this.state.group.partner_id,Date.now())\n    this.props.clickCall(typeCall, {\n      group_id: rxaget(this.state, 'group.group_id', ''),\n      type: rxaget(this.state, 'group.type', 0),\n      occupants_uins: rxaget(this.state, 'group.occupants_uins', [])\n    })\n  }\n  loadImgStatic(obj, name, url = global.rxu.config.cdn_endpoint) {\n\n    if (obj.sender_avatar) {\n      return global.rxu.config.get_static + obj.sender_avatar\n    } else if (obj.avatar_url) {\n      return global.rxu.config.get_static + obj.avatar_url\n    } else if (obj.type === 3 && !obj.avatar_url) {\n      const users = this.users\n      if (obj && obj.occupants_uins && obj.occupants_uins.constructor === Array && obj.occupants_uins.length === 2 && obj.occupants_uins.indexOf(this.userid.toString()) !== -1) {\n        const arruserid = obj.occupants_uins.filter(o => o !== this.userid.toString())\n        if (arruserid && arruserid.constructor === Array && arruserid[0] && users[arruserid[0]] && users[arruserid[0]].profile_url) {\n          return url + users[arruserid[0]].profile_url\n        }\n      } else {\n        return './images/default/static/avadefault.svg'\n      }\n    } else {\n      return './images/default/static/avadefault.svg'\n    }\n  }\n  async loadMediaStatic() {\n    const group = JSON.parse(JSON.stringify(this.state.group))\n    const paging_page = this.state.paging_page\n    const paging_size = this.state.paging_size\n    const block_scroll = this.state.block_scroll\n    const netaMedia = JSON.parse(JSON.stringify(rxaget(this.props.netaMedia, 'data.' + group.group_id, { images: {}, videos: {}, files: {} })))\n    let breakLoop = false\n    let checkContinue = 0\n    if (group && group.group_id && this.token) {\n      if (!block_scroll) {\n        for (let i = paging_page; i < 100; i++) {\n          let pageoffset = i\n          pageoffset = i\n          const api_media_chat = global.rxu.config.get_media_chat\n            + '?load_attachments=true&offset=' + pageoffset * paging_size + '&group_id='\n            + group.group_id + '&media_type=2%2C%204%2C%2012&limit=' + paging_size\n          this.controller[group.group_id] = new AbortController();\n          let { signal } = this.controller[group.group_id];\n          let res = await fetch(api_media_chat, {\n            signal: signal, method: 'GET', headers: {\n              Accept: 'application/json', 'TC-Token': this.token,\n              Connection: 'Keep-Alive', 'Accept-Encoding': 'gzip'\n            }, body: null\n          }).catch(function (error) { });\n          try {\n            let json = await res.json()\n            if (json && this.state.group.group_id === group.group_id) {\n              const arrMedia = json.filter((v, i, a) => a.findIndex(t => ((t.media_uid + t.message_id) === (v.media_uid + v.message_id))) === i).sort((a, b) => (a.msg_create_at > b.msg_create_at) ? 1 : ((b.msg_create_at > a.msg_create_at) ? -1 : 0))\n              for (const media of arrMedia) {\n                let attachments = {}\n                try {\n                  attachments = JSON.parse(rxaget(media, 'attachments', '').replace(/[\\t\\r\\n]/g, ''))\n                } catch (e) {\n                  if (typeof (rxaget(media, 'attachments', '')) === 'object') {\n                    attachments = rxaget(media, 'attachments', '')\n                  }\n                }\n                if (media.media_type === 2) {\n                  if (attachments && attachments.images && attachments.images.constructor === Array && attachments.images.length > 0) {\n                    for (const oimage of attachments.images) {\n                      media.url = rxaget(oimage, 'url', '')\n                      if (!netaMedia.images[media.url] && media.url) {\n                        netaMedia.images[media.url] = { url: media.url, message_id: media.message_id, group_id: media.group_id, media_type: media.media_type, msg_create_at: media.msg_create_at }\n                        checkContinue = checkContinue + 1\n                      }\n                    }\n                  }\n                }\n\n                if (media.media_type === 4) {\n                  if (attachments && attachments.video && attachments.video.constructor === Object) {\n                    media.url = rxaget(attachments, 'video.url', '') || ''\n                    media.thumbnail_url = rxaget(attachments, 'video.thumbnail_url', '') || ''\n                    if (netaMedia.videos && !netaMedia.videos[media.url] && media.url) {\n                      netaMedia.videos[media.url] = { url: media.url, thumbnail_url: media.thumbnail_url, message_id: media.message_id, group_id: media.group_id, media_type: media.media_type, msg_create_at: media.msg_create_at }\n                      checkContinue = checkContinue + 1\n                    }\n                  }\n                }\n\n                if (media.media_type === 12) {\n                  if (attachments && attachments.file && attachments.file.constructor === Object) {\n                    media.url = rxaget(attachments, 'file.url', '') || ''\n                    media.ext = rxaget(attachments, 'file.file_extension', '') || ''\n                    media.file_name = rxaget(attachments, 'file.file_name', '') || ''\n                    if (netaMedia.files && !netaMedia.files[media.url] && media.url) {\n                      netaMedia.files[media.url] = { url: media.url, ext: media.ext, name: media.file_name, message_id: media.message_id, group_id: media.group_id, media_type: media.media_type, msg_create_at: media.msg_create_at }\n                      checkContinue = checkContinue + 1\n                    }\n                  }\n                }\n              }\n              if (checkContinue === 0 || this.state.group.group_id !== group.group_id) { breakLoop = true }\n\n              this.props.netaMediaAdd(group.group_id, netaMedia)\n\n              if ((arrMedia && arrMedia.constructor === Array && arrMedia.length < paging_size) || this.state.group.group_id !== group.group_id) {\n                breakLoop = true\n              }\n              // console.log(\"++\", i, paging_size, arrMedia.length, checkContinue, breakLoop)\n            }\n            else if (this.state.group.group_id !== group.group_id) {\n              console.log(\"ASYCN CHANGE ID\")\n            }\n          } catch (eJson) {\n            this.setState({ paging_page: 0, arrData: [], block_scroll: false })\n            break\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          if (this.state.group.group_id === group.group_id) {\n\n            let arrDataTmp = []\n            const type = this.state.tabactive || 'images'\n            if (netaMedia && netaMedia[type]) {\n              for (const key of Object.keys(netaMedia[type] || {})) {\n                if (netaMedia[type][key]) { arrDataTmp.push(netaMedia[type][key]) }\n              }\n            }\n            arrDataTmp = arrDataTmp.sort((a, b) => (a.msg_create_at > b.msg_create_at) ? -1 : ((b.msg_create_at > a.msg_create_at) ? 1 : 0))\n\n            this.setState({ arrData: arrDataTmp })\n          }\n\n          if (breakLoop) {\n            if (this.state.group.group_id === group.group_id) {\n              // console.log(\"++\", arrData, this.state.group.group_id, group.group_id)\n              this.setState({ paging_page: i + 1, block_scroll: true, loadingMedia: false })\n            }\n            break\n          }\n        }\n      }\n    }\n  }\n\n  changeTabActive(type) {\n    const group_id = rxaget(this.state.group, 'group_id', '')\n    const netaMedia = rxaget(this.props.netaMedia, 'data.' + group_id, { images: {}, videos: {}, files: {} })\n    let arrData = []\n    if (netaMedia && netaMedia[type]) {\n      for (const key of Object.keys(netaMedia[type] || {})) {\n        if (netaMedia[type][key]) { arrData.push(netaMedia[type][key]) }\n      }\n    }\n    arrData = arrData.sort((a, b) => (a.msg_create_at > b.msg_create_at) ? -1 : ((b.msg_create_at > a.msg_create_at) ? 1 : 0))\n    this.setState({ tabactive: type, arrData: arrData })\n  }\n\n  showGallery({ index, type }) {\n    this.setState({ checkgallery: true, galleryPosition: Number(index), type: type })\n  }\n\n  keyClickFunction(event) {\n    if (event.keyCode === 27) {\n      this.closeGallery()\n    }\n  }\n\n  closeGallery() {\n    this.setState({ checkgallery: false })\n  }\n\n  downloadFile(file_id, file_name) {\n    const src = global.rxu.config.get_static + '/' + file_id\n    try {\n      const downloadLink = document.createElement('a')\n      downloadLink.href = src\n      downloadLink.download = file_name\n      downloadLink.setAttribute('download', 'download')\n      document.body.appendChild(downloadLink)\n      downloadLink.click()\n      document.body.removeChild(downloadLink)\n    } catch (e) { }\n  }\n\n  getStringsImages(arrData) {\n    let galleryImages = ''\n    arrData.forEach(element => {\n      galleryImages += element.url.replace(/\\s/g, '') + ','\n    })\n    return (\n      galleryImages\n\n    )\n  }\n\n  clearSearchBox() {\n    const chatDiv = document.getElementById('addmember_searchBox')\n    chatDiv.value = ''\n  }\n\n  func_getCharacName(name) {\n    let arrName = name.split(' ');\n    if (arrName.length === 1) {\n      let _name = arrName[0][0] + arrName[0][1]\n      return _name.toUpperCase()\n    }\n    else {\n      let _name = (arrName[0][0] + arrName[arrName.length - 1][0])\n      return _name.toUpperCase()\n    }\n  }\n\n  loadGroupsTemp(occupants_uins, users) {\n    // let occupants_uins = occupants_uins//this.state.group.occupants_uins\n    // let users = users//this.users\n    let groupsTemp = [] //mong muốn đưa 1 mảng user đang có trong nhóm vào\n    if (occupants_uins) {\n      for (const useridkey of Object.keys(users)) {\n        for (let i = 0; i < occupants_uins.length; i++) {\n          if (String(occupants_uins[i]) === String(users[(useridkey)].id)) { //id user có rồi\n            groupsTemp.push(users[(useridkey)]) //push 1 obj user\n            // if (users[(useridkey)].online_status === 1) { }\n          }\n        }\n      }\n      this.setState({\n        groupsTemp: groupsTemp,\n        chooseLeader_groupsTemp: groupsTemp,\n        lg_chooseLeader_groupsTemp: groupsTemp,\n      })\n    }\n\n  }\n\n  uploadFileImages(fileList) {\n    try {\n      if (fileList.length && fileList[0]) {\n        var file = fileList[0]\n        let parts = (file.name || '').split('.');\n        let ext = parts[parts.length - 1] || '';\n        if (['png', 'jpg'].indexOf(ext.toLowerCase()) >= 0) {\n          let fileSize = file.size\n          let extFilename = 'png'\n\n          let _URL = window.URL || window.webkitURL\n          let img = new Image();\n          let objectUrl = _URL.createObjectURL(file)\n\n          let dataParams = {\n            content_type: 'image/' + extFilename,\n            name: 'netalo_' + Math.floor(Date.now()),\n            public: true,\n            size: fileSize\n          }\n          let header = { 'TC-Token': this.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n          let requestOptions = {\n            method: 'POST', headers: header, body: JSON.stringify(dataParams), redirect: 'follow'\n          };\n\n          fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n            if (json && json.blod_object && json.blod_object.form_data) {\n              let dataUpload = new FormData()\n              let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n              for (let key of arrKeys) {\n                if (json.blod_object.form_data[key]) {\n                  dataUpload.append(key, json.blod_object.form_data[key])\n                }\n              }\n              dataUpload.append('file', file, file.name)\n              dataUpload.append('success_action_status', 201)\n\n              fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n                if (result.indexOf('Key') !== -1) {\n                  let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                  let strresult = result.match(patt);\n                  if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                    let key = strresult[1]\n                    if (key) {\n                      let optComplete = {\n                        method: 'PUT',\n                        headers: header,\n                        body: JSON.stringify({\n                          content_type: json.content_type, id: json.id, name: json.name, size: json.size, uid: json.uid\n                        })\n                      };\n\n                      fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                        .then(response => {\n                          if (response.status === 200) {\n                            try {\n                              img.onload = () => {\n                                _URL.revokeObjectURL(objectUrl)\n                                const arrUsers = this.users\n                                const user = rxaget(this.props, 'netaauth.user', {})\n                                const objUser = arrUsers[user.id.toString()]\n                                let msg = {\n                                  group_id: Number(this.state.group.group_id),\n                                  avatar_url: key,\n                                }\n                                if (msg && msg.group_id) {\n                                  if (rxio.connected) {\n                                    rxio.socket.emit(\"update_group\", msg, (data) => {\n                                      if (data && data.result === 0) {\n                                        let msg = {\n                                          group_id: Number(this.state.group.group_id),\n                                          type: 6,\n                                          version: 1,\n                                          nonce: (Math.floor(Date.now()) * 1000).toString(),\n                                          sender_name: rxaget(objUser, 'full_name', ''),\n                                          attachments: JSON.stringify({\n                                            updated_group_avatar: key,\n                                            mediaType: 0, type: \"update_group\"\n                                          }).replace(/\"/g, '\\\\\"'),\n                                          \"is_encrypted\": false, \"mentioned_all\": false\n                                        }\n                                        rxio.socket.emit('create_message', msg, (dataMess) => {\n                                          if (dataMess) {\n                                            let groupObj = JSON.parse(JSON.stringify(this.state.group))\n                                            groupObj.avatar_url = key\n                                            groupObj.last_message = dataMess.message\n                                            groupObj.last_message_id = dataMess.last_message_id\n                                            this.props.changeStatusLoadMess()\n                                            this.props.chooseGroupAction(groupObj)\n                                            this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj)\n                                          }\n                                        })\n                                      }\n                                    })\n                                  }\n                                }\n                              }\n                              img.src = objectUrl\n                            } catch (e) { }\n                          }\n                        }).catch(errorPut => console.log('error', errorPut));\n                    }\n                  }\n                }\n              })\n            }\n          }).catch(error => console.log('create_blob error', error))\n        } else alert(translate('The image file format is not suitable. Please select the image file as .jpg or .png'))\n      }\n    } catch (error) { console.log('upload error', error) }\n  }\n\n  disableDrop = event => {\n    event.preventDefault();\n  }\n\n  createLinkGroup(callback) {\n    let groupObj = JSON.parse(JSON.stringify(this.state.group))\n    if (groupObj) {\n      if (!groupObj.link_group) {\n        rxio.createLink(groupObj.group_id, (data) => {\n          if (data && data.link) {\n            groupObj.link_group = data.link\n\n            callback(groupObj.link_group)\n            this.props.netaGroupsUpdate(Number(groupObj.group_id), groupObj, true)\n          }\n        })\n      } else {\n        callback(groupObj.link_group)\n      }\n    }\n\n    this.setState({ flagCopyLink: true })\n  }\n\n  onClickShareLinkGroup() {\n    this.createLinkGroup((link) => {\n      this.copyTextToClipboard(link)\n    })\n\n    this.setState({ flagCopyLink: true })\n  }\n\n  onToggleOffLinkGroup() {\n    this.setState({ flagCopyLink: false })\n  }\n\n  onClickQRLinkGroup() {\n    this.createLinkGroup((link) => {\n      this.props.clickPopup('create_qr', { data: link })\n    })\n  }\n\n  copyTextToClipboard(text) {\n    let textArea = document.createElement('textarea')\n    textArea.style.position = 'fixed'\n    textArea.style.top = 0\n    textArea.style.left = 0\n    textArea.style.width = '2px'\n    textArea.style.height = '2px'\n    textArea.style.padding = 0\n    textArea.style.border = 'none'\n    textArea.style.outline = 'none'\n    textArea.style.boxShadow = 'none'\n    textArea.style.background = 'transparent'\n    textArea.value = text.replace(/[\\t\\r\\n]/g, '')\n    document.body.appendChild(textArea)\n    textArea.focus()\n    textArea.select()\n    try {\n      document.execCommand('copy')\n    } catch (err) {\n      console.log('Oops, unable to copy')\n    }\n    document.body.removeChild(textArea)\n  }\n\n  render() {\n    const group = JSON.parse(JSON.stringify(this.state.group))\n    const tabactive = this.state.tabactive\n    const arrData = this.state.arrData\n    const galleryImages = arrData && this.getStringsImages(arrData)\n\n    return (\n      <Fragment>\n        <div className='account_info_tab_right' >\n          <div className='account_info_tab_right-user'>\n            <div className='account_info_tab_right-user-header'>\n              <div className='edit_img_user_group'>\n                {(checkAvatarGroup(this.state.group, this.users, this.userid))\n                  && <>\n                    <img src={this.loadImgStatic(this.state.group, 'group', global.rxu.config.get_static)} alt='' className='account-ava-group images-static'\n                      onError={(e) => { e.target.style.display = 'none' }} />\n                    <img src={this.loadImgStatic(this.state.group, 'group')} alt='' className='account-ava-group images-static'\n                      onError={(e) => { e.target.style.display = 'none' }} />\n                  </>}\n\n                {!(this.state.group.avatar_url || (this.users[this.state.group.partner_id] && this.users[this.state.group.partner_id]['profile_url'])) &&\n                  <span className='account-ava-span'\n                    style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameGroup(this.state.group, this.users, this.userid).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>\n                    {rxChangeSlug(checkNameGroup(this.state.group, this.users, this.userid), true).slice(0, 2).toUpperCase()}\n                  </span>\n                }\n              </div>\n              <div className='account_info_tab_right-btn-edit'>\n                {((this.isLeader(this.userid) && rxaget(group, 'type', 0) !== 3) || rxaget(group, 'type', 0) === 3) && !this.state.isBlocked &&\n                  <span className='account_info_tab_right-txt-edit' onClick={e => this.editAccountInfo()}>{translate('Edit')}</span>\n                }\n\n              </div>\n            </div>\n            <span className='account_info_tab_right-user-name'>\n              {checkNameGroup(this.state.group, this.users, this.userid)}\n            </span>\n\n            {(rxaget(group, 'type', 0) === 3)\n              && this.state.group\n              && (this.state.group.partner_id || this.state.group.occupants_uins[0])\n              && this.state.usersStatus[Number(this.state.group.partner_id || this.state.group.occupants_uins[0])]\n              && (this.state.usersStatus[Number(this.state.group.partner_id || this.state.group.occupants_uins[0])].online_status === 1\n                ? <span className='account_info_tab_right-status'>Online</span>\n                : this.state.usersStatus[Number(this.state.group.partner_id\n                  || this.state.group.occupants_uins[0])].last_seen_at > 0\n                  ? <span className='account_info_tab_right-status'>\n                    {translate('Last seen ')}\n                    {autoConvertTime(this.state.usersStatus[Number(this.state.group.partner_id || this.state.group.occupants_uins[0])].last_seen_at)}\n                  </span>\n                  : <span className='account_info_tab_right-status'>Offline</span>)\n            }\n\n            {(rxaget(group, 'type', 0) !== 3)\n              && <span className='account_info_tab_right-status'>\n                {this.state.groupsTemp?.length}\n                {translate(' member')}\n                {this.state.countMemberOnl > 0 ? (', ' + this.state.countMemberOnl + ' Online') : ''}\n              </span>\n            }\n\n            <div className='account_info_tab_right-list-member' onClick={e => this.dropDownListMemberClick()}>\n              <div className={(rxaget(group, 'type', 0) !== 3) ? 'account_info_tab_right-list-member-body' : 'className_hiden'}>\n                <div className='account_info_tab_right-list-member-title'>\n                  {translate('Group members')}\n                </div>\n                <div className='account_info_tab_right-list-member-icon'>\n                  <i className={this.state.displayGroupList === true ? 'editGroup_arrow_right' : 'arrow down'}></i>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* HERE */}\n          {(rxaget(group, 'type', 0) === 3) && <div className='ztab-more-info'>\n            <div className='ztab-more-info_phone'>\n              <span className='ztab-more-info_phone-txt'>{translate('Phone number')}</span>\n              <span className='ztab-more-info_phone_number'>{zget(this.users, [this.state.group.partner_id], {}).phone}</span>\n            </div>\n            {<div className='ztab-more-info_act'>\n              {!this.state.isBlocked && <img className='icon32 icon-act filter_img_class' alt='' src={'./images/default/icons/callright.svg'} onClick={(e) => this.onClickStartCall('voicecall')} />}\n              {!this.state.isBlocked && <img className='videocall-icon icon-act filter_img_class' alt='' src={'./images/default/icons/videocall.svg'} onClick={(e) => this.onClickStartCall('videocall')} />}\n            </div>}\n          </div>}\n\n          {/* Danh sach nhom */}\n          <div className={(rxaget(group, 'type', 0) === 3) || (this.state.displayGroupList === true) ? 'newManager_contactlist_hiden' : 'newManager_contactlist'} id='zgroup_list' onScroll={this.scrollGroupChat}>\n            {this.state.groupsTemp.map((ele, index) =>\n              <div className={(ele.group_id === this.state.group_id) ? 'newManager_zgroupitem-contact active clearfix' : 'newManager_zgroupitem-contact clearfix'} key={index}  >\n                {/*<div id='menu-mouseright-chat'><RxModalMouseRightChat /></div>*/}\n                <div className='newManager_avatar'>\n                  {(ele.profile_url) && <img src={global.rxu.config.cdn_endpoint + ele.profile_url} alt='' className='ava-group images-static'\n                    onError={(e) => { e.target.onerror = null; e.target.src = global.rxu.config.get_static + ele.profile_url }} />}\n                  {!ele.profile_url && <span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameContact(ele).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>{rxChangeSlug(checkNameUser(ele)).slice(0, 2).toUpperCase()}</span>}\n                </div>\n\n                <div className={'zgroup_maininfo-contact ' + (ele.id !== this.userid && this.isLeader(this.userid) ? \"edit\" : '')}>\n                  <div className='newManager_userinfo_place'> {subString(checkNameUser(ele, this.userid, this.props.netaauth), 20)} </div>\n                  {!this.isLeader(ele.id) && <div className='remove_member'\n                    onClick={() => this.removeMember(ele)} >{translate('Remove')}</div>}\n                  {<div className={this.isLeader(ele.id) ? 'newManager_leader' : 'newManager_leader_hiden'}>{translate('Leader')}</div>}\n                  <div className={'newManager_user_online ' +\n                    (this.state.usersStatus[Number(ele.id)] && this.state.usersStatus[Number(ele.id)].online_status === 1 ? \"online\" : \"\")}>\n                    {this.state.usersStatus[Number(ele.id)] && (this.state.usersStatus[Number(ele.id)].online_status === 1 ? \"Online\"\n                      : this.state.usersStatus[Number(ele.id)].last_seen_at > 0 ?\n                        (translate('Last seen ') + autoConvertTime(this.state.usersStatus[Number(ele.id)].last_seen_at)) :\n                        \"Offline\")}\n                  </div>\n                </div>\n                <div className='group_divider' ></div>\n              </div>\n            )\n            }\n          </div>\n          <div className='ztab-add-member'>\n            <div className='zact-add_account_info'>\n              <span className={rxaget(group, 'type', 0) !== 3 ? 'zact-add-member' : 'zact-add-member_hiden'}\n                onClick={e => this.onClickAddMember()}\n              >\n                {translate('Add member')}\n              </span>\n\n              <span className={rxaget(group, 'type', 0) === 3 ? 'zact-block-contact' : 'zact-block-contact_hiden'}\n                onClick={e => { this.setState({ displayAskBlock: true }) }}  >\n                {(!this.state.isBlocked || this.state.isBlocked === 2) ? translate('Block contact') : translate('Unblock contact')}\n              </span>\n            </div>\n          </div>\n\n\n          {(rxaget(group, 'type', 0) !== 3 && this.isLeader(this.userid)) && <div className={(this.state.isBlocked === 2) ? 'ztab-add-member_hiden' : 'ztab-add-member'} >\n            <div className='zact-add_account_info'>\n              <span className={rxaget(group, 'type', 0) !== 3 ? 'zact-add-member tooltip' : 'zact-add-member_hiden'}\n                onClick={e => this.onClickShareLinkGroup()} onMouseOut={(e) => this.onToggleOffLinkGroup()}\n              >\n                {translate('Link Sharing Group')}\n                <span className=\"tooltiptext\">{(!this.state.flagCopyLink) ? translate('Copy Link Group') : translate('Copied') + '!'}</span>\n              </span>\n            </div>\n          </div>}\n\n          {(rxaget(group, 'type', 0) !== 3 && this.isLeader(this.userid)) && <div className={(this.state.isBlocked === 2) ? 'ztab-add-member_hiden' : 'ztab-add-member'} >\n            <div className='zact-add_account_info'>\n              <span className={rxaget(group, 'type', 0) !== 3 ? 'zact-add-member' : 'zact-add-member_hiden'}\n                onClick={e => this.onClickQRLinkGroup()}\n              >\n                {translate('Group QR code')}\n              </span>\n            </div>\n          </div>}\n\n\n          <div className={this.state.notificationStatus === true ? 'ztab-more-act' : 'ztab-more-act_hiden'}>\n            <div className='zact-add_account_info_noti'>\n              <span className='zact-add-member'>\n                {translate('Allows notifications')}\n              </span>\n              <div className='account_info_noti_mode'>\n                <label className='switch'>\n                  <input className='pushToggles' type='checkbox' checked={!this.state.disableNoti}\n                    onChange={e => this.onChangeNotiGroup()} />\n                  <span className='slider round'></span>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/*<div className={this.state.notificationStatus === true ? 'ztab-more-act' : 'ztab-more-act_hiden'}>\n              <div className='zact-add_account_info_noti'>\n                <span className='zact-add-member'>\n                  {translate('Notification sound')}\n                </span>\n                <div className='account_info_noti_mode'>\n                  <label className='switch'>\n                    <input className='pushToggles' type='checkbox' checked={!this.state.disableNotiSound}\n                      onChange={e => this.onChangeNotiSoundGroup()} />\n                    <span className='slider round'></span>\n                  </label>\n                </div>\n              </div>\n            </div>*/}\n          <div className='ztab-more-act'>\n            <div className={rxaget(group, 'type', 0) !== 3 ? 'zact' : 'zact_hiden'}>\n              <span className={rxaget(group, 'type', 0) !== 3 ? 'zact-leave-group' : 'zact-leave-group_hiden'}\n                onClick={e => this.leaveGroupBtnClick()}>\n                {translate('Leave group')}\n              </span>\n            </div>\n          </div>\n          <div className='ztab-more-document'>\n            <div className='zdocument-header'>\n              <span className={(tabactive === 'images') ? 'zdocument-header-txt zdocument-header-txt-active' : 'zdocument-header-txt'} onClick={e => this.changeTabActive('images')}>{translate('Image')}</span>\n              <span className={(tabactive === 'videos') ? 'zdocument-header-txt zdocument-header-txt-active' : 'zdocument-header-txt'} onClick={e => this.changeTabActive('videos')}>Video</span>\n              <span className={(tabactive === 'files') ? 'zdocument-header-txt zdocument-header-txt-active' : 'zdocument-header-txt'} onClick={e => this.changeTabActive('files')}>{translate('Document')}</span>\n            </div>\n            <div className='zdocument-list'>\n              {(arrData && arrData.length > 0) && <>\n                {arrData.map((ele, index) => (\n                  <div key={ele.media_uid + ele.url} className='zdocument-item'>\n                    {(tabactive === 'images') && <img src={global.rxu.config.get_static + ele.url} alt='' className='zdoc-item' onClick={e => this.showGallery({ index, type: 'img' })} />}\n                    {(tabactive === 'videos') && <div className='zvideo-list' onClick={e => this.showGallery({ index, type: 'video' })}>\n                      {(ele.thumbnail_url && ele.thumbnail_url !== '') && <img src={global.rxu.config.get_static + ele.thumbnail_url} alt='' className='zvideo-item' onClick={e => this.showGallery({ index, type: 'video' })} />}\n                      <div className='zvideo-item-play'><img src={'./images/default/static/icon-media-play-white.svg'} alt='icon-media-play-white' /></div>\n                    </div>}\n                    {(tabactive === 'files') && <div className='zdoc-list' title={ele.name || ''}>\n                      <div className='zicon-doc'><span className='icon-doc' onClick={e => this.downloadFile(ele.url, ele.name)} /></div>\n                      <div className='zicon-name' title={ele.name || ''}><span className='icon-doc-name'>{(ele.name) ? ele.name.substring(0, (6)) + '...' : ''}</span></div>\n                    </div>}\n                  </div>))}\n              </>}\n\n              <div className=\"loading\" style={{ display: this.state.loadingMedia ? 'flex' : 'none' }}><div className=\"dot-flashing\"></div></div>\n            </div>\n            {this.state.checkgallery && RxImageGallery &&\n              <RxImageGallery images={galleryImages} closeShowGallery={() => this.closeGallery()} position={this.state.galleryPosition} type={this.state.type} />\n            }\n          </div>\n\n          <div className={this.state.displayAskBlock ? 'leaveGroup_rectangle' : 'leaveGroup_rectangle_hiden'}>\n            <div className='leaveGroup_rectangle_2'>\n              <div className='leaveGroup_rectangle_2_1'>\n                <div className='leaveGroup_title'> {([0,2].indexOf(this.state.isBlocked) !== -1) ? translate('Block contact') : translate('Unblock contact')}</div>\n                <div className='leaveGroup_body'>{([0,2].indexOf(this.state.isBlocked) !== -1) ?\n                  translate('Are you sure you want to block this contact, you and this person will not be able to make calls or send messages') :\n                  translate('Are you sure you want to unblock this contact')}</div>\n                <div className='leaveGroup_btnPlace'>\n                  <div className='leaveGroup_cancelBtn' onClick={e => { this.setState({ displayAskBlock: false }) }} >{translate('Cancel')}</div>\n                  <div className='leaveGroup_okBtn' onClick={e => this.onClickBlockContact()}>{translate('Accept')}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className={this.state.doneBtnClick === true ? 'edit_rectangle' : 'edit_rectangle_hiden'} >\n          <div className='edit_rectangle_1'>\n            <div className='zmore-header'>\n              <div className='zmore-btn-back_place' onClick={e => this.backBtnClickGroup()}>\n                <i className='icon-arrow-left' ></i>\n              </div>\n              <div className='edit-img-user' onClick={(e) => { rxaget(group, 'type', 0) !== 3 && this.refs.data_image.click() }}>\n                <input type='file' id='data_image' ref='data_image' multiple={false} key={this.state.theInputFileKey + '_data_image'}\n                  style={{ display: 'none' }}\n                  onChange={(e) => this.uploadFileImages(e.target.files)} accept=\"image/jpg,image/png,video/mp4\" />\n                {rxaget(group, 'type', 0) !== 3 && <div className=\"icon-camera\"></div>}\n                {(checkAvatarGroup(this.state.group, this.users, this.userid)) && <>\n                  <img src={this.loadImgStatic(this.state.group, 'group')} alt=''\n                    className={'account-ava-group images-static' + (rxaget(group, 'type', 0) !== 3 ? \" edit\" : \"\")}\n                    onError={(e) => { e.target.style.display = 'none' }} />\n                  <img src={this.loadImgStatic(this.state.group, 'group', global.rxu.config.get_static)} alt=''\n                    className={'account-ava-group images-static' + (rxaget(group, 'type', 0) !== 3 ? \" edit\" : \"\")}\n                    onError={(e) => { e.target.style.display = 'none' }} />\n                </>}\n                {!(this.state.group.avatar_url || (this.users[this.state.group.partner_id] && this.users[this.state.group.partner_id]['profile_url'])) &&\n                  <span className={'account-ava-span' + (rxaget(group, 'type', 0) !== 3 ? \" edit\" : \"\")} style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameGroup(this.state.group, this.users, this.userid).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>{rxChangeSlug(checkNameGroup(this.state.group, this.users, this.userid)).slice(0, 2).toUpperCase()}</span>\n                }\n              </div>\n              <div className='rxAccount-btn-done'>\n                <span className='rxAccount-txt-done' onClick={e => this.doneAccountInfo()}>\n                  {translate('Done')}\n                </span>\n              </div>\n            </div>\n            <div className='rxAccount_group_name_place'>\n              <div className='rxAccount_group_name_title'>{(rxaget(group, 'type', 0) !== 3) ? translate('Group name') : translate('Full name')}</div>\n              <input maxLength='30' className='rxAccount_group_name_input' placeholder={translate('Edit name')}\n                value={this.state.groupNameValue}\n                onChange={(event) => this.setState({ groupNameValue: event.target.value })} ></input>\n              <div className='edit_divider'></div>\n            </div>\n            {(rxaget(group, 'type', 0) !== 3 && this.state.groupLink) && <div className='rxAccount_group_name_place'>\n              <div className='rxAccount_group_name_title'>{translate('Share Group\\'s Link')}</div>\n              <div className='rxAccount_group_name_input'>{this.state.groupLink}</div>\n              <div className='edit_divider'></div>\n              <div className='rxAccount_group_btn_revoke' onClick={e => this.btnRevokeLink()}>{translate('Revoke Link')}</div>\n            </div>}\n            <div className={(rxaget(group, 'type', 0) !== 3) ? 'rxAccount_btn_newManager' : 'rxAccount_btn_newManager_hiden'} onClick={e => this.openNewManager()}>{translate('Add new leader')}</div>\n          </div>\n        </div>\n        <div className={this.state.closeBtnClick === true ? 'newManager_rectangle' : 'newManager_rectangle_hiden'}>\n          <div className='newManager_rectangle_1'>\n            <div className='newManager_title_place'>\n              <div className='newManager_title'>{translate('Choose leader')}</div>\n              <div className='newManager_btn_close'>\n                <img className='newManager_icon_close filter_img_class' src={'./images/default/icons/icon-basic-up.svg'} alt=\"\" onClick={e => this.closeNewManager()} />\n              </div>\n            </div>\n            <div className='newgroup_searchwrap'>\n              <div className='newgroup_icon_search_area'>\n                <img className='newgroup_icon_search_search filter_img_class' src={'./images/default/icons/search-active.svg'} alt='' />\n              </div>\n              <input type='search' placeholder={translate('Search')} maxLength='30' className={zget(this.props, 'themeBackgroudValue') === 'darkTheme' ? 'newgroup_search_place darkThemeInput' : 'newgroup_search_place lightThemeInput'} onChange={e => { this.onChangeSearch_chooseLeader(e) }} onDrop={this.disableDrop}></input>\n\n              {/* <div className='newgroup_icon_close_area'></div> */}\n            </div>\n            {/* doi truong nhom*/}\n            <div className='selectManager_contactlist' id='zgroup_list' onScroll={this.scrollGroupChat}>\n              {this.state.chooseLeader_groupsTemp.map((ele, index) => (\n                this.userid !== ele.id && <div className={(ele.group_id === this.state.group_id) ? 'newManager_zgroupitem-contact active clearfix' : 'newManager_zgroupitem-contact clearfix'} key={index}  >\n                  <div className='newManager_avatar'>\n                    {(ele.profile_url) && <img src={global.rxu.config.cdn_endpoint + ele.profile_url} alt='' className='ava-group images-static'\n                      onError={(e) => { e.target.onerror = null; e.target.src = global.rxu.config.get_static + ele.profile_url }} />\n                    }\n                    {!ele.profile_url &&\n                      <span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameContact(ele).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>{rxChangeSlug(checkNameContact(ele)).slice(0, 2).toUpperCase()}</span>\n                    }\n\n                  </div>\n                  <div className='zgroup_maininfo-contact' onClick={e => this.chooseLeader(ele)}>\n                    <div className='newManager_userinfo_place'> {subString(checkNameUser(ele), 20)} </div>\n                    <div className='newManager_checked' >\n                      <label className='container101'>\n                        <input className='checkmark_leader_account' checked={this.state.leaderMemberChecked === ele.id} type='radio' name=\"newManager_radio\" />\n                        <span className='checkmark_choose_leader_account' onClick={e => this.chooseLeader(ele)}></span>\n\n                      </label>\n                    </div>\n                  </div>\n                  <div className='group_divider' ></div>\n                </div>\n              ))}\n            </div>\n            <div className='chooseLeader_okBtn_area'>\n              <div className='chooseLeader_okBtn' onClick={e => this.chooseLeader_okBtnClick()}>{translate('Done')}</div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeValue: state.themeValue,\n  themeBackgroudValue: state.themeBackgroudValue,\n  user: state.user,\n  netaauth: state.netaauth,\n  rxgroup: state.rxgroup,\n  netaGroups: state.netaGroups,\n  netaMedia: state.netaMedia,\n  usersStatus: state.usersStatus\n})\n\nconst mapDispatchToProps = {\n  netaMediaAdd,\n  changeStatusLoadMess,\n  chooseGroupAction,\n  netaGroupsUpdate,\n  netaAuthSettingUpdate,\n  netaAuthSettingSoundUpdate,\n  netaGroupsRemove,\n  updateRecentContactGroups,\n  clickCall,\n  clickPopup,\n  updateRecentSearchGroups\n}\n\nconst RxAccountInfoWrap = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RxAccountInfo)\n\nexport default RxAccountInfoWrap","/*global translate*/\nimport React, { Component } from 'react'\nimport Loading from './rxLoading'\nglobal.isclient && require('./rxAudioRecord.css')\nconst { secondToTime } = global.rootRequire('classes/ulti')\nconst Recorder = global.rootRequire('classes/recorder')\n\nclass RxAudioRecord extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {   \n      currentCount: 0,\n      pause: false,\n      showPopup: false,\n      success: false,\n      group_id:this.props.group_id\n    }\n\n    this.recorder = null\n    this.localStream = null\n    this.onSuccessRecording = this.onSuccessRecording.bind(this)\n    this.onFailRecording = this.onFailRecording.bind(this)\n  }\n\n  componentDidMount() {\n    window.URL = window.URL || window.webkitURL\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if(this.state.group_id !== nextProps.group_id){\n      this.cancelRecord()\n      this.setState({group_id:nextProps.group_id})\n    }\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId)\n    this.recorder = null\n  }\n\n  timer() {\n    this.setState({\n      currentCount: this.state.currentCount + 1\n    })\n    if (this.state.currentCount > 59) {\n      clearInterval(this.intervalId)\n      if (this.recorder) {\n        // this.recorder.stop()\n        // this.recorder = null\n        // try {\n        //   let track = this.localStream.getTracks()[0]\n        //   track.stop()\n        // } catch (e) { }\n        this.pauseRecord()\n      }\n    }\n  }\n\n  pauseRecord(e) {\n    e && e.preventDefault()\n    this.setState({ pause: true }, () => {\n      clearInterval(this.intervalId)\n    })\n    console.log(this.recorder)\n    if (this.recorder) {\n      this.recorder.exportMonoWAV((blob) => {\n        let filename = 'netalo_audio_' + Math.floor(Date.now()) + '.wav'\n        let file = this.blobToFile(blob, filename)\n        var urlCreator = window.URL || window.webkitURL\n        var audioUrl = urlCreator.createObjectURL(file)\n        let audio = document.getElementById('id-audio-record')\n        audio.src = audioUrl\n        this.file = file\n      })\n    }\n  }\n\n  cancelRecord() {\n    this.setState({ pause: false, currentCount: 0, showPopup: false }, () => {\n      if (this.recorder) {\n        this.recorder.stop()\n        this.recorder = null\n        this.file = null\n        try {\n          let track = this.localStream.getTracks()[0]\n          track.stop()\n        } catch (e) { }\n      }\n      if (this.intervalId) {\n        clearInterval(this.intervalId)\n      }\n    })\n  }\n\n  sendingRecord(e) {\n    this.setState({success:true})\n    // this.uploadFile()\n    this.stopRecording()\n  }\n\n  onFailRecording(e) {\n    console.log('Rejected!', e)\n  }\n\n  onSuccessRecording(s) {\n    this.localStream = s\n    window.AudioContext = window.AudioContext || window.webkitAudioContext\n    let context = new (window.AudioContext)()\n    let mediaStreamSource = context.createMediaStreamSource(this.localStream)\n    this.recorder = new window.Recorder(mediaStreamSource)\n    this.recorder.record()\n  }\n\n  startRecording() {\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({ audio: true }, this.onSuccessRecording, this.onFailRecording)\n    } else {\n      console.log('navigator.getUserMedia not present')\n    }\n  }\n\n  stopRecording() {\n    if (this.recorder) {\n      this.recorder.exportMonoWAV((blob) => {\n        let filename = 'netalo_audio_' + Math.floor(Date.now()) + '.wav'\n        let file = this.blobToFile(blob, filename)\n        this.uploadFile(file)\n      })\n    }\n  }\n\n  uploadFile(file = this.file) {\n    let checkExtFile = true\n    let ext = this.getExtension(file['name'])\n    if (['wav'].indexOf(ext) === -1) { checkExtFile = false }\n\n    if (checkExtFile) {\n      if (typeof (file) !== 'undefined') {\n        let fileSize = file.size\n\n        let dataParams = {\n          content_type: 'audio/m4a',\n          name: 'netalo_file_' + Math.floor(Date.now()),\n          public: true,\n          size: fileSize\n        }\n        let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n        let requestOptions = {\n          method: 'POST',\n          headers: header,\n          body: JSON.stringify(dataParams),\n          redirect: 'follow'\n        };\n        fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n          if (json && json.blod_object && json.blod_object.form_data) {\n            let dataUpload = new FormData()\n            let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n            for (let key of arrKeys) {\n              if (json.blod_object.form_data[key]) {\n                dataUpload.append(key, json.blod_object.form_data[key])\n              }\n            }\n            dataUpload.append('file', file, file.name)\n            dataUpload.append('success_action_status', 201)\n\n            fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n              if (result.indexOf('Key') !== -1) {\n                let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                let strresult = result.match(patt);\n                if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                  let key = strresult[1]\n                  if (key) {\n                    let optComplete = {\n                      method: 'PUT',\n                      headers: header,\n                      body: JSON.stringify({\n                        content_type: json.content_type,\n                        id: json.id,\n                        name: json.name,\n                        size: json.size,\n                        uid: json.uid\n                      })\n                    };\n\n                    fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                      .then(response => {\n                        if (response.status === 200) {\n                          try {\n                            let objSize = {\n                              duration: this.state.currentCount,\n                              url: key\n                            }\n                            this.props.callback([objSize], 'audio')\n                            this.cancelRecord()\n                          } catch (e) {\n                            this.cancelRecord()\n                          }\n                        }\n                      })\n                      .catch(errorPut => {\n                        console.log('error', errorPut)\n                        this.cancelRecord()\n                      });\n                  }\n                }\n              }\n            }).catch(error => {\n              console.log('error', error)\n              this.cancelRecord()\n            })\n          }\n        }).catch(error => {\n          console.log('error', error)\n          this.cancelRecord()\n        })\n      }\n    } else {\n      alert(translate('The file format is not suitable. Please select the file as .wav'))\n    }\n  }\n\n  getExtension(filename) {\n    let parts = filename.split('.');\n    return parts[parts.length - 1];\n  }\n\n  blobToFile(theBlob, fileName) {\n    theBlob.lastModifiedDate = new Date();\n    theBlob.name = fileName;\n    return theBlob;\n  }\n\n  togglePopup() {\n    let clickRecordStatus = true\n    this.props.onClick(clickRecordStatus)\n\n    this.setState({ showPopup: !this.state.showPopup }, () => {\n      if (this.state.showPopup) {\n        this.startRecording()\n        this.intervalId = setInterval(this.timer.bind(this), 1000)\n      } else {\n        if (this.recorder) {\n          this.recorder.stop()\n          this.recorder = null\n        }\n        try {\n          let track = this.localStream.getTracks()[0]\n          track.stop()\n        } catch (e) { }\n        if (this.intervalId) { clearInterval(this.intervalId) }\n        this.setState({ currentCount: 0, pause: false })\n      }\n    })\n    this.setState({success:false})\n  }\n\n  render() {\n\n    return (\n      <div className='box-audio-record-wrap'>\n        <img src={'./images/default/static/icon-camera.svg'} alt='icon-like' className='icons-btn filter_img_class' onClick={e => this.togglePopup()} />\n        {this.state.showPopup && <div className='box-audio-record'>\n          {/*<audio id='id-audio-record' controls autoPlay style={{ display: 'none' }}></audio>*/}\n          <div className='box-audio-record-body'>\n            {(this.state.success) ? <Loading /> : null\n            }\n            {this.state.pause ? <div className=\"audio-prevew\">\n              <audio id='id-audio-record' controls >                \n              </audio>\n              <div className='audio-record-desc'>\n              {secondToTime(this.state.currentCount)}\n            </div>\n            </div>:\n            <div className='audio-record-timer'>\n              {secondToTime(this.state.currentCount)}\n            </div>}\n            <div className='audio-record-desc'>\n              {translate('The recording upto 1 minute')}\n            </div>\n            {!this.state.pause && <div className='audio-record-button' onClick={(e) => this.pauseRecord(e)}>\n              {translate('Stop recording')}</div>}\n            {this.state.pause && <div className='audio-record-btn'>\n              <div className='audio-record-cancel' onClick={(e) => this.cancelRecord(e)}>\n                {translate('Cancel')} \n              </div>\n              <div className='audio-record-continue' onClick={(e) => this.sendingRecord(e)}>\n                {translate('Send')} \n              </div>\n            </div>}\n\n          </div>\n          <div className='audio-record-box-tail'><i className='icon-audio-record_box-tail'></i></div>\n        </div>}\n\n      </div>\n    )\n  }\n}\n\nRxAudioRecord.defaultProps = { onChange: () => { }, onClick: () => { } }\nexport default RxAudioRecord\n","import { Component } from 'react'\n\nclass RxComponent extends Component {\n  constructor (props, context, Jsx) {\n    super(props, context)\n    this.state = {\n      flagUpdate: false,\n      flags: {}\n    }\n    for (let i in Jsx) {\n      this[i] = (...paramPass) => Jsx[i](...paramPass, this)\n    }\n  }\n\n  componentWillUnmount () {\n    this._isUnmounted = true\n  }\n\n  setState (obj, callback = () => {}) { if (!this._isUnmounted) { super.setState(obj, callback) } }\n\n  run (name, params) {\n    if (params) { params.inthis = this } else { params = this }\n    if (typeof this.props[name] !== 'undefined' && typeof this.props[name] === 'function') {\n      return this.props[name](params)\n    } else if (typeof this[name] !== 'undefined' && typeof this[name] === 'function') {\n      return this[name]()\n    }\n  }\n\n  toggle (flagname) {\n    let flags = this.state.flags\n    flags[flagname] = flags[flagname] ? 0 : 1\n    this.setState({ flags: flags })\n  }\n\n  flag (flagname, value) {\n    let flags = this.state.flags\n    flags[flagname] = value\n    this.setState({ flags: flags })\n  }\n  \n  onBlurData (e, name, options) {\n    options = options || {}\n    let editingData = this.state.editingData\n    if (options.strim) {\n      editingData[name] = e.target.value.toString().replace(/(,)/g, '')\n    } else {\n      editingData[name] = e.target.value\n    }\n    this.setState({ editingData: editingData })\n  }\n\n  onBlurDataValue (value, name) {\n    let editingData = this.state.editingData\n    editingData[name] = value\n    this.setState({ editingData: editingData })\n  }\n}\n\nexport default RxComponent\n","/*global translate*/\nimport { Component } from 'react'\nconst { apiget, apipost } = global.rootRequire('classes/request')\n\nconst WAIT_INTERVAL = 500\nclass RxCrudEvent extends Component {\n  constructor (props, context) {\n    super(props, context)\n    this.state = {\n      flagUpdate: false,\n      paging: { st_col: 'created_at', st_type: -1, pg_page: 1, pg_size: 10 },\n      editingData: {},\n      extra: {},\n      data: {},\n      flags: {}\n    }\n  }\n\n  componentWillUnmount () {\n    this._isUnmounted = true\n  }\n\n  setState (obj, callback = () => {}) { if (!this._isUnmounted) { super.setState(obj, callback) } }\n\n  fetchAlldata () { this.fetchData() }\n  fetchData (runCallback = false) {\n    apiget(global.rxu.get(global.rxu.config, this.props.api), this.state.paging, {\n      '1': (json) => { this.setState({ data: json.data, extra: json.extra }) }\n    })\n    runCallback ? this.run('dataCallback', {}) : console.log()\n  }\n\n  run (name, params) {\n    if (params) { params.inthis = this } else { params = this }\n    if (typeof this.props[name] !== 'undefined' && typeof this.props[name] === 'function') {\n      return this.props[name](params)\n    } else if (typeof this[name] !== 'undefined' && typeof this[name] === 'function') {\n      return this[name]()\n    }\n  }\n\n  toggle (flagname) {\n    let flags = this.state.flags\n    flags[flagname] = flags[flagname] ? 0 : 1\n    this.setState({ flags: flags })\n  }\n\n  onClickData (e, perdata) {}\n  onClickSort (e, stcol) {\n    let paging = this.state.paging\n    paging.st_type = (paging.st_col !== stcol) ? -1 : (-1 * (paging.st_type))\n    paging.st_col = stcol\n    this.setState({ paging: paging }, () => { this.fetchData() })\n  }\n\n  onClickDataImport (e) {\n\n  }\n\n  onClickDataExport (e) {    \n    apiget(global.rxu.get(global.rxu.config, this.props.api), { ...this.state.paging, pg_size: 10000 }, {\n      '1': (json) => { global.JSONToCSVConvertor(json.data, '') }\n    })\n  }\n\n  onClickDataNew (e) {\n    global.scrolltop()\n    let timeStr = Date.now().toString()\n    let clone = { name: this.props.name + '_' + timeStr.substr(timeStr.length - 5), desc: '', created_at: 1, is_deleted: 0, is_active: 1, is_hot: 0, price: 100000, app: '', appdist: '' }\n    this.setState({ editingData: clone })\n  }\n\n  onClickDataEdit (e, perdata) {\n    global.scrolltop()\n    if (typeof perdata['inthis'] !== 'undefined') { delete perdata['inthis'] }\n    let clone = JSON.parse(JSON.stringify(perdata))\n    this.setState({ editingData: clone, flags: {} })\n  }\n\n  onClickDataDelete (e, perdata) {\n    let r = window.confirm(translate('You want to delete this data!'))\n    if (r === true) {\n      apiget(global.rxu.get(global.rxu.config, this.props.api) + '/delete', perdata, {\n        '1': (json) => { this.fetchData(true) }\n      })\n    } else {}\n  }\n\n  onClickDataRestore (e, perdata) {\n    apiget(global.rxu.get(global.rxu.config, this.props.api) + '/restore', perdata, {\n      '1': (json) => { this.fetchData(true) }\n    })\n  }\n\n  onClickDataUpdateSubmit (e, perdata) {\n    global.scrolltop()\n    apipost(global.rxu.get(global.rxu.config, this.props.api) + '/edit', this.state.editingData, {\n      '1': (json) => { this.fetchData(true) }\n    })\n    this.onClickDataEdit({}, {})\n  }\n\n  onClickDataUpdateSubmitRaw (e, perdata) {\n    global.scrolltop()\n    apipost(global.rxu.get(global.rxu.config, this.props.api) + '/edit', { ...this.jsoneditor.get(), _id: this.state.editingData._id, rxraw: 1 }, {\n      '1': (json) => { this.fetchData(true) },\n      'default': () => {}\n    })\n    this.onClickDataEdit({}, {})\n  }\n\n  onClickDataCreateSubmit (e, perdata) {\n    global.scrolltop()\n    apipost(global.rxu.get(global.rxu.config, this.props.api), this.state.editingData, {\n      '1': (json) => { this.fetchData(true) }\n    })\n    this.onClickDataEdit({}, {})\n  }\n\n  onClickDataTrash (e, isdeleted) {\n    let paging = this.state.paging\n    paging['search_is_deleted'] = isdeleted\n    this.setState({ paging: paging }, () => {\n      this.fetchData()\n    })\n  }\n\n  onClickGenPermission () {\n    apiget(global.rxu.config.api_permission_genpermission, {}, { '1': (json) => {\n      this.fetchData()\n    } })\n  }\n\n  onBlurData (e, name, options) {\n    options = options || {}\n    let editingData = this.state.editingData\n    if (options.strim) {\n      editingData[name] = e.target.value.toString().replace(/(,)/g, '')\n    } else {\n      editingData[name] = e.target.value\n    }\n    this.setState({ editingData: editingData })\n  }\n\n  onBlurDataValue (value, name) {\n    let editingData = this.state.editingData\n    editingData[name] = value\n    this.setState({ editingData: editingData })\n  }\n\n  onBlurDatafilter (e, name) {\n    clearTimeout(this.timerDatafilter)\n    let paging = this.state.paging\n    paging['search_' + name] = e.target.value\n    this.setState({ paging: paging })\n\n    this.timerDatafilter = setTimeout((e, name) => {\n      this.fetchData()\n    }, WAIT_INTERVAL)\n  }\n\n  onChangeContentCKE (evt) {\n    let editingData = this.state.editingData\n    let newContent = evt.editor.getData()\n    editingData.content = newContent\n    this.setState({ editingData: editingData })\n  }\n\n  onClickPaging (page) {\n    let paging = this.state.paging\n    let count = global.rxu.get(this.state.extra, 'count', paging.pg_size)\n    let maxpage = Math.ceil(count / paging.pg_size)\n\n    if (page < 1) { page = 1 }\n    if (page > maxpage) { page = maxpage }\n\n    paging.pg_page = page\n    this.setState({ paging: paging }, () => { this.fetchData() })\n  }\n\n  onChangePageSize (evt) {\n    clearTimeout(this.timerPageSize)\n    let pagesize = parseInt(evt.target.value, 10)\n    let paging = this.state.paging\n    paging.pg_size = pagesize\n    paging.pg_page = 1\n    if (pagesize >= 1 && pagesize <= 1000) {\n      this.setState({ paging: paging }, () => { this.timerPageSize = setTimeout((e, name) => { this.fetchData() }, WAIT_INTERVAL) })\n    }\n  }\n\n  callbackUpload (e) {\n    this.onBlurData({ target: { value: e.images } }, 'img_landscape')\n  }\n\n  callbackUploadDetail (e) {\n    this.onBlurData({ target: { value: e.images } }, 'img_detail')\n  }\n}\n\nexport default RxCrudEvent\n","/*global translate*/\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nglobal.isclient && require('./rxDragAndDrop.css')\nconst { rxaget} = global.rootRequire('classes/ulti')\nconst rxio = global.rootRequire('classes/socket').default\nconst {netaMediaOneAdd } = global.rootRequire('redux')\nclass rxDragAndDrop extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      drag: false,\n      fileList:{},\n      displayListFileScreen:false,\n      fileListArr:[]\n    }\n    this.dragCounter = 0  \n    this.dropRef = React.createRef()\n  }\n\n  componentDidMount() {\n    let div = this.dropRef.current\n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n\n  handleDrag = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  handleDragIn = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter++\n    let isFile = false\n    let dragtype = e.dataTransfer.types\n    if(dragtype.length === 1 && dragtype[0] === 'Files'){      \n      isFile = true\n    }\n    if (isFile && e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({drag: true})\n    }\n  }\n\n  handleDragOut = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter--\n    if (this.dragCounter === 0) {\n      this.setState({drag: false})\n      this.props.handleDragOut()\n    }\n  }\n\n  handleDrop = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    let fileList = []\n    let fileListArr = []\n    let alertStr = ''\n    let typeNSupArr = []\n    let displayListFileScreen = false\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      fileList = e.dataTransfer.files\n      displayListFileScreen = true\n      e.dataTransfer.clearData()\n      this.dragCounter = 0    \n      \n      for (let i = 0; i < fileList.length ; i++) {\n        let fileTmp = {}\n        let _URL = window.URL || window.webkitURL\n        let objectUrl = _URL.createObjectURL(fileList[i])\n        fileTmp.name = fileList[i].name\n        fileTmp.size = this.convertFileSize(fileList[i].size)\n        fileTmp.url = objectUrl\n        fileTmp.type = this.getFileType(fileList[i].name)\n        if(['image','video','filedoc'].indexOf(fileTmp.type) !== -1){          \n          fileListArr.push(fileTmp)\n        }else{\n          if(typeNSupArr.indexOf(fileTmp.type) === -1){\n            typeNSupArr.push(fileTmp.type)\n          }          \n        }\n      }\n\n      if(typeNSupArr.length > 0){\n        for (let i = 0; i < typeNSupArr.length; i++) {\n          if(i === 0){\n            alertStr += typeNSupArr[i]            \n          }else{\n            alertStr += ', ' + typeNSupArr[i]\n          }          \n        }\n        fileList = []\n        fileListArr = []\n        displayListFileScreen = false\n        let imageExtArr = [' jpg', ' gif', ' bmp', ' png']\n        let videoExtArr = [' m4v', ' avi', ' mpg', ' mp4']\n        let docExtArr = [' xlsx', ' xls', ' doc', ' docx', ' ppt', ' pptx', ' txt', ' pdf', ' numbers',' key',' pages',' zip']\n        alert(translate('The file format is not suitable. Please select the file as'+ docExtArr+ ',' + imageExtArr + ',' + videoExtArr))\n        this.dropCanceBtnClick()\n      }\n    }\n    this.setState({\n      drag: false, \n      fileList: fileList,\n      displayListFileScreen: displayListFileScreen, \n      fileListArr: fileListArr\n    })  \n  }\n\n  onChangeDataFile(e) {\n    e.stopPropagation()\n    e.preventDefault()\n    if (this.props.token) {\n      let fileList = this.state.fileList\n      for (let i = 0; i < fileList.length; i++) {\n        let fileTypeTmp = this.getFileType(fileList[i]['name'])\n        if (fileTypeTmp === 'image') {          \n          this.uploadFileImages(fileList[i])\n        } else if (fileTypeTmp === 'video') {\n          this.uploadFileVideos(fileList[i])\n        } else if (fileTypeTmp === 'filedoc') {\n           this.uploadFileDoc(fileList[i])\n        }\n      }\n\n    }\n\n    this.props.handleDragOut()\n    this.setState({displayListFileScreen:false})\n  }\n\n  uploadFileImages(file) {\n    let arrImg = [], arrL=[]\n    if (typeof (file) !== 'undefined') {\n      let fileSize = file.size\n      let extFilename = 'png'\n\n      let _URL = window.URL || window.webkitURL\n      let img = new Image();\n      let objectUrl = _URL.createObjectURL(file)\n      \n      let message_id = (Math.floor(Date.now()) * 1000).toString()\n      arrL.push(message_id)\n      this.uploadLoadingFile(file,message_id,'image')\n      \n      let dataParams = {\n        content_type: 'image/' + extFilename,\n        name: 'netalo_' + Math.floor(Date.now()),\n        public: true,\n        size: fileSize\n      }\n      let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n      let requestOptions = {\n        method: 'POST',\n        headers: header,\n        body: JSON.stringify(dataParams),\n        redirect: 'follow'\n      };\n\n      fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n        if (json && json.blod_object && json.blod_object.form_data) {\n          let dataUpload = new FormData()\n          let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n          for (let key of arrKeys) {\n            if (json.blod_object.form_data[key]) {\n              dataUpload.append(key, json.blod_object.form_data[key])\n            }\n          }\n          dataUpload.append('file', file, file.name)\n          dataUpload.append('success_action_status', 201)\n\n          fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n            if (result.indexOf('Key') !== -1) {\n              let patt = '<Key.*?>(.*?)<\\\\/Key>';\n              let strresult = result.match(patt);\n              if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                let key = strresult[1]\n                if (key) {\n                  let optComplete = {\n                    method: 'PUT',\n                    headers: header,\n                    body: JSON.stringify({\n                      content_type: json.content_type,\n                      id: json.id,\n                      name: json.name,\n                      size: json.size,\n                      uid: json.uid\n                    })\n                  };\n\n                  fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                    .then(response => {\n                      if (response.status === 200) {\n                        try {\n                          if (arrL.length > 0) {                            \n                            let ele = document.getElementById(arrL[0]);\n                            // ele && ele.closest(\"div.zmessage_row\").remove();   \n                            if(ele){\n                              ele.closest(\"div.zmessage_row\").style.display=\"none\";\n                            }                            \n                          }\n                          img.onload = () => {\n                            let objSize = { width: img.width || 960, height: img.height || 720, url: key }\n                            arrImg.push(objSize)\n                            this.uploadFile(arrImg, 'image')\n                            _URL.revokeObjectURL(objectUrl)\n                          }\n                          img.src = objectUrl\n                          // this.setState({displayListFileScreen: false}, () => {\n                          // })\n                        } catch (e) { }\n                      }\n                    })\n                    .catch(errorPut => console.log('error', errorPut));\n                }\n              }\n            }\n          })\n        }\n      }).catch(error => console.log('error', error))\n    }\n  }\n\n  uploadFileVideos(file) {\n    let fileSize = file.size\n    if (fileSize < 20971520) {\n      this.capture(file, (image) => {\n        this.uploadVideo(file, image)\n      })\n    } else {\n      alert(translate('Video size is too large'))\n    }\n  }\n\n  capture(file, callback) {\n    try {\n      var fileReader = new FileReader()\n      fileReader.onload = function () {\n        var blob = new Blob([fileReader.result], { type: file.type })\n        var url = URL.createObjectURL(blob)\n        var video = document.createElement('video')\n        var timeupdate = function () {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate)\n            video.pause()\n          }\n        }\n        video.addEventListener('loadeddata', function () {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate)\n          }\n        })\n        var dataURLtoFile = function (dataurl, filename) {\n          var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n          while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n          }\n          return new File([u8arr], filename, { type: mime });\n        }\n        var snapImage = function () {\n          var canvas = document.createElement('canvas')\n          canvas.width = video.videoWidth * 0.25\n          canvas.height = video.videoHeight * 0.5\n          canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height)\n          var image = canvas.toDataURL('image/jpeg')\n          var success = image.length > 5000\n          if (success) {\n            let filename = 'netalo_thumbnail_' + Math.floor(Date.now())\n            let arrimg = image.split(',')[1]\n\n            let objImg = {\n              base64: image,\n              width: canvas.width,\n              height: canvas.height,\n              videoWidth: video.videoWidth,\n              videoHeight: video.videoHeight,\n              duration: Math.ceil(video.duration),\n              type: 'image/png',\n              size: Math.floor((new Buffer(arrimg, 'base64').length)),\n              filename: filename,\n              file: dataURLtoFile(image, `${filename}.jpg`),\n            }\n            callback(objImg)\n            URL.revokeObjectURL(url)\n          }\n          return success\n        }\n        video.addEventListener('timeupdate', timeupdate)\n        video.preload = 'metadata'\n        video.src = url\n        video.muted = true\n        video.playsInline = true\n        video.play()\n      }\n\n      fileReader.readAsArrayBuffer(file)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  uploadVideo(file, image) {\n    let arrL=[]\n    let message_id = (Math.floor(Date.now()) * 1000).toString()\n    arrL.push(message_id)\n    this.uploadLoadingFile(file,message_id,'video')\n    let dataParams = {\n      content_type: 'video/mp4',\n      name: 'netalo_video_' + Math.floor(Date.now()),\n      public: true,\n      size: file.size\n    }\n    let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n    let requestOptions = {\n      method: 'POST',\n      headers: header,\n      body: JSON.stringify(dataParams),\n      redirect: 'follow'\n    };\n\n    fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n      if (json && json.blod_object && json.blod_object.form_data) {\n        let dataUpload = new FormData()\n        let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n        for (let key of arrKeys) {\n          if (json.blod_object.form_data[key]) {\n            dataUpload.append(key, json.blod_object.form_data[key])\n          }\n        }\n        dataUpload.append('file', file, file.name)\n        dataUpload.append('success_action_status', 201)        \n        fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n          if (result.indexOf('Key') !== -1) {\n            let patt = '<Key.*?>(.*?)<\\\\/Key>';\n            let strresult = result.match(patt);\n            if (strresult && strresult.constructor === Array && strresult.length > 1) {\n              let key = strresult[1]\n              if (key) {\n                let optComplete = {\n                  method: 'PUT',\n                  headers: header,\n                  body: JSON.stringify({\n                    content_type: json.content_type,\n                    id: json.id,\n                    name: json.name,\n                    size: json.size,\n                    uid: json.uid\n                  })\n                };\n\n                fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                  .then(response => {\n                    if (response.status === 200) {\n                      try {\n                        if (arrL.length > 0) {\n                          let ele = document.getElementById('video'+ arrL[0]);\n                          // ele && ele.closest(\"div.zmessage_row\").remove();\n                          if(ele){\n                            ele.closest(\"div.zmessage_row\").style.display=\"none\";\n                          }\n                        }\n                        this.uploadThumnail(image, key)\n                        // this.setState({displayListFileScreen:false}, () => {\n                        // })\n                      } catch (e) { }\n                    }\n                  })\n                  .catch(errorPut => console.log('error', errorPut));\n              }\n            }\n          }\n        }).catch(error => {\n          alert(translate('Video size is too large'))\n        })\n      }\n    }).catch(error => console.log('error', error))\n  }\n\n  uploadThumnail(image, videokey) {\n    if (image.base64 && image.width > 0) {\n      let dataParams = {\n        content_type: image.type,\n        name: image.filename,\n        public: true,\n        size: image.size\n      }\n      let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n      let requestOptions = {\n        method: 'POST',\n        headers: header,\n        body: JSON.stringify(dataParams),\n        redirect: 'follow'\n      };\n\n      fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n        if (json && json.blod_object && json.blod_object.form_data) {\n          let dataUpload = new FormData()\n          let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n          for (let key of arrKeys) {\n            if (json.blod_object.form_data[key]) {\n              dataUpload.append(key, json.blod_object.form_data[key])\n            }\n          }\n          dataUpload.append('file', image.file, image.file.name)\n          dataUpload.append('success_action_status', 201)\n\n          fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n            if (result.indexOf('Key') !== -1) {\n              let patt = '<Key.*?>(.*?)<\\\\/Key>';\n              let strresult = result.match(patt);\n              if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                let key = strresult[1]\n                if (key) {\n                  let optComplete = {\n                    method: 'PUT',\n                    headers: header,\n                    body: JSON.stringify({\n                      content_type: json.content_type,\n                      id: json.id,\n                      name: json.name,\n                      size: json.size,\n                      uid: json.uid\n                    })\n                  };\n                  fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                    .then(response => {\n                      if (response.status === 200) {\n                        try {\n                          let objSize = {\n                            width: image.videoWidth || 960,\n                            height: image.videoHeight || 720,\n                            thumbnail_url: key,\n                            duration: image.duration,\n                            url: videokey\n                          }\n                          this.uploadFile([objSize], 'video')                          \n                        } catch (e) { }\n                      }\n                    })\n                    .catch(errorPut => console.log('error', errorPut));\n                }\n              }\n            }\n          })\n        }\n      }).catch(error => console.log('error', error))\n    }\n  }\n\n  uploadFileDoc(file) {\n\n    let arrImg = [], arrL=[]\n    if (typeof (file) !== 'undefined') {\n      let fileSize = file.size\n      let extFilename = this.getExtension(file['name'])\n\n      if (fileSize < (1024*1024*100)) {\n        let message_id = (Math.floor(Date.now()) * 1000).toString()\n        arrL.push(message_id)\n        this.uploadLoadingFile(file,message_id,'file')\n        let fileTypeTmp = file.type\n        if(extFilename === 'numbers'){\n          fileTypeTmp = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'// file type of xlsx file\n        }\n\n        if(extFilename === 'pages'){\n          fileTypeTmp = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'// file type of docx file\n        }\n\n        if (['m4a','mp3'].indexOf(extFilename) !== -1 ) {\n          fileTypeTmp = 'audio/m4a'\n        }\n\n        let dataParams = {\n          content_type: fileTypeTmp,\n          name: 'netalo_file_' + Math.floor(Date.now()),\n          public: true,\n          size: fileSize\n        }\n        let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n        let requestOptions = {\n          method: 'POST',\n          headers: header,\n          body: JSON.stringify(dataParams),\n          redirect: 'follow'\n        };\n        fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n          if (json && json.blod_object && json.blod_object.form_data) {\n            let dataUpload = new FormData()\n            let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n            for (let key of arrKeys) {\n              if (json.blod_object.form_data[key]) {\n                dataUpload.append(key, json.blod_object.form_data[key])\n              }\n            }\n            dataUpload.append('file', file, file.name)\n            dataUpload.append('success_action_status', 201)\n\n            fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n              if (result.indexOf('Key') !== -1) {\n                let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                let strresult = result.match(patt);\n                if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                  let key = strresult[1]\n                  if (key) {\n                    let optComplete = {\n                      method: 'PUT',\n                      headers: header,\n                      body: JSON.stringify({\n                        content_type: json.content_type,\n                        id: json.id,\n                        name: json.name,\n                        size: json.size,\n                        uid: json.uid\n                      })\n                    };\n\n                    fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                      .then(response => {\n                        if (response.status === 200) {\n                          try {\n                            if (arrL.length > 0) {\n                              let ele = document.getElementById(arrL[0]);\n                              // ele && ele.closest(\"div.zmessage_row\").remove();\n                              if(ele){\n                                ele.closest(\"div.zmessage_row\").style.display=\"none\";\n                              }\n                            }\n\n                            let filename  = file['name']\n                            filename = filename.replace('.' + extFilename ,'')\n\n                            let objSize = {\n                              file_extension: extFilename,\n                              file_name: filename,\n                              size: fileSize,\n                              url: key\n                            }\n\n                            if (extFilename.indexOf('zip') !== -1) {\n                              objSize['file_extension'] = 'zip'\n                              objSize['file_name'] = file['name'].replace('.zip', '')\n                            }\n\n                            arrImg.push(objSize)\n\n                            this.uploadFile(arrImg, 'file')\n                              // this.setState({displayListFileScreen:false}, () => {\n                              //   this.uploadFile(arrImg, 'file')\n                              // })\n                          } catch (e) { }\n                        }\n                      })\n                      .catch(errorPut => console.log('error', errorPut));\n                  }\n                }\n              }\n            })\n          }\n        }).catch(error => console.log('error', error))\n      } else {\n        alert('File size is too large')\n      }\n    }\n  }\n\n  uploadFile(arrImg, type) {\n    const arrUsers = rxaget(this.props, 'user.users', {})\n    const group_id = this.props.group_id\n    const user = rxaget(this.props, 'netaauth.user', {})\n    const objUser = arrUsers[user.id.toString()]\n    let msg = {}\n    if (type === 'image') {\n      if (arrImg && arrImg.constructor === Array && arrImg.length > 0) {\n        msg = {\n          group_id: Number(group_id),\n          type: 2,\n          version: 1,\n          nonce: (Math.floor(Date.now()) * 1000).toString(),\n          sender_name: rxaget(objUser, 'full_name', ''),\n          attachments: JSON.stringify({ images: arrImg }).replace(/\"/g, '\\\\\"')\n        }\n      }\n    }\n    if (type === 'video') {\n      if (arrImg && arrImg.constructor === Array && arrImg.length > 0) {\n        msg = {\n          group_id: Number(group_id),\n          type: 4,\n          version: 1,\n          nonce: (Math.floor(Date.now()) * 1000).toString(),\n          sender_name: rxaget(objUser, 'full_name', ''),\n          attachments: JSON.stringify({ video: arrImg[0] }).replace(/\"/g, '\\\\\"')\n        }\n      }\n    }\n    if (type === 'file') {\n      if (arrImg && arrImg.constructor === Array && arrImg.length > 0) {\n        msg = {\n          group_id: Number(group_id),\n          type: 12,\n          version: 1,\n          nonce: (Math.floor(Date.now()) * 1000).toString(),\n          sender_name: rxaget(objUser, 'full_name', ''),\n          attachments: JSON.stringify({ file: arrImg[0] }).replace(/\"/g, '\\\\\"')\n        }\n      }\n    }\n    if (type === 'audio') {\n      if (arrImg && arrImg.constructor === Array && arrImg.length > 0 && this.state.canceRecoreStatus === false) {\n        msg = {\n          group_id: Number(group_id),\n          type: 3,\n          version: 1,\n          nonce: (Math.floor(Date.now()) * 1000).toString(),\n          sender_name: rxaget(objUser, 'full_name', ''),\n          attachments: JSON.stringify({ audio: arrImg[0] }).replace(/\"/g, '\\\\\"')\n        }\n      }\n    }\n    if (msg && msg.group_id) {\n      if (rxio.connected) {\n        rxio.socket.emit('create_message', msg, (data) => {\n          if (data && data.message) {\n            try {\n              let objMedia = {\n                group_id: Number(group_id),\n                media_type: msg.type,\n                message_id: Number(data.message.message_id),\n                msg_create_at: Number(data.message.created_at),\n                url: rxaget(arrImg, '0.url', '')\n              }\n              if (type === 'file') {\n                objMedia['name'] = rxaget(arrImg, '0.file_name', '')\n                objMedia['ext'] = rxaget(arrImg, '0.file_extension', '')\n              }\n              if (type === 'video') {\n                objMedia['thumbnail_url'] = ''\n              }\n              this.props.netaMediaOneAdd(Number(group_id), objMedia)\n            } catch(e) {\n              console.log(e)\n            }\n\n            this.props.handleMessage(data.message, true)\n          }\n        })  \n      }\n      \n    }\n  }\n\n  uploadLoadingFile(file,message_id,type){\n    try {\n      let fileType \n      let attachments\n      let reader = new FileReader();\n      let url = URL.createObjectURL(file)\n      let that = this\n      let params = {\n            \"message_id\": message_id,\n            \"created_at\": (Math.floor(Date.now()) * 1000).toString(),\n            \"group_id\": that.props.group_id, \"message\": \"\",\n            \"sender_uin\": that.props.userid,\n            \"updated_at\": \"0\", \"pinned_at\": \"0\", \"order_id\": \"0\", \"status\": 0,\n            // \"type\": fileType,\n            // \"attachments\": attachments,\n            \"group_type\": 2, \"nonce\": \"\", \"version\": 1, \"is_encrypted\": false\n          }\n      if (type === 'image') {\n        const img = new Image()\n        img.onload = function() { \n          params.type = 2\n          params.attachments = `{\"loading\":true,\"images\":[{\n                            \"url\":\"${url}\"}]}`\n          that.props.handleMessage(params, true)      \n        }\n        img.src = url\n      }\n      if (type === 'video') {\n        const video = document.createElement(\"video\");\n        video.src = url;\n        video.addEventListener(\"loadedmetadata\", function () {\n          params.type = 4\n          params.attachments = `{\"loading\":true,\"video\":{\n                          \"url\":\"${url}\",\"width\":\"${this.videoWidth}\",\"height\":\"${this.videoHeight}\"}}`\n          that.props.handleMessage(params, true) \n        });\n      }\n      if (type === 'file') {\n        params.type = 12\n        params.attachments = `{\"loading\":true,\n                        \"file\":{\n                          \"url\":\"${url}\",\n                          \"file_extension\":\"${this.getExtension(file['name'])}\",\n                          \"size\":\"${file.size}\",\n                          \"file_name\":\"${file.name}\"                          \n                        }}`\n        that.props.handleMessage(params, true)  \n      }\n    } catch (error) {\n    }\n  }\n\n  getFileType(filename){\n    let ext = this.getExtension(filename);\n    let imageExtArr = ['jpg', 'gif', 'bmp', 'png']\n    let videoExtArr = ['m4v', 'avi', 'mpg', 'mp4']\n    let docExtArr = ['xlsx', 'xls', 'doc', 'docx', 'ppt', 'pptx', 'txt', 'pdf', 'numbers','key','pages','zip','m4a','mp3']\n    if(imageExtArr.indexOf(ext) !== -1){\n      return 'image'\n    }else if(videoExtArr.indexOf(ext) !== -1){\n      return 'video'\n    } else if(docExtArr.indexOf(ext) !== -1){\n      return 'filedoc'\n    }\n    return ext.toLowerCase()\n  }\n\n  getExtension(filename) {\n    let parts = filename.split('.');\n    return parts[parts.length - 1];\n  }\n\n  convertFileSize(size){\n    const units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let index = 0, newsize = parseInt(size, 10) || 0;\n\n    while(newsize >= 1024 && ++index){\n        newsize = newsize/1024;\n    }\n    //include a decimal point and a tenths-place digit if presenting \n    //less than ten of KB or greater units\n    return(newsize.toFixed(newsize < 10 && index > 0 ? 1 : 0) + ' ' + units[index]);\n  }\n\n  dropCanceBtnClick(){\n\n    this.props.handleDragOut()\n    this.setState({displayListFileScreen:false})\n  }\n\n  deleteFileSelected(index){\n    let fileListTmp = [];\n    let fileList = this.state.fileList\n    let fileListArr = this.state.fileListArr\n    let displayListFileScreen = true\n    \n    fileListArr.splice(index,1)\n    if(fileListArr.length === 0){\n      displayListFileScreen = false\n    }\n\n    for (let i = 0 ; i < fileList.length ; i++) {\n      if(i !== index){\n        fileListTmp.push(fileList[i])  \n      }\n    };\n\n    this.setState({fileListArr:fileListArr,fileList:fileListTmp,displayListFileScreen:displayListFileScreen})  \n  }\n\n  editFileSelected(index,files){\n    let fileListTmp = [];\n    let fileList = this.state.fileList\n    let fileListArr = this.state.fileListArr\n    let fileTmp = {}\n    let _URL = window.URL || window.webkitURL\n    let objectUrl = _URL.createObjectURL(files[0])\n\n    fileTmp.name = files[0].name\n    fileTmp.size = this.convertFileSize(files[0].size)\n    fileTmp.url = objectUrl\n    fileTmp.type = this.getFileType(files[0].name)    \n    fileListArr[index] = fileTmp\n    if(['image','video','filedoc'].indexOf(fileTmp.type) !== -1){\n      for (let i = 0 ; i < fileList.length ; i++) {\n        if(i !== index){\n          fileListTmp.push(fileList[i])  \n        }else{\n          fileListTmp.push(files[0])\n        }\n      };\n      this.setState({fileListArr:fileListArr,fileList:fileListTmp}) \n    }else{\n      let imageExtArr = [' jpg', ' gif', ' bmp', ' png']\n      let videoExtArr = [' m4v', ' avi', ' mpg', ' mp4']\n      let docExtArr = [' xlsx', ' xls', ' doc', ' docx', ' ppt', ' pptx', ' txt', ' pdf', ' numbers',' key',' pages',' zip',' m4a',' mp3']\n      alert(translate('The file format is not suitable. Please select the file as'+ docExtArr + ',' + imageExtArr + ',' + videoExtArr))\n    } \n  }\n\n  render () {\n    return (\n      <div className = 'zchat_body zchat-dragging-contain' ref={this.dropRef} >\n        {this.state.drag &&\n          <div className = 'zchat-dragging-contain_1'>\n            <div className = 'zchat-dragging-body'>\n              <div className = 'zchat-dragging-title'>{translate('Drop files here')}</div>\n            </div>\n          </div>\n        }\n        {this.props.children}\n        {this.state.displayListFileScreen && <div className='zchat-drop_rectangle'>          \n          <div className='zchat-drop_rectangle_1'></div>        \n          <div className='zchat-drop_rectangle_2'>        \n            <div className='zchat-drop_rectangle_2_1'>\n              <div className = 'zchat-drop-title'>{this.state.fileListArr.length + translate(' file is selected')} </div>\n              <div className = 'zchat-drop-fileList'>\n              {this.state.fileListArr.length > 0 ?\n                <div>\n                  {this.state.fileListArr.map((ele,index) =>{\n                    return(\n                    <div key ={index}>\n                      <div className ='zchat-drop-fileItem'>\n                        <div className ='zchat-drop-fileImage_place'>\n                          {ele.type === 'image' && \n                            <img className ='zchat-drop-fileImage' src={ele.url} alt=''/>}\n                          {ele.type === 'video' && <div>\n                            <video  className ='zchat-drop-fileImage'>\n                              <source src={ele.url} />                              \n                            </video>\n                            <img className='zchat-drop-playicon' src={'./images/default/static/icon-media-play-white.svg'} alt='icon-media-play-white' />\n                            </div>\n                          }\n                          {ele.type === 'filedoc' && \n                            <img className ='zchat-drop-filedocIcon' src='./images/default/static/ic_file.svg' alt=''/>}\n                        </div>\n                        <div className = 'zchat-drop-fileInfo'>\n                          <div className = 'zchat-drop-fileName'>{ele.name}</div>\n                          <div className = 'zchat-drop-filesize'>{ele.size}</div>\n                          <div className = 'zchat-drop-divider'></div>\n                        </div>                        \n                        <div className = 'zchat-drop-icon file-edit-icon' onClick={(e) => { this.refs['file_edit_icon' + index].click()}}>\n\n                          <input type='file' id={'file_edit_icon' + index} ref={'file_edit_icon' + index} multiple={false}\n                            style={{ display: 'none' }}\n                            accept=\"image/jpg,image/png,video/mp4,.xlsx,.xls,.doc,.docx,.ppt,.pptx,.txt,.pdf,.numbers,.key,.pages,.zip,.m4a,.mp3\"\n                            onChange={(e) => this.editFileSelected(index, e.target.files)}/>\n                          <img className='filter_img_class' src='./images/default/icons/icon_edit.svg' alt=''/>\n                        </div>\n                        <div className = 'zchat-drop-icon file-delete-icon' onClick={e => this.deleteFileSelected(index)}>\n                          <img className='filter_img_class' src='./images/default/icons/icon-delete-chat.svg' alt=''/>\n                        </div>\n                      </div>\n                    </div>\n                  )})}\n                </div>\n                :<div></div>}             \n              </div>\n              <div className='zchat-drop-footer'>\n                <div className='zchat-drop-btn drop-submit_btn' onClick = {(e)=> this.onChangeDataFile(e)}>{translate('Send')}</div>\n                <div className='zchat-drop-btn drop-cance_btn' onClick ={()=> this.dropCanceBtnClick()}>{translate('Cancel')}</div>\n              </div>\n            </div>      \n          </div>        \n        </div>} \n               \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.user,\n  netaauth: state.netaauth,\n})\n\nconst mapDispatchToProps = {\n  netaMediaOneAdd\n}\n\nconst rxDragAndDrop_ = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(rxDragAndDrop)\n\nexport default rxDragAndDrop_","import React, { Component } from 'react'\nimport './rxDragdroptree.css'\n\nclass RxDragdroptree extends Component {\n  constructor (props, context) {\n    super(props, context)\n    this.state = {\n      data: this.props.data,\n      server: this.props.server === true\n    }\n\n    if (typeof window !== 'undefined') {\n      this.placeholderParent = {}\n      this.placeholder = document.createElement('div')\n      this.placeholder.className = 'rxdragdroptree-placeholder'\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps (newProps) {\n    this.setState({ data: newProps.data })\n  }\n\n  preventDefault (event) {\n    event.preventDefault()\n  }\n\n  dragStart (e) {\n    e.stopPropagation()\n    this.dragged = e.currentTarget\n    e.dataTransfer.effectAllowed = 'move'\n    e.dataTransfer.setData('text/html', e.currentTarget)\n  }\n\n  dragEnd (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    this.dragged.style.opacity = '1'\n    if (this.placeholder.parentNode === this.placeholderParent) {\n      this.placeholderParent.removeChild(this.placeholder)\n    }\n\n    this.helpAddDrop(this.dragged, this.over)\n  }\n\n  dragOver (e) {\n    this.dragged.style.opacity = '0.3'\n    if (this.dragged.contains(e.target)) return\n    if (e.target.className === 'rxdragdroptree-placeholder') return\n    if (e.target.className === 'rxdragdroptree-item' || e.target.className === 'rxdragdroptree-item-inner') {\n      this.over = e.target\n\n      let relY = e.clientY - this.over.offsetTop\n      let height = this.over.offsetHeight / 2\n      let parent = e.target.parentNode\n\n      if (relY > height) {\n        this.nodePlacement = 'after'\n        parent.insertBefore(this.placeholder, e.target.nextElementSibling)\n      } else if (relY < height) {\n        this.nodePlacement = 'before'\n        parent.insertBefore(this.placeholder, e.target)\n      }\n\n      this.placeholderParent = parent\n    \n    }\n  }\n\n  helpAddDrop (drag, drop) {\n    if (!drop || !drop.dataset) {\n      return\n    }\n\n    if (!drop.dataset.id || !drop.dataset.parentid) {\n      this.nodePlacement = 'inner'\n      drop = drop.parentNode\n    }\n\n    let dragdata = drag.dataset\n    let dropdata = drop.dataset\n\n    if (!this.state.server) {\n      let tempdata = this.state.data\n      let tempcurrentData = {}\n      let tempparentDrag = this.state.data[drag.dataset.parentid]\n\n      let tempparentDragNew = []\n      for (let index in tempparentDrag) {\n        if (tempparentDrag[index]._id === dragdata.id) {\n          tempcurrentData = tempparentDrag[index]\n          continue\n        }\n        tempparentDragNew.push(tempparentDrag[index])\n      }\n\n      tempdata[drag.dataset.parentid] = tempparentDragNew\n\n      switch (this.nodePlacement) {\n        case 'before':\n          tempdata[dropdata.parentid] = tempdata[dropdata.parentid] || []\n          tempdata[dropdata.parentid].splice(dropdata.index, 0, tempcurrentData)\n          break\n\n        case 'after':\n          tempdata[dropdata.parentid] = tempdata[dropdata.parentid] || []\n          tempdata[dropdata.parentid].splice(1 + parseInt(dropdata.index, 10), 0, tempcurrentData)\n          break\n\n        case 'inner':\n          tempdata[dropdata.id] = tempdata[dropdata.id] || []\n          tempdata[dropdata.id].splice(0, 0, tempcurrentData)\n          break\n\n        default:\n          tempdata[dropdata.id] = tempdata[dropdata.id] || []\n          tempdata[dropdata.id].splice(0, 0, tempcurrentData)\n          break\n      }\n\n      this.setState({ data: tempdata })\n    }\n  }\n\n  helpShowTree (items, parentId) {\n    if (items && Object.keys(items).length) {\n      return Object.keys(items).map((index) =>\n        <div key={items[index]._id} className='rxdragdroptree-item' data-index={index} data-id={items[index]._id} data-parentid={parentId} draggable='true' onDragEnd={(e) => this.dragEnd(e)} onDragStart={(e) => this.dragStart(e)}>\n          <div className='rxdragdroptree-item-' />{this.props.render(items[index])}\n          <div className='rxdragdroptree-item-inner' />\n          {this.helpShowTree(this.state.data[items[index]._id], items[index]._id)}\n        </div>)\n    } else {\n\n    }\n  }\n\n  render () {\n    return (\n      <div className='rxdragdroptree-wrap' onDragOver={(e) => this.dragOver(e)}>\n        {this.helpShowTree(this.state.data[0], 0)}\n      </div>\n    )\n  }\n}\n\nRxDragdroptree.defaultProps = {\n  render: (ele) => (<div className='rxdragdroptree-item-content'>{ele.text}</div>),\n  data: {}\n}\nexport default RxDragdroptree\n\n\n","/*global translate*/\n\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nglobal.isclient && require('./rxGroupList.css')\nconst { rxaget, rxChangeSlug, stringToColour } = global.rootRequire('classes/ulti')\nconst { chooseGroupAction } = global.rootRequire('redux')\nconst { checkNameGroup } = global.rootRequire('classes/chat')\nconst { rxgetLocal } = global.rootRequire('classes/request')\nclass RxGroupList extends Component {\n  constructor (props, context) {\n    super(props, context)\n    this.state = {\n      groups: [],\n      groups_origin: [],      \n    }\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.users = rxaget(this.props, 'user.users', {})\n    // const objGroups = rxaget(this.props, 'netaGroups.groups', {})\n    // if (objGroups && Object.keys(objGroups).constructor === Array) {\n    //   Object.keys(objGroups).forEach(group => {\n    //     this.state.groups.push(objGroups[group])\n    //   })\n    // }\n    // this.state.groups_origin = this.state.groups\n    \n      try {\n      const groupneta = rxaget(this.props, 'netaGroups', {})\n      const arrGroups = []\n      if (groupneta && groupneta.groups) {\n        for (const idgroup of Object.keys(groupneta.groups)) {\n          if (groupneta.groups[idgroup]) {\n            let ogroup = groupneta.groups[idgroup]\n            ogroup['group_fullname'] = checkNameGroup(ogroup, this.users, this.userid)\n            if (ogroup && (ogroup.type === 3||ogroup.type === 5)&& !ogroup.avatar_url && rxaget(ogroup, 'occupants_uins', []).length === 2) {\n              const arrUins = rxaget(ogroup, 'occupants_uins', [])\n              ogroup['partner_id'] = (arrUins[0].toString() === this.userid.toString()) ? arrUins[1] : arrUins[0]\n            }\n            arrGroups.push(ogroup)\n          }\n        }\n      }\n      this.state.groups = arrGroups\n      this.state.groups_origin = this.state.groups\n\n    } catch (e) { console.log(e) }\n    this.checkImage = {}\n    const timenow = Math.floor(Date.now() / 1000)\n    let checkImageObj = rxaget(this.props, 'netaBlobs.data', {}) || {}\n    if (checkImageObj && typeof(checkImageObj) === \"object\" && Object.keys(checkImageObj).length > 0) {\n      for (let keyImg of Object.keys(checkImageObj)) {\n        let created_at = rxaget(checkImageObj[keyImg], 'created_at', 0)\n        if ((timenow - created_at) < 43200) {\n          this.checkImage[keyImg] = checkImageObj[keyImg]\n        }\n      }\n    }\n  }\n\n\n  checkAvatarGroup (group) {\n    const users = this.users\n    let result = false\n    if (group.avatar_url) {\n      result = true\n    } else if (group.type === 3 && !group.avatar_url) {\n      if (group && group.occupants_uins && group.occupants_uins.constructor === Array && group.occupants_uins.length === 2 && group.occupants_uins.indexOf(this.userid.toString()) !== -1) {\n        const arruserid = group.occupants_uins.filter(o => o !== this.userid.toString())\n        if (arruserid && arruserid.constructor === Array && arruserid[0] && users[arruserid[0]] && users[arruserid[0]].profile_url) {\n          result = true\n        }\n      }\n    }\n    return result\n  }\n\n  loadImgStatic (obj, name) {\n    if (obj.sender_avatar) {\n      return global.rxu.config.get_static + obj.sender_avatar\n    } else if (obj.avatar_url) {\n      return global.rxu.config.get_static + obj.avatar_url\n    } else if (obj.type === 3 && !obj.avatar_url) {\n      const users = this.users\n      if (obj && obj.occupants_uins && obj.occupants_uins.constructor === Array && obj.occupants_uins.length === 2 && obj.occupants_uins.indexOf(this.userid.toString()) !== -1) {\n        const arruserid = obj.occupants_uins.filter(o => o !== this.userid.toString())\n        if (arruserid && arruserid.constructor === Array && arruserid[0] && users[arruserid[0]] && users[arruserid[0]].profile_url) {\n          return global.rxu.config.cdn_endpoint + users[arruserid[0]].profile_url\n        }\n      } else {\n        return './images/default/static/avadefault.svg'\n      }\n    } else {\n      return './images/default/static/avadefault.svg'\n    }\n  }\n\n  checkNameGroup (group) {\n    const users = this.users\n    let result = ''\n    if (group.type === 3) {\n      if (group && group.occupants_uins && group.occupants_uins.constructor === Array && group.occupants_uins.length === 2 && group.occupants_uins.indexOf(this.userid.toString()) !== -1) {\n        const arruserid = group.occupants_uins.filter(o => o !== this.userid.toString())\n        if (arruserid && arruserid.constructor === Array) {\n          const user = users[arruserid[0]]\n          result = (user && user.full_name) ? user.full_name : ''\n        }\n      } else if (group && group.owner_uin) {\n        const user = users[group.owner_uin.toString()]\n        result = (user && user.full_name) ? user.full_name : ''\n      } else {\n        result = users[group.owner_uin.toString()] || group.name\n      }\n    } else {\n      if (!group.name) {\n        const occupants_uins = group.occupants_uins || []\n        if (occupants_uins && occupants_uins.length > 0) {\n          const groupname = []\n          occupants_uins.forEach(uin => {\n            const fullname = (users[uin.toString()] && users[uin.toString()].full_name) ? users[uin.toString()].full_name : ''\n            if (fullname) {\n              groupname.push(fullname)\n            }\n          })\n          result = groupname.join(', ')\n        }\n      } else {\n        result = group.name || ''\n      }\n    }\n    return result || translate('Stranger')\n  }\n\n  onChangeSearch (e) {\n    const _usersinfo = rxaget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users')\n    let value = e.target.value\n    \n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }    \n    let arrGroups = this.state.groups_origin.filter(o => {\n      const userId = rxaget(o.occupants_uins.filter((id) => (id !== String(rxaget(this.props, 'netaauth.user.id')))), [0])\n      const uname_info = rxaget(_usersinfo, [userId], translate('Stranger'))\n\n      try {\n        if (o.group_fullname && rxChangeSlug(o.group_fullname) && (rxChangeSlug(o.group_fullname).indexOf(rxChangeSlug(value)) !== -1 || (rxChangeSlug(rxaget(uname_info, 'phone', '')).indexOf(rxChangeSlug(value)) !== -1 && (o.type === 3)))) {\n          return true\n        } else {\n          return false\n        }\n      } catch (e) {\n        console.log(e)\n        return false\n      }\n    })\n    this.setState({ groups: arrGroups })\n  }\n\n  chooseGroupForward (group) {\n    this.props.chooseGroupAction(group)\n    this.props.chooseGroupForward(group)\n  }\n\n  render () {\n    const linkava = global.rxu.config.get_avatar  \n    return (\n      <div className='groups-container'>\n        <div className='groups-opacity' onClick={e => { this.props.closePopupGroup() }} />\n\n        <div className='groups-box'>\n          <div className='groups-search'>\n            <input placeholder='Search' className='place-holder-center' onChange={e => { this.onChangeSearch(e) }} />\n          </div>\n          <div className='groups-box-main'>\n            {this.state.groups.length > 0 ? (\n              this.state.groups.map((ele, index) =>\n                <div className='zgroupitem clearfix' key={index} onClick={e => { this.chooseGroupForward(ele) }}>\n                  <div className='zgroup_avatar'>\n                    {ele.avatar_url \n                      ? \n                      <img src={global.rxu.config.get_static + ele.avatar_url} alt='avatar_url' className='ava-group images-static'\n                      onError={(e) => { e.target.style.display = 'none' }} /> \n                      :\n                      (this.users[ele.partner_id] && this.users[ele.partner_id]['profile_url'] \n                        ? <img src={`${global.rxu.config.cdn_endpoint}` + this.users[ele.partner_id]['profile_url']} alt='profile_url' data-id={'userava' + ele.partner_id} className='ava-usergroup images-static' \n                        onError={(e) => {e.target.onerror = null; e.target.src = `${global.rxu.config.get_static}` + this.users[ele.partner_id]['profile_url'] }} /> \n                         : this.checkImage[linkava + ele.partner_id] && <img src={this.checkImage[linkava + ele.partner_id]['link']} alt='linkava' className='ava-usergroup images-static' onError={(e) => { e.target.style.display = 'none' }} />\n                      )\n                    }\n                    {\n                      !(ele.avatar_url || (this.users[ele.partner_id] && this.users[ele.partner_id]['profile_url']) )\n                      &&<span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + rxaget(ele, 'group_id', '').slice(7,8) + rxaget(ele, 'group_fullname', '').slice(0, 1))}, #FFFFFF)` }}>\n                        {rxChangeSlug(rxaget(ele, 'group_fullname', ''), true).slice(0, 2).toUpperCase()}\n                      </span>  \n                    }\n                  </div>\n                  <div className='zgroup_maininfo'>\n                    <div className='zgroup_name zgroup_name_margin '>{rxaget(ele, 'group_fullname', '')} </div>\n                  </div>\n                </div>\n              )\n            ) : (<div className='zgroup-emty'> </div> )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  langValue: state.langValue,\n  user: state.user,\n  auth: state.auth,\n  netaauth: state.netaauth,\n  netaBlobs: state.netaBlobs,\n  netaMess: state.netaMess,\n  netaGroups: state.netaGroups\n})\n\nconst mapDispatchToProps = {\n  chooseGroupAction\n}\n\nconst ComponentGroupListW = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RxGroupList)\n\nexport default ComponentGroupListW\n","import React, { Component } from 'react'\n//import {FacebookShareButton, FacebookIcon, TwitterShareButton,TwitterIcon } from \"react-share\";\nglobal.isclient && require('./rxImageGallery.css')\n\nclass RxImageGallery extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      images: [],\n      total: 0,\n      index: 0\n    }\n    this.keyClickFunction = this.keyClickFunction.bind(this);\n    if (this.props.images) {\n      const images = this.props.images.split(',')\n      if (images && images.constructor === Array && images.length > 0) {\n        images.forEach(url => {\n          if (url) {\n            this.state.images.push(global.rxu.config.get_static + url)\n          }\n        })\n      }\n    }\n    if (this.props.position && !isNaN(this.props.position)) {\n      this.slideIndex = Number(this.props.position) + 1\n    } else {\n      this.slideIndex = 1\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keyClickFunction, false);\n    this.setState({\n      total: this.state.images.length\n    })\n\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'ArrowRight') {\n        this.plusSlides(1)\n      }\n      if (event.key === 'ArrowLeft') {\n        this.plusSlides(-1)\n      }\n    })\n\n    this.showSlides(this.slideIndex)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyClickFunction, false);\n  }\n  \n  keyClickFunction(event) {\n    event.preventDefault();\n   \n  }\n  plusSlides(n) {\n    this.slideIndex += n\n    if(this.slideIndex === 0){\n      this.slideIndex += n\n    }\n    this.showSlides(this.slideIndex)\n  }\n\n  currentSlide(n) {\n    this.slideIndex = n\n    this.showSlides(this.slideIndex)\n  }\n\n  downShowGallery() {\n    let indexTab = this.state.index\n    let images = this.state.images\n\n    let imageCurrent = images[Number(indexTab) - 1]\n    \n    try {\n      let xhr = new XMLHttpRequest()\n      xhr.open(\"GET\", imageCurrent, true)\n      xhr.responseType = 'blob'\n      xhr.onload = function(){\n        var urlCreator = window.URL || window.webkitURL\n        var imageUrl = urlCreator.createObjectURL(this.response)\n        var tag = document.createElement('a')\n        tag.href = imageUrl\n        tag.download = 'image_'+Math.floor(Date.now() / 1000)\n        document.body.appendChild(tag)\n        tag.click()\n        document.body.removeChild(tag)\n      }\n      xhr.send()\n    } catch(e) {} \n  }\n\n  showSlides(n) {\n    let total = this.state.images.length || []\n    this.slideIndex = n\n    if (n > total) {\n      this.slideIndex = 1\n    } else if (n < 0) {\n      this.slideIndex = total\n    }\n    \n    this.setState({\n      index: this.slideIndex\n    })\n  }\n\n  render() {\n    return (\n      <div className='gallery-container'>\n        <div className='number_item'>\n          <span className='number'>{this.state.index}/{this.state.total}</span>\n        </div>\n        <div className='gl-download'>\n          <span onClick={e => this.downShowGallery()} className='icon-cloud-download'></span>\n        </div>\n        <div className='gl-close'>\n          <span onClick={e => this.props.closeShowGallery()}>\n            <img className='filter_img_class' src={'./images/default/static/icon-close.svg'} alt='' /> \n          </span>\n        </div>\n        <div>\n          <div className='gl-slides gl-fade'>\n            { (this.props.type === 'video')\n                ? <div className='div_video'>\n                  <video controls className='video' key={this.state.images[this.slideIndex-1]}>\n                    <source src={this.state.images[this.slideIndex-1]} type='video/mp4' />\n                  </video>\n                </div>\n                : <img src={this.state.images[this.slideIndex-1]} className='gl-big' alt='' />\n            }\n          </div>\n\n          {(this.state.images.length > 1) && <span className='gl-prev' onClick={e => this.plusSlides(-1)}>&#10094;</span>}\n          {(this.state.images.length > 1) && <span className='gl-next' onClick={e => this.plusSlides(1)}>&#10095;</span>}\n        </div>\n        { (this.state.images.length < 5) && (<div className='gl-dot-btns'>\n            {(this.state.images.length > 0) && this.state.images.map((url_img, index) => (\n              <span key={index} className='gl-dot' onClick={e => { this.currentSlide(index + 1) }} />\n            ))}\n          </div>)\n        }\n\n      </div>\n    )\n  }\n}\n\nRxImageGallery.defaultProps = { closeShowGallery: () => { }, images: '' }\n\nexport default RxImageGallery\n","/*global translate*/\nimport { connect } from 'react-redux'\nimport React, { Component } from 'react'\nglobal.isclient && require('./rxInfoUser.css')\nconst { rxaget, stringToColour, rxChangeSlug } = global.rootRequire('classes/ulti')\nconst { checkNameUser, checkBlock } = global.rootRequire('classes/chat')\nconst rxio = global.rootRequire('classes/socket').default\nconst { chooseGroupAction, clickCall } = global.rootRequire('redux')\n\nclass RxInfoUser extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      images: [],\n      userInfo: {},\n      ownerInfo: {},\n      userClick_group: {},\n      userid:''\n    }\n  }\n\n  componentDidMount() {\n    if (rxaget(this.props, 'userInfo.id', '') !== rxaget(this.state, 'userInfo.id', '')) {\n      let userInfo = this.props.userInfo\n      let ownerInfo = this.props.ownerInfo\n      let userClick_group = this.props.userClick_group\n      let userid = this.props.ownerInfo.id\n      let partner_id = userInfo.id\n \n      this.setState({\n        userInfo: userInfo, \n        ownerInfo: ownerInfo,\n        userClick_group:userClick_group,\n        userid:userid\n      })    \n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if(this.state.userClick_group !== nextProps.userClick_group){\n      this.setState({\n        userClick_group : nextProps.userClick_group\n      })\n    }\n  }\n  downloadFile() {\n\n  }\n\n  showGalleryCurrentUser() {\n\n  }\n\n  changeTabActive() {\n\n  }\n\n  closePopupInfoUser() {\n    this.props.closePopupInfoUser()\n  }\n\n  createNewChat(partner_id, callback) {\n    const owner = rxaget(this.state, 'ownerInfo', {})\n    const params = {\n      \"type\": 3,\n      \"owner_uin\": owner.id,\n      \"name\": \"\",\n      \"avatar_url\": \"\",\n      \"occupants_uins\": [owner.id, partner_id],\n      \"sender_name\": owner.name\n    }\n    \n    rxio.createNewGroup(params, (data) => {\n      if (data && data.group) {\n        if(data.group.type === 3){\n          data.group.partner_id = partner_id  \n        }  \n        this.props.chooseGroupAction(data.group)\n        setTimeout(() => {\n          if (!callback) {\n            this.props.closePopupInfoUser()  \n          } else {\n            this.props.closePopupInfoUser()\n            callback(data.group)\n          }\n          \n        }, 500)\n      }\n    })\n  }\n\n  onClickStartCall(typeCall, partner_id) {\n    this.createNewChat(partner_id, (group) => {\n      if (group) {\n        console.log(group)\n        console.log({\n          group_id: rxaget(group, 'group_id', '' ),\n          type: rxaget(group, 'type', 0 ),\n          occupants_uins: rxaget(group, 'occupants_uins', [] )\n        })\n\n        this.props.clickCall(typeCall, {\n          group_id: rxaget(group, 'group_id', '' ),\n          type: rxaget(group, 'type', 0 ),\n          occupants_uins: rxaget(group, 'occupants_uins', [] )\n        })  \n      }        \n    })\n  }\n\n  onSubmitContact(){\n    let token = rxaget(this.state.ownerInfo, 'token', '')\n\n\n    let address_book_link = global.rxu.config.base_api_neta + '/api/address_book.json'\n    let arrContacts = [{name: checkNameUser(this.state.userInfo), phone: rxaget(this.state.userInfo, 'phone', '')}]\n    let params = { \"force\":0, \"contacts\": arrContacts, \"udid\":\"\"}\n    let headers = { 'Accept': 'application/json', 'Content-Type': 'application/json; charset=utf-8',  'TC-Token': token }\n    \n    if (params.contacts && params.contacts.length > 0 ) {\n      fetch(address_book_link, {\n        method: 'POST',\n        body: JSON.stringify(params),\n        headers: headers }).then((res) => { return res.json() })\n        .then((json) => {\n          this.props.closePopupInfoUser()\n        }).catch(er => console.log(er))\n    }\n  }\n\n  render() {\n    let userInfo = this.state.userInfo || {}\n\n    return (\n      <div className='avatarClick_rectangle'>\n        <div className='avatarClick_rectangle_1'></div>\n        <div className='avatarClick_rectangle_2_1'>\n          <div className='avatarClick_title_place'>\n            <div className='avatarClick_title'>{translate('Account information')}</div>\n            <div className='avatarClick_closeIcon' onClick={() => this.closePopupInfoUser()}>\n              <img className='icon-basic-up filter_img_class' src={'./images/default/icons/icon-basic-up.svg'} alt='' />\n            </div>\n          </div>\n          <div className='avatarClick_avatarPlace'>\n            <div className='avatarClick_avatar'  >\n              { (userInfo && userInfo.profile_url) ? \n                  <img src={`${global.rxu.config.cdn_endpoint}` + userInfo['profile_url']} alt='profile_url' className='images-static' onError={(e) => {e.target.onerror = null; e.target.src = `./images/default/static/avadefault.svg` }} /> \n                :\n                  <span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + rxaget(userInfo, 'id', '').toString() + rxaget(userInfo, 'phone', '').toString())}, #FFFFFF)` }}> {rxChangeSlug(checkNameUser(userInfo), true).slice(0, 2).toUpperCase()} </span> \n              }\n            </div>\n          </div>\n          <div className='avatarClick_userName'>\n            <div>{checkNameUser(this.state.userInfo)}</div>\n          </div>\n          {/*<div className='avatarClick_body'>\n            <div className='avatarClick_phone_place'>\n              <div className='avatarClick_info_act'>\n                <img className='icon_messenger icon_talk filter_img_class' src={'./images/default/icons/messenger.svg'} alt='' onClick={e => this.createNewChat(rxaget(userInfo, 'id', ''))}/>\n                <img className='icon_call icon_talk filter_img_class' src={'./images/default/icons/callright.svg'} alt='' onClick={(e) => this.onClickStartCall('voicecall', rxaget(userInfo, 'id', ''))}/>\n                <img className='icon_videocall icon_talk filter_img_class' src={'./images/default/icons/videocall.svg'} alt='' onClick={(e) => this.onClickStartCall('videocall', rxaget(userInfo, 'id', ''))}/>\n              </div>\n            </div>\n          </div>\n\n          <div className='avatarClick_infophone'>\n            <span className='avatarClick_infophone-txt'>{translate('Phone number')}</span>\n            <span className='avatarClick_infophone-number'>{userInfo.phone || ''}</span>\n          </div>*/}\n          <div className='ztab-more-info'>\n            <div className='ztab-more-info_phone'>\n              <span className='ztab-more-info_phone-txt'>{translate('Phone number')}</span>\n              <span className='ztab-more-info_phone_number'>{userInfo.phone || ''}</span>\n            </div>\n            {!checkBlock(this.state.userClick_group, this.state.userid)&&<div className='ztab-more-info_act '>            \n              <img className='icon32 ztab-icon-act filter_img_class' alt='' src={'./images/default/icons/messenger.svg'} onClick={(e) => this.createNewChat(rxaget(userInfo, 'id', ''))} />\n              <img className='icon32 ztab-icon-act filter_img_class' alt='' src={'./images/default/icons/callright.svg'} onClick={(e) => this.onClickStartCall('voicecall', rxaget(userInfo, 'id', ''))} />\n              <img className='videocall-icon ztab-icon-act filter_img_class' alt='' src={'./images/default/icons/videocall.svg'} onClick={(e) => this.onClickStartCall('videocall', rxaget(userInfo, 'id', ''))}/>\n            </div>}\n          </div>\n          <div className='avatarClick_addContact' onClick={e => this.onSubmitContact()}>{translate('Add a contact')}</div>\n\n        </div>\n      </div> \n\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({})\n\nconst mapDispatchToProps = {\n  chooseGroupAction,\n  clickCall\n}\n\nconst RxInfoUserWrapped = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RxInfoUser)\n\nexport default RxInfoUserWrapped\n","/*global translate*/\nimport React, { Component } from 'react'\nglobal.isclient && require('./rxModalEdit.css')\n\nlet zget = global.rxu.get\n\nclass RxModalEdit extends Component {\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n            addContactValue: {\n                phone: zget(props, 'contactInfo.phone', ''),\n                name: zget(props, 'contactInfo.name', ''),\n            },\n            flagEdit: props.flagEdit || false,\n            errorValidate:''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChangeValueContact(key, value) {\n        this.setState({ errorValidate: '', addContactValue: { ...this.state.addContactValue, [key]: value } })\n    }\n\n    onSubmit(e) {\n        const regex = new RegExp(/^(\\+84|01[2689]|09|08|03|07|05)[0-9]{8,10}$/i);\n        let errorValidate = ''\n        if (this.state.addContactValue.name.length < 1) errorValidate = translate('Name is too short')\n        else if (!regex.test(this.state.addContactValue.phone)) errorValidate = translate('Phone is invalid')\n        this.setState({ errorValidate })\n        if (!errorValidate) this.props.onSubmitContact(this.state.addContactValue)\n    }\n\n    render() {\n        return (\n            <div className='zmodal-addfriend'>\n                <div className='zmodal-addfriend-content'>\n                    <div className='zmodal-header'>\n                        <span className='zmodal-title'>{translate('Add a contact')}</span>\n                        <img className=\"icon24 zmodal-close filter_img_class\" onClick={() => this.props.onClickModalEdit()} src={'./images/default/icons/close-color.svg'} alt='' />\n                    </div>\n                    <div className='zmodal-fill'>\n                        <span className='zmodal-txt' type='text'>{translate('Full name')}</span>\n                        <input maxLength=\"30\" className='zmodal-input' placeholder={translate('Enter your full name')}\n                            value={this.state.addContactValue.name}\n                            onChange={(event) => this.onChangeValueContact('name', event.target.value)} />\n                        <span className='zmodal-txt' >{translate('Phone number')}</span>\n                        <input maxLength=\"10\" className='zmodal-input zmodal-input-phone' placeholder='0000 000 000' disabled={this.state.flagEdit}\n                            value={this.state.addContactValue.phone}\n                            onChange={(e) => this.onChangeValueContact('phone', e.target.value)} \n                        />\n\n                        <div className='chatConfig_note' style={{color:'#d5192d'}}>{this.state.errorValidate}</div>\n                    </div>\n                    <div className='zmodal-btn' onClick={() => this.onSubmit()}   >\n                        <span className='zmodal-btn-txt'  >{translate('Done')} </span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default RxModalEdit\n","import React, { Component } from 'react'\nglobal.isclient && require('./rxModalMouseRightChat.css')\n\nclass RxModalMouseRightChat extends Component {\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <div className='zmodal'>\n            </div>\n        )\n    }\n}\nexport default RxModalMouseRightChat\n","/*global translate*/\n\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport QRCode from 'qrcode.react'\n\nconst { rxaget, stringToColour, rxChangeSlug, subString } = global.rootRequire('classes/ulti')\nconst { checkNameContact, checkNameUser } = global.rootRequire('classes/chat')\nconst { chooseGroupAction, closePopup, changeStatusLoadMess, netaGroupsUpdate } = global.rootRequire('redux')\nconst RxImageGallery = global.rootRequire('components/shares/rxImageGallery').default\nconst rxio = global.rootRequire('classes/socket').default\n\nglobal.isclient && require('./rxPopup.css')\n\nclass RxGroupList extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      user: {},\n      group: {},\n      groupsNChat: [],\n      groupsNChatOrigin: [],\n      groupsNChatChecked: [],\n      flagPopup: false,\n      flagCreateGroup: false,\n      flagLeaveGroup: false,\n      flagShowGallery: false,\n      flagCreateGroupPopup: false,\n      flagChooseLeader: false,\n      flagQRCode: false,\n      nameNewGroup: '',\n      typePopup: '',\n      typeGallery: '',\n      strArrImg: '',\n      linkQRCode: '',\n      galleryPosition: 0,\n      groupImage: '',\n      chooseFileImagesStatus: false,\n      groupImageURL: '',\n    }\n    this.compareContact = this.compareContact.bind(this)\n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n    this.users = rxaget(this.props, 'user.users', {}) || {}\n  }\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // console.log('nextProps rxpopup')\n    let nextPopup = rxaget(nextProps, 'netaPopup', {}) //nextProps.netaPopup || {}\n    if (nextPopup.status) {\n      let user = rxaget(nextPopup, 'data.user', {})\n      let group = rxaget(nextPopup, 'data.group', {})\n      let flagPopup = rxaget(nextPopup, 'status', false)\n      let arrGroupsTmp = rxaget(nextPopup, 'data.groups', []).filter(o => o.id !== user.id)\n      let strArrImg = rxaget(nextPopup, 'data.arrImg', '')\n      let linkQRCode = rxaget(nextPopup, 'data', '')\n\n      let typeGallery = rxaget(nextPopup, 'data.typeGallery', '')\n      let galleryPosition = rxaget(nextPopup, 'data.galleryPosition', 0)\n\n      let flagCreateGroup = (['create_group', 'add_member'].indexOf(nextPopup.type_popup) !== -1) ? true : false\n      let flagLeaveGroup = (['leave_group'].indexOf(nextPopup.type_popup) !== -1) ? true : false\n      let flagShowGallery = (['show_gallery'].indexOf(nextPopup.type_popup) !== -1) ? true : false\n      let flagQRCode = (['create_qr'].indexOf(nextPopup.type_popup) !== -1) ? true : false\n      this.setState({\n        flagPopup: flagPopup,\n        groupsNChat: arrGroupsTmp,\n        groupsNChatOrigin: arrGroupsTmp,\n        strArrImg: strArrImg,\n        linkQRCode: linkQRCode,\n        flagCreateGroup: flagCreateGroup,\n        flagLeaveGroup: flagLeaveGroup,\n        flagShowGallery: flagShowGallery,\n        flagQRCode: flagQRCode,\n        typePopup: nextPopup.type_popup,\n        typeGallery: typeGallery,\n        galleryPosition: galleryPosition,\n        user: user,\n        group: group\n      })\n    }\n  }\n\n  onClickClosePopup() {\n    this.resetState()\n  }\n\n  onClickShowPopupCreateGroup() {\n    let flagCreateGroupPopup = this.state.flagCreateGroupPopup\n    this.setState({ flagCreateGroupPopup: !flagCreateGroupPopup })\n  }\n\n  compareContact(a, b) {\n    let userA = rxChangeSlug(checkNameUser(a, this.userid, this.props.netaauth))\n    let userB = rxChangeSlug(checkNameUser(b, this.userid, this.props.netaauth))\n\n    if (userA < userB) {\n      return -1;\n    }\n    if (userA > userB) {\n      return 1;\n    }\n    return 0;\n  }\n\n  onChangeSearchNChat(e) {\n    let value = e.target.value\n    let arrGroups\n    let statusSeachNchatValue\n\n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }\n    if (value) {\n      arrGroups = this.state.groupsNChatOrigin.filter(o => (rxChangeSlug(checkNameUser(o)).indexOf(rxChangeSlug(value)) !== -1 || rxChangeSlug(o.phone).indexOf(rxChangeSlug(value)) !== -1))\n      statusSeachNchatValue = true\n    } else {\n      arrGroups = this.state.groupsNChatOrigin\n    }\n    this.setState({\n      groupsNChat: arrGroups,\n      statusSeachNchatValue: statusSeachNchatValue,\n      searchNchatValue: value\n    }, () => {\n    })\n  }\n\n  createNewChat(user) {\n    let flagCreateGroupPopup = this.state.flagCreateGroupPopup\n    let typePopup = this.state.typePopup\n    if (flagCreateGroupPopup) {\n      let groupsNChatChecked = this.state.groupsNChatChecked\n      if (groupsNChatChecked.indexOf(user.id) === -1) {\n        groupsNChatChecked.push(user.id)\n      } else {\n        groupsNChatChecked.splice(groupsNChatChecked.indexOf(user.id), 1)\n      }\n      this.setState({ groupsNChatChecked })\n    } else {\n      if (typePopup === 'create_group') {\n        let userOwner = rxaget(this.state, 'user', {})\n        let partner_id = user.id\n        const params = {\n          'type': 3,\n          'owner_uin': userOwner.id,\n          'name': '',\n          'avatar_url': '',\n          'occupants_uins': [userOwner.id, partner_id],\n          'sender_name': userOwner.name\n        }\n        try {\n          if (this.props.netaPopup && this.props.netaPopup.status) {\n            let funcCreateGroup = this.props.netaPopup.callback\n\n            rxio.createNewGroup(params, (data) => {\n              if (data && data.group) {\n                if (data.group.type === 3) {\n                  data.group.partner_id = partner_id\n                }\n                this.props.chooseGroupAction(data.group)\n              }\n              setTimeout(() => {\n                funcCreateGroup()\n                this.resetState()\n              }, 1000)\n            })\n          }\n        } catch (e) {\n          console.log(e)\n        }\n      } else if (typePopup === 'add_member') {\n        let groupsNChatChecked = this.state.groupsNChatChecked\n        if (groupsNChatChecked.indexOf(user.id) === -1) {\n          groupsNChatChecked.push(user.id)\n        } else {\n          groupsNChatChecked.splice(groupsNChatChecked.indexOf(user.id), 1)\n        }\n        this.setState({ groupsNChatChecked })\n      } else if (typePopup === 'leave_group') {\n        let groupsNChatChecked = [user.id]\n        this.setState({ groupsNChatChecked })\n      }\n    }\n  }\n\n  addChangeNameGroup(e) {\n    const value = e.target.value\n    this.setState({ nameNewGroup: value })\n  }\n\n  onClickCreateGroup() {\n    let groupsNChatChecked = this.state.groupsNChatChecked\n    let user = rxaget(this.state, 'user', {})\n    let nameNewGroup = this.state.nameNewGroup\n    let emptyValue = ''\n    if (this.state.nameNewGroup) {\n      emptyValue = nameNewGroup.replace(/[\\s]/g, '')\n    }\n    if (emptyValue.length > 0) {\n      if (groupsNChatChecked.length === 0) {\n        alert(translate('You have not selected a member'))\n      } else {\n        const params = {\n          type: 2,\n          owner_uin: user.id,\n          name: this.state.nameNewGroup,\n          avatar_url: '',\n          occupants_uins: groupsNChatChecked,\n          sender_name: user.name\n        }\n\n        try {\n          if (this.props.netaPopup && this.props.netaPopup.status) {\n            let funcCreateGroup = this.props.netaPopup.callback\n\n            rxio.createNewGroup(params, (data) => {\n              if (data && data.group) {\n\n                let chooseFileImagesStatus = this.state.chooseFileImagesStatus\n                if (chooseFileImagesStatus) {\n                  let groupImage = this.state.groupImage\n                  this.uploadFileImages(groupImage, data.group)\n                } else {\n                  this.props.chooseGroupAction(data.group)\n                  this.props.netaGroupsUpdate(Number(data.group.group_id), data.group)\n                }\n\n              }\n              setTimeout(() => {\n                funcCreateGroup()\n                this.resetState()\n              }, 1000)\n            })\n          }\n        } catch (e) {\n          console.log(e)\n        }\n      }\n\n    } else {\n      const mess = translate('The group name can not be blank')\n      alert(mess)\n    }\n  }\n\n  onClickUpdateGroup() {\n    let groupsChecked = this.state.groupsNChatChecked\n    if (groupsChecked.length > 0) {\n      try {\n        if (this.props.netaPopup && this.props.netaPopup.status) {\n          let funcAddMember = this.props.netaPopup.callback\n          funcAddMember(groupsChecked)\n          this.resetState()\n        }\n      } catch (e) { }\n    } else {\n      alert(translate('Add Member Error'))\n    }\n  }\n\n  onClickLeaveGroup() {\n    try {\n      if (this.props.netaPopup && this.props.netaPopup.status) {\n        let funLeaveGroup = this.props.netaPopup.callback\n        let groupsNChatChecked = this.state.groupsNChatChecked\n        if (groupsNChatChecked && groupsNChatChecked.constructor === Array && groupsNChatChecked.length > 0) {\n          funLeaveGroup(groupsNChatChecked[0])\n          this.resetState()\n        } else {\n          funLeaveGroup()\n          this.resetState()\n        }\n      }\n    } catch (e) { console.log(e) }\n  }\n\n  leaveGroupBtn(type) {\n    // if (this.state.group.admin_uins) {\n    //   let admin_unis = this.state.group.admin_uins\n    //   if (!admin_unis.some(i => (this.userid.toString() !== i.toString() && this.state.group.occupants_uins.indexOf(i.toString()) >= 0))) {\n    //     this.setState({ flagChooseLeader: true })   \n    //   }\n    //   else this.leaveGroup()\n    // // }\n    // console.log('SECOND 55555')\n    // console.log(this.state.group.admin_uins, 'this.state.group.admin_uins')\n\n    if (type === 'accept') {\n      let user = this.state.user\n      let group = this.state.group\n      // console.log(group, 'group99')\n      if (rxaget(group, 'admin_uins', []).indexOf(rxaget(user, 'id', '').toString()) !== -1 && group.type !== 3) {\n        this.setState({\n          flagCreateGroup: true,\n          flagLeaveGroup: false,\n          flagChooseLeader: true\n        })\n      } else {\n        this.onClickLeaveGroup()\n      }\n    } else {\n      this.resetState()\n    }\n  }\n\n  downloadQRCode() {\n    try {\n      const timenow = Math.floor(Date.now() / 1000)\n      const canvas = document.getElementById('qrcode_id')\n      const pngUrl = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream')\n      let downloadLink = document.createElement('a')\n      downloadLink.href = pngUrl\n      downloadLink.download = \"qrcode_\" + timenow + \".png\"\n      document.body.appendChild(downloadLink)\n      downloadLink.click()\n      document.body.removeChild(downloadLink)\n    } catch (e) { }\n  }\n\n  resetState() {\n    this.setState({\n      user: {},\n      group: {},\n      groupsNChat: [],\n      groupsNChatOrigin: [],\n      groupsNChatChecked: [],\n      flagPopup: false,\n      flagCreateGroup: false,\n      flagLeaveGroup: false,\n      flagShowGallery: false,\n      flagCreateGroupPopup: false,\n      flagChooseLeader: false,\n      flagQRCode: false,\n      nameNewGroup: '',\n      typePopup: '',\n      typeGallery: '',\n      strArrImg: '',\n      linkQRCode: '',\n      galleryPosition: 0,\n      groupImageURL: '',\n      groupImage: '',\n      chooseFileImagesStatus: false,\n\n    }, () => {\n      try {\n        this.props.closePopup()\n      } catch (e) { }\n    })\n  }\n\n  closeGallery() {\n    this.resetState()\n  }\n\n  chooseFileImages(fileList) {\n    let groupImageURL = URL.createObjectURL(fileList[0])\n    this.setState({ groupImage: fileList, chooseFileImagesStatus: true, groupImageURL: groupImageURL })\n  }\n\n  uploadFileImages(fileList, groupObj) {\n    try {\n      if (fileList.length && fileList[0]) {\n        var file = fileList[0]\n        let parts = (file.name || '').split('.');\n        let ext = parts[parts.length - 1] || '';\n        if (['png', 'jpg'].indexOf(ext.toLowerCase()) >= 0) {\n          let fileSize = file.size\n          let extFilename = 'png'\n\n          let _URL = window.URL || window.webkitURL\n          let img = new Image();\n          let objectUrl = _URL.createObjectURL(file)\n\n          let dataParams = {\n            content_type: 'image/' + extFilename,\n            name: 'netalo_' + Math.floor(Date.now()),\n            public: true,\n            size: fileSize\n          }\n          let header = { 'TC-Token': this.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n          let requestOptions = {\n            method: 'POST', headers: header, body: JSON.stringify(dataParams), redirect: 'follow'\n          };\n\n          fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n            if (json && json.blod_object && json.blod_object.form_data) {\n              let dataUpload = new FormData()\n              let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n              for (let key of arrKeys) {\n                if (json.blod_object.form_data[key]) {\n                  dataUpload.append(key, json.blod_object.form_data[key])\n                }\n              }\n              dataUpload.append('file', file, file.name)\n              dataUpload.append('success_action_status', 201)\n\n              fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n                if (result.indexOf('Key') !== -1) {\n                  let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                  let strresult = result.match(patt);\n                  if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                    let key = strresult[1]\n                    if (key) {\n                      let optComplete = {\n                        method: 'PUT',\n                        headers: header,\n                        body: JSON.stringify({\n                          content_type: json.content_type, id: json.id, name: json.name, size: json.size, uid: json.uid\n                        })\n                      };\n\n                      fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                        .then(response => {\n                          if (response.status === 200) {\n                            try {\n                              img.onload = () => {\n                                _URL.revokeObjectURL(objectUrl)\n                                // const arrUsers = this.users\n                                // const user = rxaget(this.props, 'netaauth.user', {})\n                                // const objUser = arrUsers[user.id.toString()]\n                                let msg = {\n                                  group_id: Number(groupObj.group_id),\n                                  avatar_url: key,\n                                }\n                                if (msg && msg.group_id) {\n                                  if (rxio.connected) {\n                                    rxio.socket.emit(\"update_group\", msg, (data) => {\n                                      if (data && data.result === 0) {\n                                        this.props.chooseGroupAction(data.group)\n                                        this.props.netaGroupsUpdate(Number(data.group.group_id), data.group)\n                                      }\n                                    })\n                                  }\n                                }\n                              }\n                              img.src = objectUrl\n                            } catch (e) { }\n                          }\n                        }).catch(errorPut => console.log('error', errorPut));\n                    }\n                  }\n                }\n              })\n            }\n          }).catch(error => console.log('create_blob error', error))\n        } else alert(translate('The image file format is not suitable. Please select the image file as .jpg or .png'))\n      }\n    } catch (error) { console.log('upload error', error) }\n  }\n\n  render() {\n    let arrUserSelected = []\n    let contactTitle = ''\n    if (this.state.groupsNChatOrigin && this.state.groupsNChatOrigin.constructor === Array && this.state.groupsNChatOrigin.length > 0) {\n      arrUserSelected = this.state.groupsNChatOrigin.filter(ucontact => this.state.groupsNChatChecked.indexOf(ucontact.id) !== -1)\n    }\n    this.state.groupsNChat.sort(this.compareContact)\n\n    return (\n      <div>\n        {(this.state.flagPopup && !this.state.flagShowGallery) && <div className='zchat_popupscreen'>\n          <div className='zchat_popupscreen_bg'></div>\n          <div className='zchat_popupscreen_main'>\n            {this.state.flagCreateGroup && <div className='zchat_popupcenter'>\n              <div className='newgroup_rectangle_popup'>\n                <div className='popup_choose_leader_title_area'>\n                  <div className='popup_choose_leader_title'>\n                    {(this.state.typePopup === 'leave_group') ? translate('Choose leader') : (this.state.typePopup === 'add_member') ? translate('Add member') : (!this.state.flagCreateGroupPopup) ? translate(\"New message\") : translate(\"Create a group\")}\n                  </div>\n                  <div className='popup_choose_leader_btn_close'>\n                    <img className='choose_leader_icon_close filter_img_class' alt='' src={'./images/default/icons/icon-basic-up.svg'} onClick={e => this.onClickClosePopup()} />\n                  </div>\n                </div>\n\n                {this.state.flagCreateGroupPopup && <div className=\"newgroup_wrap\">\n                  <div className=\"newgroup_camera_icon_place\" onClick={(e) => { this.refs.data_image_camera.click() }}>\n                    <input type='file' id='data_image_camera' ref='data_image_camera' multiple={false} key={this.state.theInputFileKey + '_data_image_camera'}\n                      style={{ display: 'none' }}\n                      onChange={(e) => this.chooseFileImages(e.target.files)} accept=\"image/jpg,image/png,video/mp4\" />\n                    {this.state.groupImageURL.length === 0 && <div className=\"newgroup_icon_area icon_camera\" >\n                      <img className=\"newgroup_icon_search filter_img_class\" src={\"./images/default/icons/camera.svg\"} alt=\"\" />\n                    </div>}\n                    {this.state.groupImageURL.length > 0 && <img className=\"newgroup_chooseAvatar\" src={this.state.groupImageURL} alt=\"\" />}\n                  </div>\n                  <input placeholder={translate(\"Enter a group name\")} maxLength=\"30\" className=\"newgroup_place\" onChange={e => this.addChangeNameGroup(e)} value={this.state.nameNewGroup || \"\"} />\n                </div>}\n\n                <div className='popup_choose_leader_search_area'>\n                  <div className='popup_choose_leader_icon_search_area'>\n                    <img className='popup_choose_leader_icon_search filter_img_class' src={\"./images/default/icons/search-active.svg\"} alt='' />\n                  </div>\n                  <input type='search' maxLength='30' id='newgroup_search_input' placeholder={translate(\"Search\")} onChange={e => { this.onChangeSearchNChat(e) }} autoComplete='off'\n                    className={rxaget(this.props, \"themeBackgroudValue\") === \"darkTheme\"\n                      ? \"popup_choose_leader_search_input darkThemeInput\"\n                      : \"popup_choose_leader_search_input lightThemeInput\"\n                    }>\n                  </input>\n                  {/* <div className='newgroup_icon_close_area'></div> */}\n                </div>\n\n                {(!this.state.flagCreateGroupPopup && (['add_member', 'leave_group'].indexOf(this.state.typePopup) === -1)) &&\n                  <div className='create_group_chat_area_popup'>\n                    <img src={'./images/default/icons/icon-basic-new-friend_group.svg'} alt='' className='avatar_create_group_chat_popup filter_img_class' />\n                    <span className='new_group_chat_title_popup' onClick={e => this.onClickShowPopupCreateGroup()} >\n                      {translate(\"Create a group chat\")}\n                    </span>\n                  </div>\n                }\n\n                <div className='newgroup_popup_list' style={(this.state.flagCreateGroupPopup && (['add_member', 'leave_group'].indexOf(this.state.typePopup) === -1)) ? { height: '370px' } : {}}>\n                  {\n                    (arrUserSelected.length > 0 && (['leave_group'].indexOf(this.state.typePopup) === -1)) &&\n                    <div className='new_list_contacts_selected'>\n                      {\n                        arrUserSelected.map((ele, index) => (\n                          <div key={ele.id} className='item-row-selected-user'>\n                            {subString(checkNameUser(ele), 20)}\n                            <img className='item-row-selected-close' src={'./images/default/icons/icon-close.png'} alt='' onClick={e => { this.createNewChat(ele) }} />\n                          </div>))\n                      }\n                    </div>\n                  }\n                  <div className='add_member_contact_list'>\n                    {this.state.groupsNChat.map((ele, index) => {\n                      let eleContactTitle = rxChangeSlug(checkNameUser(ele, this.userid, this.props.netaauth)).slice(0, 1)\n                      if (contactTitle !== eleContactTitle) {\n                        ele.contactTitle = true\n                        contactTitle = eleContactTitle\n                      } else {\n                        ele.contactTitle = false\n                      }\n                      return (\n                        ele.id !== this.userid && (<div key={index}>\n                          {ele.contactTitle && <div className='zcontact_title'>{eleContactTitle}</div>}\n                          <div onClick={e => { this.createNewChat(ele) }} className='group_contacts_item clearfix' >\n                            <div className='zgroup_avatar'>\n                              {ele.profile_url && (\n                                <img src={global.rxu.config.cdn_endpoint + ele.profile_url} alt=''\n                                  data-id={'userava' + ele.id} className='ava-useravatar images-static'\n                                  onError={e => { e.target.onerror = null; e.target.src = global.rxu.config.get_static + ele.profile_url }}\n                                />\n                              )}\n                              {!ele.profile_url && <span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameContact(ele).slice(0, 2).toUpperCase())}, #FFFFFF)` }} >\n                                {rxChangeSlug(checkNameUser(ele)).slice(0, 2).toUpperCase()}\n                              </span>}\n                            </div>\n                            <div className='zgroup_maininfo-contact'>\n                              <div className='newgroup_userinfo_place'> {subString(checkNameUser(ele), 20)} </div>\n                              {(this.state.flagCreateGroupPopup || (['add_member', 'leave_group'].indexOf(this.state.typePopup) !== -1)) &&\n                                <div className='newgroup_checked'>\n                                  <label className='container100'>\n                                    <input className='checkmark1' type='checkbox' checked={this.state.groupsNChatChecked.indexOf(ele.id) !== -1} onChange={e => this.createNewChat(ele)} />\n                                    <span className='checkmark'></span>\n                                  </label>\n                                </div>\n                              }\n                            </div>\n                            <div className='newgroup_divider'></div>\n                          </div>\n                        </div>\n                        )\n                      )\n                    })}\n                  </div>\n                </div>\n\n                {\n                  this.state.flagCreateGroupPopup &&\n                  <div className='create-newgroup-row'>\n                    <div className='create-newgroup-btn' onClick={e => this.onClickCreateGroup()}>\n                      {translate(\"Create a group\")}\n                    </div>\n                  </div>\n                }\n                {\n                  (this.state.typePopup === 'add_member') &&\n                  <div className='create-newgroup-row'>\n                    <span className='create-newgroup-btn' onClick={() => this.onClickUpdateGroup()}>\n                      {translate('Add member')}\n                    </span>\n                  </div>}\n                {\n                  (this.state.typePopup === 'leave_group') &&\n                  <div className='create-newgroup-row'>\n                    <span className='create-newgroup-btn' onClick={() => this.onClickLeaveGroup()}>\n                      {translate('Leave group')}\n                    </span>\n                  </div>\n                }\n              </div>\n            </div>}\n\n            {/* Start RỜI KHỎI NHÓM  */}\n            {this.state.flagLeaveGroup && <div className='popup_leave_group_account'>\n              <div className='popup_leave_group_title'>{(rxaget(this.state.group, 'delete_conversation')) ? translate('Delete Conversation') : translate('Leave group')}</div>\n              <div className='popup_leave_group_body'>{(rxaget(this.state.group, 'delete_conversation')) ? translate('Are you sure you want to delete this conversation?') : translate('Are you sure you want to leave the group? After leaving the group, you will not be able to read this group news')}</div>\n              <div className='leave_group_btn_area'>\n                <div className='leave_group_btn'>\n                  <div className='leave_group_cancel_btn' onClick={e => this.leaveGroupBtn('cancel')}>{translate('Cancel')}</div>\n                </div>\n                <div className='delete_group_btn'>\n                  <div className='delete_group_accept_btn' onClick={e => this.leaveGroupBtn('accept')}>{(rxaget(this.state.group, 'delete_conversation')) ? translate('Delete Conversation') : translate('Leave group')}</div>\n                </div>\n              </div>\n            </div>}\n            {/* End RỜI KHỎI NHÓM  */}\n\n            {this.state.flagQRCode && <div className='zchat_popupcenter'>\n              <div className='popup_qrcode_container'>\n                <div className='popup_choose_leader_title_area'>\n                  <div className='popup_choose_leader_title'>\n                    {translate('Group QR code')}\n                  </div>\n                  <div className='popup_choose_leader_btn_close'>\n                    <img className='choose_leader_icon_close filter_img_class' alt='' src={'./images/default/icons/icon-basic-up.svg'} onClick={e => this.onClickClosePopup()} />\n                  </div>\n                </div>\n                <div className='popup_qrcode_box'>\n                  <QRCode id=\"qrcode_id\" value={this.state.linkQRCode} size={180} />\n                </div>\n                <div className='leave_group_btn_area'>\n                  <div className='download_qr_code' onClick={e => this.downloadQRCode()}>{translate('Download QR')}</div>\n                </div>\n              </div>\n            </div>}\n\n          </div>\n        </div>}\n\n        {(this.state.flagPopup && this.state.flagShowGallery) && <RxImageGallery images={this.state.strArrImg} closeShowGallery={() => this.closeGallery()} position={this.state.galleryPosition} type={this.state.typeGallery} />}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  netaPopup: state.netaPopup,\n  netaauth: state.netaauth,\n  user: state.user,\n  themeBackgroudValue: state.themeBackgroudValue,\n})\n\nconst mapDispatchToProps = {\n  closePopup,\n  changeStatusLoadMess,\n  chooseGroupAction,\n  netaGroupsUpdate\n}\n\nconst ComponentGroupListW = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RxGroupList)\n\nexport default ComponentGroupListW\n","/* global translate */ \nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nglobal.isclient && require('./rxSearchBox.css')\nconst { rxaget, rxChangeSlug, rxChangeSlugSearch , sortArrObj, stringToColour  } = global.rootRequire('classes/ulti')\nconst { netaBlobsUpdate,chooseGroupAction, setComp, updateRecentSearchGroups } = global.rootRequire('redux')\nconst { checkNameGroup, checkNameUser } = global.rootRequire('classes/chat')\nconst { rxgetLocal } = global.rootRequire('classes/request')\nconst rxio = global.rootRequire('classes/socket').default\n\nclass rxSearchBox extends React.PureComponent {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      groups: rxaget(this.props, 'groups', {}),\n      groups_origin: rxaget(this.props, 'groups', {}),\n      group_id: rxaget(this.props, 'rxgroup.groupid', ''),\n      group: rxaget(this.props, 'rxgroup.group', {}),\n      rxgroup: rxaget(this.props, 'rxgroup', {}),\n      groupsNChatOrigin: rxaget(this.props, 'groupsNChatOrigin', {}),\n      searchValue: '',\n      groupsSearchArr: [],\n      groupsSearchArrDisplay: [],\n      groupsSearchBoxClickStatus: rxaget(this.props, 'groupsSearchBoxClickStatus', {}),\n      checkSearchValue_IsNumeber: false,\n      zgroup_contact_maxHeight: '224px',\n      recentSearchGroups: [],\n      recentContactGroups: []/*rxaget(this.props, 'groups', {})*/,\n      arrPhoneContact: [],   \n      arrPhoneContactDisplay: [],   \n      countContact: 0,\n      pageActive:rxaget(this.props, 'pageActive', ''),\n    }\n    \n    this.users = rxaget(this.props, 'user.users', {}) || {}\n    this.token = rxaget(this.props, 'netaauth.user.token', '')\n    this.userid = rxaget(this.props, 'netaauth.user.id', '')\n    this.mouseClickFunction = this.mouseClickFunction.bind(this);\n    this.state.recentSearchGroups = this.getRecentSearchGroups()\n\n    this.checkImage = {}\n    const timenow = Math.floor(Date.now() / 1000)\n    let checkImageObj = rxaget(this.props, 'netaBlobs.data', {}) || {}\n    if (checkImageObj && typeof (checkImageObj) === \"object\" && Object.keys(checkImageObj).length > 0) {\n      for (let keyImg of Object.keys(checkImageObj)) {\n        let created_at = rxaget(checkImageObj[keyImg], 'created_at', 0)\n        if ((timenow - created_at) < 43200) {\n          this.checkImage[keyImg] = checkImageObj[keyImg]\n        }\n      }\n    }\n\n    let groups = this.props.groups\n    let groupsTmp \n    if(groups) {\n      groupsTmp = rxaget(this.props, 'groups', {}).filter(o => o.type === 3) \n    }else{\n      try {\n        const groupneta = rxaget(this.props, 'netaGroups', {})\n        const arrContacts = []\n        const arrGroups = []\n        if (groupneta && groupneta.groups) {\n          for (const idgroup of Object.keys(groupneta.groups)) {\n            if (groupneta.groups[idgroup]) {\n              let ogroup = groupneta.groups[idgroup]\n              ogroup['group_fullname'] = checkNameGroup(ogroup, this.users, this.userid)\n              if (ogroup && (ogroup.type === 3 || ogroup.type === 5) && !ogroup.avatar_url && rxaget(ogroup, 'occupants_uins', []).length === 2) {\n                const arrUins = rxaget(ogroup, 'occupants_uins', [])\n                ogroup['partner_id'] = (arrUins[0].toString() === this.userid.toString()) ? arrUins[1] : arrUins[0]\n                if(ogroup.type === 3 ){\n                  arrContacts.push(ogroup)  \n                }                \n              }\n              arrGroups.push(ogroup)\n            }\n          }\n        }\n        groupsTmp = arrContacts\n        this.state.groups = sortArrObj(arrGroups, 'last_message.created_at', 'desc')\n      } catch (e) { console.log(e) }\n    }\n    \n\n    let contactsUsers = this.props.groupsNChatOrigin\n    if(!contactsUsers){\n      contactsUsers = []\n      if (this.users && Object.keys(this.users).length > 0) {\n        for (const userid of Object.keys(this.users)) {\n          if (userid !== this.userid) {\n            contactsUsers.push(this.users[userid])\n          }\n        }\n      }\n    }  \n\n    this.state.groupsNChatOrigin = contactsUsers\n\n    ////\n    let contactGroupsTmp = sortArrObj(groupsTmp, 'last_message.created_at', 'desc')\n    this.state.recentContactGroups = contactGroupsTmp\n    this.state.recentContactGroupsDisplay = contactGroupsTmp.slice(0,10)\n\n\n  }\n\n  componentDidMount() {\n\n    this.setCursorSearchBox()\n    document.addEventListener(\"click\", this.mouseClickFunction, true);\n\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    \n  }\n  setCursorSearchBox() {\n    let chatDiv = document.getElementById('zleft_search_place')\n    if(chatDiv){      \n      chatDiv.focus() \n      chatDiv.select()\n    }     \n  }\n\n  componentWillUnmount() {    \n    document.removeEventListener(\"click\", this.mouseClickFunction, false);\n    this.setState = (state,callback)=>{\n      return;\n    };\n  }\n\n  onClickAddContact(e){\n    const pageActive = this.state.pageActive    \n    if(pageActive === 'contactPage'){\n      this.props.onClickAddContact()\n    }\n  }\n  \n  mouseClickFunction(event) {    \n    let groupsSearchBoxClickStatus = this.state.groupsSearchBoxClickStatus\n    let searchValue = this.state.searchValue\n    if(groupsSearchBoxClickStatus === true || searchValue.length > 0){\n      let divNameClass = event.target.className\n      let divClickFlag = false\n      const divNameClassArr = [ 'zleft_search_place darkThemeInput',\n                                'zleft_search_place lightThemeInput',\n                                'icon32_white','new_chat','ava-span-1',\n                                'pavith_nadal',\n                                'zgroupitem clearfix',\n                                'ava-usergroup images-static',\n                                'zgroup_name zgroup_name_margin',\n                                'zgroup_maininfo']\n      if (divNameClassArr.indexOf(divNameClass) !== -1) {\n        divClickFlag = true\n      }\n      if (divClickFlag === false) {\n        // this.setState({ groupsSearchBoxClickStatus: false,searchValue:'' })\n        this.props.searchBoxvalue(false,'')\n        document.removeEventListener(\"click\", this.mouseClickFunction, true);\n      }\n    }\n\n  }\n\n \n  getRecentSearchGroups() {\n    try {\n      const netaRecentSearchGroups = global.rxu.json(rxgetLocal('netaRecentSearchGroups'), {}) || {}\n      const recentSearchGroupsArr = []\n      let recentSearchGroups = []\n      for (const idgroup of Object.keys(netaRecentSearchGroups.groups)) {\n        if (netaRecentSearchGroups.groups[idgroup]) {\n          let ogroup = netaRecentSearchGroups.groups[idgroup]\n          ogroup['group_fullname'] = checkNameGroup(ogroup, this.users, this.userid)\n          if (ogroup && (ogroup.type === 3 || ogroup.type === 5) && !ogroup.avatar_url && rxaget(ogroup, 'occupants_uins', []).length === 2) {\n            const arrUins = rxaget(ogroup, 'occupants_uins', [])\n            ogroup['partner_id'] = (arrUins[0].toString() === this.userid.toString()) ? arrUins[1] : arrUins[0]\n          }\n          recentSearchGroupsArr.push(ogroup)\n        }\n      }\n      recentSearchGroups = sortArrObj(recentSearchGroupsArr, 'timeSearch', 'desc').slice(0,20)\n\n      return recentSearchGroups\n    } catch (e) { }\n  }\n\n  groupsSearchBoxClick() {\n    if (this.state.searchValue.length === 0) {\n      let recentSearchGroups = this.getRecentSearchGroups()\n      this.props.searchBoxvalue(true,'')\n      this.setState({\n        groupsSearchBoxClickStatus: true,\n        recentSearchGroups: recentSearchGroups\n      })\n    }\n  }\n\n  async onChangeSearch(e) {\n    const _usersinfo = rxaget(global.rxu.json(rxgetLocal('rxusers'), {}), 'users')\n    let value = e.target.value\n    let groupsSearchBoxClickStatus\n    let arrGroups = []\n    let arrPhoneContact = []\n    let arrPhoneContactId = []\n    let isNumberStatus = false\n    let zgroup_contact_maxHeight = '224px'\n\n    if (value.startsWith('0')) {\n      value = value.replace(value.charAt(0), '+84')\n    }\n    if (value.length > 0) {\n      groupsSearchBoxClickStatus = false\n      for (let groupObj of this.state.groupsNChatOrigin) {\n        let nameContact = checkNameUser(groupObj)\n        if (rxaget(groupObj, 'id', '') !== this.userid) {\n          if (!isNaN(value) && groupObj.phone.indexOf(value) !== -1) {\n            arrPhoneContact.push(groupObj)\n            arrPhoneContactId.push(String(groupObj.id))\n          }\n          if (isNaN(value) && rxChangeSlugSearch(nameContact).indexOf(rxChangeSlugSearch(value)) !== -1) {\n            arrPhoneContact.push(groupObj)\n            arrPhoneContactId.push(String(groupObj.id))\n          }\n        }\n\n      }\n      arrGroups = this.state.groups.filter(o => {\n        const userId = rxaget(o.occupants_uins.filter((id) => (id !== rxaget(this.props, 'netaauth.user.id'))), [0])\n        const uname_info = rxaget(_usersinfo, [userId], translate('Stranger'))        \n        try {\n          if (o.group_fullname && rxChangeSlugSearch(o.group_fullname) && (rxChangeSlugSearch(o.group_fullname).indexOf(rxChangeSlugSearch(value)) !== -1 || (rxChangeSlugSearch(rxaget(uname_info, 'phone', '')).indexOf(rxChangeSlugSearch(value)) !== -1 && (o.type === 3)))) {            \n            return true\n          } else {\n              for(let i = 0; i < o.occupants_uins.length; i++){\n                if(arrPhoneContactId.indexOf(o.occupants_uins[i]) !== -1 ){\n                  return true\n                }\n              }\n            return false\n          }\n        } catch (e) {\n          console.log(e)\n        }\n      })\n\n\n    } else {\n      groupsSearchBoxClickStatus = true\n      arrGroups = this.state.groups.filter(o => rxChangeSlugSearch(o.group_fullname).indexOf(rxChangeSlugSearch(value)) !== -1)\n\n    }\n    if (!isNaN(value)) {\n      isNumberStatus = true\n      zgroup_contact_maxHeight = '100%'\n    }\n\n    if (arrPhoneContact.length === 0) {\n      let jsonUser = await this.searchPhone(value)\n      if (jsonUser && rxaget(jsonUser, 'Id', '') !== this.userid) {\n        arrPhoneContact.push(jsonUser)\n      }\n    }\n    let arrPhoneContactDisplay = arrPhoneContact.slice(0,20)\n    let arrSearchGroups = arrGroups.filter(o => o.type !== 3) \n    let groupsSearchArrDisplay = arrSearchGroups.slice(0,20)\n    \n    this.props.searchBoxvalue(groupsSearchBoxClickStatus,value)\n    this.setState({\n      groupsSearchArr: arrSearchGroups,\n      groupsSearchArrDisplay: groupsSearchArrDisplay,\n      searchValue: value,\n      groupsSearchBoxClickStatus: groupsSearchBoxClickStatus,\n      checkSearchValue_IsNumeber: isNumberStatus,\n      zgroup_contact_maxHeight: zgroup_contact_maxHeight,\n      arrPhoneContact: arrPhoneContact,\n      arrPhoneContactDisplay: arrPhoneContactDisplay,\n    })\n  }\n\n  async searchPhone(vPhone) {\n    vPhone = vPhone.replace(\"+\", \"\")\n    let prefixes = [\"0084\", \"084\", \"84\", \"0\"]\n    for (let iChar in prefixes) {\n      let jChar = prefixes.length - iChar\n      let phoneSub = vPhone.substring(0, jChar)\n      if (phoneSub === prefixes[iChar]) {\n        vPhone = vPhone.replace(prefixes[iChar], \"0\")\n        break\n      }\n    }\n    let phoneRegx = /^\\+?([0-9]{2})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/\n    if (vPhone.match(phoneRegx)) {\n      const api_get_phone = global.rxu.config.get_phone\n      const res = await fetch(api_get_phone + '?phone=' + vPhone, { method: 'GET', headers: { Accept: 'application/json', 'TC-Token': this.token, Connection: 'Keep-Alive', 'Accept-Encoding': 'gzip' }, body: null })\n      try {\n        let json = await res.json()\n        if (json && json.Id) {\n          return json\n        } else {\n          return null\n        }\n      } catch (e) {\n        return null\n      }\n      console.log('Số điện thoại của bạn hợp lệ!')\n    } else {\n      return null\n    }\n  }\n\n  chooseGroup(group) {\n    this.props.searchBox_chooseGroup(group)\n    this.props.searchBoxvalue(false,'')        \n    this.setState({groupsSearchBoxClickStatus: false,searchValue:'' })\n    let timeSeach = Date.now()\n    this.props.updateRecentSearchGroups(group.group_id, group, timeSeach)\n  }\n  createNewChat(partner_id) {\n    let userOwner = rxaget(this.props, 'netaauth.user', {})\n    const params = {\n      'type': 3,\n      'owner_uin': userOwner.id,\n      'name': '',\n      'avatar_url': '',\n      'occupants_uins': [userOwner.id,partner_id],\n      'sender_name': userOwner.name\n    }\n    \n    try {\n      if (partner_id) {\n        try {\n          rxio.createNewGroup(params, (data) => {\n            if (data && data.group) {\n              if (data.group.type === 3) {\n                data.group.partner_id = partner_id\n              }\n              this.props.chooseGroupAction(data.group)   \n              this.chooseGroup(data.group)                         \n            }\n          })\n        } catch(e1) {\n        }\n      }\n    } catch(e) {\n    }  \n  }\n  chooseContact(contact){   \n    if(this.state.pageActive==='contactPage'){\n      this.props.setComp('chat')  \n    }\n    this.createNewChat(contact.id)\n    this.props.searchBoxvalue(false,'')\n    // this.setState({groupsSearchBoxClickStatus: false,searchValue:'' })\n\n  }\n\n  createNewChatGroup() {\n   this.props.createNewChatGroup()\n  }\n  disableDrop = event => {\n    event.preventDefault();\n  }\n  scrollRecentContactList(e){\n    const container = document.getElementById('csearch_recentContactList')\n\n    if(container && (container.scrollLeft >= 300)){\n      let groupsDisplay = this.state.recentContactGroupsDisplay      \n      let index = groupsDisplay.length\n      let groupsArr = this.state.recentContactGroups.slice(index,index + 10)\n\n      groupsDisplay = [...groupsDisplay, ...groupsArr]\n      this.setState({recentContactGroupsDisplay:groupsDisplay})      \n    }\n  }\n  scrollPhoneContactList(e){\n    const container = document.getElementById('csearch_phone_contact')\n\n    if(container && (container.scrollTop + container.offsetHeight >= container.scrollHeight - 360)){\n      let groupsDisplay = this.state.arrPhoneContactDisplay      \n      let index = groupsDisplay.length\n      let groupsArr = this.state.arrPhoneContact.slice(index,index + 20)\n\n      groupsDisplay = [...groupsDisplay, ...groupsArr]\n      this.setState({arrPhoneContactDisplay:groupsDisplay})      \n    }\n  }\n  scrollgroupsSearchList(e){\n    const container = document.getElementById('csearch_groupsSearch')\n\n    if(container && (container.scrollTop + container.offsetHeight >= container.scrollHeight - 360)){\n      let groupsDisplay = this.state.groupsSearchArrDisplay      \n      let index = groupsDisplay.length\n      let groupsArr = this.state.groupsSearchArr.slice(index,index + 20)\n\n      groupsDisplay = [...groupsDisplay, ...groupsArr]\n      this.setState({groupsSearchArrDisplay:groupsDisplay})      \n    }\n  }\n\n  addColorToName(name){\n\n    let result =''\n    let searchValue = this.state.searchValue    \n    \n    RegExp.escape = function(s) {\n      return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    };\n    \n    if((searchValue.search(/[\\[\\]\\\\.?*+()]/) !== -1)){\n      searchValue = new RegExp(RegExp.escape(searchValue), \"i\")\n    }\n    \n    if(/*!(searchValue.search(/[\\[\\]\\\\.?*+()]/) !== -1) && */isNaN(searchValue)){\n      let regEx = new RegExp(searchValue, \"ig\")\n      let nameArr = name.split(regEx)\n      if(name.match(regEx)){\n        for(let i = 0; i < nameArr.length; i++){\n          if(i === nameArr.length -1){\n            result += nameArr[i]\n          }else{\n            let replaceValue = name.match(regEx)[i]\n            result += nameArr[i] + `<span class = 'string-theme-color'>${replaceValue}</span>` //= name.replace(replaceValue, `<span class = 'string-theme-color'>${replaceValue}</span>`);  \n          }        \n        }  \n      }else{\n        result = name\n      }\n    }else{\n      result = name\n    }\n\n    return result\n  }\n  render () {\n    let recentContactGroupsDisplay = this.state.recentContactGroupsDisplay\n    \n    let searchBoxHeight = '100%'\n    let searchBox_padding= '0px'\n    if(this.state.groupsSearchBoxClickStatus === false && this.state.searchValue.length === 0 ){\n      searchBoxHeight='0px'\n      searchBox_padding='50px'\n    }\n    const linkava = global.rxu.config.get_avatar  \n    return (\n      <div className='search_contain' style={{height:searchBoxHeight,'paddingBottom':searchBox_padding}}>\n        <div className='zleft_searchwrap'>\n          <div className='icon_basic_search_area'>\n            <img className='icon_basic_search filter_img_class'  src={'./images/default/icons/search-active.svg'} alt=''/>\n          </div>\n\n          <input id ='zleft_search_place' type='search' maxLength='30' placeholder={translate('Search')} className={rxaget(this.props, 'themeBackgroudValue') === 'darkTheme' ? 'zleft_search_place darkThemeInput':'zleft_search_place lightThemeInput'}  onChange={e => { this.onChangeSearch(e) }} onClick={e => {this.groupsSearchBoxClick()}} onDrop={this.disableDrop}></input>\n\n          <div className='dropdown'>\n            <div className='zleft_edit' onClick={ e => {this.onClickAddContact(e)}} >\n              <img className='icon32 filter_img_class' src={'./images/default/icons/edit.svg'} alt=''/>\n              <img className='icon32_white' src={'./images/default/icons/edit40x40.svg'} alt=''/>\n            </div>\n            {(this.state.pageActive==='chatPage') &&\n              <div className='dropdown-content'>\n                <div className='rectangle_1827'>\n                  <div >\n                    <img  className='filter_img_class' src={'./images/default/icons/icon-basic-new-friend_group.svg'} alt=''/>\n                    <span className='new_chat' onClick={e => { this.createNewChatGroup() }} >\n                      {translate('New Group Chat')}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n\n        </div>\n        <div className={this.state.groupsSearchBoxClickStatus === true && recentContactGroupsDisplay && recentContactGroupsDisplay.length > 0 ? 'rectangle_1828':'rectangle_1828_hiden'}>\n          <div className='searchbox-group-title'>\n            {translate('Recent contact')} \n          </div>      \n        </div>\n        <div className={this.state.groupsSearchBoxClickStatus === true && recentContactGroupsDisplay && recentContactGroupsDisplay.length > 0 ? 'rectangle_1512':'rectangle_1512_hiden'}\n            id = 'csearch_recentContactList'\n            onScroll={e => this.scrollRecentContactList(e)}\n        >\n          <div  className='scrollmenu' >\n            { recentContactGroupsDisplay && recentContactGroupsDisplay.length > 0 ?\n              recentContactGroupsDisplay.map((ele, index) =>{\n              return  <div className={'scrollmenu_item'} key={index} onClick={e => { this.chooseGroup(ele) }}>\n                  <ul className='ul-item'>\n                    <li className='li-item'>\n                    <div className='menu_item' >\n                      {ele.avatar_url \n                        ? \n                        <img src={global.rxu.config.get_static + ele.avatar_url} alt='avatar_url' className='ava-span-1'\n                        onError={(e) => { e.target.style.display = 'none' }} /> \n                        :\n                        (this.users[ele.partner_id] && this.users[ele.partner_id]['profile_url'] \n                          ? <img src={`${global.rxu.config.cdn_endpoint}` + this.users[ele.partner_id]['profile_url']} alt='profile_url' data-id={'userava' + ele.partner_id} className='ava-span-1' \n                          onError={(e) => {e.target.onerror = null; e.target.src = `${global.rxu.config.get_static}` + this.users[ele.partner_id]['profile_url'] }} /> \n                           : this.checkImage[linkava + ele.partner_id] && <img src={this.checkImage[linkava + ele.partner_id]['link']} alt='linkava' className='ava-span-1' onError={(e) => { e.target.style.display = 'none' }} />\n                        )\n                      }\n                      {\n                        !(ele.avatar_url || (this.users[ele.partner_id] && this.users[ele.partner_id]['profile_url']) )\n                        &&<span className='ava-span-1' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + rxaget(ele, 'group_id', '').slice(7,8) + rxaget(ele, 'group_fullname', '').slice(0, 1))}, #FFFFFF)` }}>\n                          {rxChangeSlug(rxaget(ele, 'group_fullname', ''), true).slice(0, 2).toUpperCase()}\n                        </span>  \n                      }\n                    </div>\n                    </li>\n                    <li >\n                      <div className='pavith_nadal'>{rxaget(ele, 'group_fullname', '')}\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              })\n              :<div></div>\n            }     \n          </div>\n        </div>\n        <div className={this.state.groupsSearchBoxClickStatus === true  ? 'rectangle_1829':'rectangle_1829_hiden'}>\n          <div className='searchbox-group-title'>\n            {translate('Recent search')}\n          </div>\n        </div>\n        { \n          this.state.arrPhoneContactDisplay.length > 0 && <div className={this.state.groupsSearchBoxClickStatus === false && this.state.searchValue.length > 0 && this.state.checkSearchValue_IsNumeber === false ? 'rectangle_1828':'rectangle_1828_hiden'}>\n            <div className='searchbox-group-title'>\n              {translate('CONTACT')} \n            </div>      \n          </div>\n        }\n        <div className = {this.state.groupsSearchBoxClickStatus === false && this.state.searchValue.length > 0 ?  'rectangle_1512_contact':'rectangle_1512_hiden'} \n            style = {{'maxHeight':this.state.zgroup_contact_maxHeight}}\n            id = 'csearch_phone_contact'\n            onScroll={e => this.scrollPhoneContactList(e)}\n        >\n          { this.state.arrPhoneContactDisplay.map((ele, index) => {\n            let nameUserInfo = checkNameUser(ele)\n            return <div className='zgroupitem clearfix' key={index} onClick={e => { this.chooseContact(ele) }}>             \n              <div className='zgroup_avatar'>                      \n                { (ele && ele.profile_url) ? \n                    <img src={`${global.rxu.config.cdn_endpoint}` + ele['profile_url']} alt='profile_url' className='ava-usergroup images-static' onError={(e) => {e.target.onerror = null; e.target.src = `./images/default/static/avadefault.svg` }} /> \n                  :\n                    <span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + rxaget(ele, 'id', '').toString() + rxaget(ele, 'phone', '').toString())}, #FFFFFF)` }}> {rxChangeSlug(nameUserInfo, true).slice(0, 2).toUpperCase()} </span> \n                }\n              </div>                \n              \n              <div className='zgroup_maininfo'>                                  \n                <div className='zgroup_name zgroup_name_margin' dangerouslySetInnerHTML={{ __html: this.addColorToName(nameUserInfo) }}></div>\n                <div className='divider_area'></div>\n              </div>\n            </div>\n          })}\n        </div>\n        <div className={this.state.groupsSearchBoxClickStatus === false && this.state.searchValue.length > 0 && this.state.checkSearchValue_IsNumeber === false ? 'rectangle_1829':'rectangle_1829_hiden'}>\n          <div className='searchbox-group-title'>\n            {translate('GROUP')}\n          </div>\n        </div>\n        <div className={this.state.groupsSearchBoxClickStatus === false && this.state.searchValue.length === 0 ?'searchbox_contactlist_hiden':'searchbox_contactlist'}             \n            id = 'csearch_groupsSearch'\n            onScroll={e => this.scrollgroupsSearchList(e)}\n        >\n          {this.state.groupsSearchBoxClickStatus === true && <div>\n            { this.state.recentSearchGroups?\n              this.state.recentSearchGroups.map((ele, index) =>{\n                return(<div className='zgroupitem clearfix' key={index} onClick={e => { this.chooseGroup(ele) }} >             \n                  <div className='zgroup_avatar'>                      \n                    {ele.avatar_url \n                      ? \n                      <img src={global.rxu.config.get_static + ele.avatar_url} alt='avatar_url' className='ava-group images-static'\n                      onError={(e) => { e.target.style.display = 'none' }} /> \n                      :\n                      (this.users[ele.partner_id] && this.users[ele.partner_id]['profile_url'] \n                        ? <img src={`${global.rxu.config.cdn_endpoint}` + this.users[ele.partner_id]['profile_url']} alt='profile_url' data-id={'userava' + ele.partner_id} className='ava-usergroup images-static' \n                        onError={(e) => {e.target.onerror = null; e.target.src = `${global.rxu.config.get_static}` + this.users[ele.partner_id]['profile_url'] }} /> \n                         : this.checkImage[linkava + ele.partner_id] && <img src={this.checkImage[linkava + ele.partner_id]['link']} alt='linkava' className='ava-usergroup images-static' onError={(e) => { e.target.style.display = 'none' }} />\n                      )\n                    }\n                    {\n                      !(ele.avatar_url || (this.users[ele.partner_id] && this.users[ele.partner_id]['profile_url']) )\n                      &&<span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + rxaget(ele, 'group_id', '').slice(7,8) + rxaget(ele, 'group_fullname', '').slice(0, 1))}, #FFFFFF)` }}>\n                        {rxChangeSlug(rxaget(ele, 'group_fullname', ''), true).slice(0, 2).toUpperCase()}\n                      </span>  \n                    }\n                  </div>                \n                  <div className='zgroup_maininfo'>                                  \n                    <div className='zgroup_name zgroup_name_margin'>{rxaget(ele, 'group_fullname', '')}</div>\n                    <div className='divider_area'></div>\n                  </div>\n                </div>)\n              })\n              :<div></div>\n            }          \n          </div>}\n          {this.state.groupsSearchBoxClickStatus === false && this.state.searchValue.length > 0 && this.state.checkSearchValue_IsNumeber === false && <div>\n            { this.state.groupsSearchArrDisplay.length > 0 ? (\n                this.state.groupsSearchArrDisplay.map((ele, index) =>{\n                  return(<div className='zgroupitem clearfix' key={index} onClick={e => { this.chooseGroup(ele) }} >             \n                    <div className='zgroup_avatar'>                      \n                      {ele.avatar_url \n                        ? \n                        <img src={global.rxu.config.get_static + ele.avatar_url} alt='avatar_url' className='ava-group images-static'\n                        onError={(e) => { e.target.style.display = 'none' }} /> \n                        :\n                        (this.users[ele.partner_id] && this.users[ele.partner_id]['profile_url'] \n                          ? <img src={`${global.rxu.config.cdn_endpoint}` + this.users[ele.partner_id]['profile_url']} alt='profile_url' data-id={'userava' + ele.partner_id} className='ava-usergroup images-static' \n                          onError={(e) => {e.target.onerror = null; e.target.src = `${global.rxu.config.get_static}` + this.users[ele.partner_id]['profile_url'] }} /> \n                           : this.checkImage[linkava + ele.partner_id] && <img src={this.checkImage[linkava + ele.partner_id]['link']} alt='linkava' className='ava-usergroup images-static' onError={(e) => { e.target.style.display = 'none' }} />\n                        )\n                      }\n                      {\n                        !(ele.avatar_url || (this.users[ele.partner_id] && this.users[ele.partner_id]['profile_url']) )\n                        &&<span className='ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + rxaget(ele, 'group_id', '').slice(7,8) + rxaget(ele, 'group_fullname', '').slice(0, 1))}, #FFFFFF)` }}>\n                          {rxChangeSlug(rxaget(ele, 'group_fullname', ''), true).slice(0, 2).toUpperCase()}\n                        </span>  \n                      }\n                      \n\n                    </div>                \n                    \n                    <div className='zgroup_maininfo'>                                  \n                      <div className='zgroup_name zgroup_name_margin' dangerouslySetInnerHTML={{ __html: this.addColorToName(rxaget(ele, 'group_fullname', '')) }}></div>\n                      <div className='divider_area'></div>\n                    </div>\n                  </div>)\n                })\n              ) : (\n                <div className='zgroup-emty'>                \n                  <div className='zgroup-emty_text' >\n\n                  </div>\n                </div>\n              )\n            }\n          </div>}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  themeBackgroudValue: state.themeBackgroudValue,\n  user: state.user,\n  netaauth: state.netaauth,\n  rxgroup: state.rxgroup,\n  netaBlobs: state.netaBlobs,  \n  netaGroups: state.netaGroups,\n})\n\nconst mapDispatchToProps = {\n  netaBlobsUpdate,\n  chooseGroupAction,\n  setComp,\n  updateRecentSearchGroups\n\n}\n\nconst rxSearchBox_ = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(rxSearchBox)\n\nexport default rxSearchBox_","import React, { Component } from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport './rxSelectCustom.css';\n\nconst {rxChangeSlug} = global.rootRequire('classes/ulti')\n\nlet zget = global.rxu.get\n\nclass SelectCustom extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      defaultTitle: '',\n      idCountry: '',\n      valueSearch: '',\n      isOpen: false\n    }\n\n    this.wrapperRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleSelect = (sportTitle) => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n      defaultTitle: sportTitle.CountryCode,\n      valueSearch: '',\n      idCountry: sportTitle.Id\n    }))\n    this.props.changeCountryCode(sportTitle.CountryCode)\n  }\n\n  handleOpen = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }))\n  }\n\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n      // this.handleSelect();\n      this.setState({isOpen: false})\n    }\n  }\n\n  searchCountryCode(e) {\n    this.setState({valueSearch: e.target.value})\n  }\n\n  Row = ({ index, style }) => {\n    let dataArr = this.filterSearch(this.props.data)\n    \n    const countryObj = dataArr[index] || {}\n    \n    return (<div style={style}>\n      <div key={index} onClick={() => this.handleSelect(countryObj)} className='select-item'>\n        <span className='select-icon'><img className='select-logo-country' alt='' src={zget(countryObj, 'Country.Logo', '')} /></span>\n        <span className='select-title'>{zget(countryObj, 'Country.Name', '')}</span>\n        <span className='select-country-code'>+{zget(countryObj, 'CountryCode', '')}</span>\n      </div>\n    </div>)\n  }\n\n  filterSearch(data) {\n    let dataTmp = []\n    try {\n      dataTmp = data.filter(o => (rxChangeSlug(zget(o, 'Country.Name', '')).indexOf(rxChangeSlug(this.state.valueSearch)) !== -1 || zget(o, 'CountryCode', '').toString().indexOf(this.state.valueSearch) !== -1))  \n    } catch(e) {}\n    \n    return dataTmp\n  }\n\n  render() {\n    let { data, placeholder, defaultValue } = this.props\n    const { defaultTitle, idCountry } = this.state\n\n    data = this.filterSearch(data)\n\n    const valueDefault = defaultTitle || defaultValue\n    const defaultObj = (idCountry) ? data.find(o => (o.Id === idCountry)) : data.find(o => (o.CountryCode === valueDefault))\n    const itemCount = data.length\n    \n    return (\n      <div className='option-custom' ref={this.wrapperRef}>\n        <div className='select-input' onClick={this.handleOpen}>\n          \n          <span className='select-icon'><img className='select-logo-country' alt='' src={zget(defaultObj, 'Country.Logo', '')} /></span>\n          <span className='select-title'>{zget(defaultObj, 'Country.Name', '')}</span>\n        </div>\n\n        {(this.state.isOpen) && <div className='select-list'> \n          <div className='search-list-country'>\n            <input placeholder='Tìm kiếm' onChange={(e) => this.searchCountryCode(e)} />\n          </div>\n          <List\n            height={280}\n            itemCount={itemCount}\n            itemSize={50}\n            width={310}\n          >\n            {this.Row}\n          </List>          \n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default SelectCustom;","import React, { Component } from 'react'\n\nglobal.isclient && require('./rxSelectEmoji.css')\nconst { subString } = global.rootRequire('classes/ulti')\nconst { checkNameUser } = global.rootRequire('classes/chat')\n\n\nclass RxSelectEmoji extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {    \n      arrTabs:{img: 'emoji.png', type: 'EmojiIcon', data: ['😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😊', '😇', '🙂', '🙃', '😉', '😌', '😍', '🥰', '😘', '😗', '😙', '😚', '😋', '😛', '😝', '😜', '🤪', '🤨', '🧐', '🤓', '😎', '🤩', '🥳', '😏', '😒', '😞', '😔', '😟', '😕', '🙁', '😣', '😖', '😫', '😩', '🥺', '😢', '😭', '😤', '😠', '😡', '🤬', '🤯', '😳', '🥵', '🥶', '😱', '😨', '😰', '😥', '😓', '🤗', '🤔', '🤭', '🤫', '🤥', '😶', '😐', '😑', '😬', '🙄', '😯', '😦', '😧', '😮', '😲', '🥱', '😴', '🤤', '😪', '😵', '🤐', '🥴', '🤢', '🤮', '🤧', '😷', '🤒', '🤕', '🤑','😈', '👋', '🤚', '🖐', '✋', '🖖', '👌', '🤏', '✌️', '🤞', '🤟', '🤘', '🤙', '👈', '👉', '👆', '🖕', '👇', '☝️', '👍', '👎', '✊', '👊', '🤛', '🤜', '👏', '🙌', '👐', '🤲', '🤝', '🙏', '✍️', '💪', '🦵', '🦶', '👂','💩']},\n      \n    }\n  }\n\n  tagName_SelectUser(ele) {  \n    ele.name_contact = subString(checkNameUser(ele), 20)\n    this.props.onClick(ele)              \n  }\n  addEmoji(e, index) {\n    e.stopPropagation()\n    let arrTabs = this.state.arrTabs\n    //let tabIndex = this.state.tabIndex\n    let value = arrTabs['data'][index] || ''\n    this.props.onClick(value, 'EmojiIcon')\n  }\n\n  render() {\n\n    let arrTabs = this.state.arrTabs || {data: []}    \n    return (\n      <div className='box-emojiTag--wrap'>       \n        <div className='box-emojiTag'>\n          <div className='emojiTag_List'>           \n            <div className='box-emoji-content'>\n              {arrTabs['data'].map((vEmoji, index) => (\n                <div key={'emoji-' + index} className='icon-emoji' onClick={e => this.addEmoji(e, index)}>{vEmoji}</div>\n              ))}\n            </div>\n          </div> \n          <div className='emojiTag-box-tail'><i className='icon-emojiTag-tail'></i></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nRxSelectEmoji.defaultProps = {onChange: () => { }, onClick: () => { } \n}\n\n// Options : {key: , text: }\nexport default RxSelectEmoji\n","import React, { Component } from 'react'\nconst stickerDataObj = global.rootRequire('classes/stickerData.json');\nconst { rxsetLocal, rxgetLocal } = global.rootRequire('classes/request')\n\nglobal.isclient && require('./rxSelectIcons.css')\n\nclass RxSelectIcons extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      tabIndex: 0,\n      boxEmoji: false,\n      emojiClickNum: 0,\n      stickerFolderName: [],\n      arrTabsDisplay: [],      \n      arrTabs: [],\n      xPercent: 0,\n      slickTrackLength: 0,\n      arrHistory: global.rxu.json(rxgetLocal('rxemoji'), {data: []}),\n      pathImg: './images/sticker'      \n    }\n\n    let dataSticker = global.rxu.json(rxgetLocal('rxsticker'), {})\n    if (dataSticker.pathimg) {\n      this.state.pathImg = dataSticker.pathimg\n    }\n\n    if (this.state.arrHistory && !this.state.arrHistory['data']) {\n      this.state.arrHistory['data'] = []\n      this.state.tabIndex = 1\n    } \n  }\n\n  componentDidMount() {\n    let dataSticker = global.rxu.json(rxgetLocal('rxsticker'), stickerDataObj)\n    this.updateSticker(dataSticker)\n    if (window && window.ipcRenderer) {\n      window.ipcRenderer.on('new_sticker', (event, args) => {\n        if (args) {\n          try {\n            let objSticker = JSON.parse(args)\n            if (objSticker.version) {\n              this.updateSticker(objSticker)\n            }         \n          } catch(e) {\n          }\n        }\n      })\n    }\n  }\n\n  updateSticker(dataSticker) {\n    let arrTabs = []\n    let arrTabsDisplay = []\n    let stickerFolderName = []\n    let pathImg = this.state.pathImg\n    \n    const data = (dataSticker.version) ? dataSticker : stickerDataObj\n    if (data.stickerData) {\n      let stickerData = data.stickerData\n      arrTabsDisplay = stickerData\n      arrTabs = stickerData\n      stickerData.forEach(o => {\n        if (o.type && o.type !== 'history' && o.type !== 'EmojiIcon') {\n          stickerFolderName.push(o.type)\n        }\n      })   \n\n      if (data.pathimg) {\n        pathImg = data.pathimg\n      }\n      this.setState({arrTabsDisplay: arrTabsDisplay, pathImg: pathImg, arrTabs: arrTabs, stickerFolderName: stickerFolderName, slickTrackLength: arrTabsDisplay.length * 50 })\n    }\n  }\n\n  addHistory(icons, type) {\n    this.props.onClick(icons, type)\n  }\n\n  addEmoji(e, index) {\n    e.stopPropagation()\n    let arrTabs = this.state.arrTabs\n    let tabIndex = this.state.tabIndex\n    let value = arrTabs[tabIndex]['data'][index] || ''\n    this.addHistoryEmoji({type: 'EmojiIcon', value: value})\n    this.props.onClick(value, 'EmojiIcon')\n  }\n\n  addSticker(e, pSticker, index) {\n    e.stopPropagation()\n    let arrTabs = this.state.arrTabs\n    let tabIndex = this.state.tabIndex\n    if (arrTabs && arrTabs[tabIndex]['type'] === pSticker && arrTabs[tabIndex]['data'][index]) {\n      let value = pSticker + '_' + arrTabs[tabIndex]['data'][index] || ''\n      this.addHistoryEmoji({type: 'Sticker', value: value})\n      this.props.onClick(value, 'Sticker')\n    }\n  }\n\n  addHistoryEmoji(value) {\n    let arrHistory = this.state.arrHistory || {data: []}\n    if (arrHistory && arrHistory['data'] && arrHistory['data'].constructor === Array) {\n      if (arrHistory['data'].length > 30) {\n        arrHistory['data'].pop()\n      } else {\n        if (arrHistory['data'].length === 0) {\n          arrHistory['data'].push(value)  \n        } else {\n          arrHistory['data'] = arrHistory['data'].filter(o => o.value !== value.value)   \n          arrHistory['data'].unshift(value)  \n        }\n      }\n      this.setState({arrHistory: arrHistory}, () => {\n        rxsetLocal('rxemoji', JSON.stringify(arrHistory))\n      })  \n    } \n  }\n\n  changeTabIcon(index) {\n    this.setState({ tabIndex: index })\n  }\n\n  parseSticker(namesticker) {\n    const arrsticker = this.state.stickerFolderName\n    for (const sticker of arrsticker) {\n      if (namesticker && typeof (namesticker) === 'string' && namesticker.indexOf(sticker) !== -1) {\n        let indexPath = namesticker.indexOf('_')\n        let stickerStr = indexPath < 0 ? '' : namesticker.slice(0, indexPath)\n        let imgsticker = indexPath < 0 ? '' : namesticker.slice(indexPath+1)\n        if (indexPath !== -1) {\n          return `${this.state.pathImg}/${stickerStr}/${imgsticker}` \n        }\n      }\n    }\n  }\n\n  clickMoveTab(type) {\n    let xPercent = this.state.xPercent || 0\n    if (type === 'prev') {\n      xPercent += 200\n    } else {\n      xPercent -= 200\n    }\n    this.setState({xPercent: xPercent})\n  }\n\n  parseImagePath(nameimg) {\n    let indexPath = nameimg.indexOf('_')\n    let namefolder = indexPath < 0 ? nameimg : nameimg.slice(0, indexPath)\n    let namefile = indexPath < 0 ? nameimg : nameimg.slice(indexPath+1)\n\n    if (indexPath !== -1) {\n      return this.state.pathImg + '/' + namefolder + '/' + namefile  \n    } else {\n      return './images/tabs/' + nameimg\n    }\n  }\n\n  render() {\n    let arrTabs = this.state.arrTabs || {data: []}\n    let arrTabsDisplay = this.state.arrTabsDisplay || {data: []}\n    let tabIndex = this.state.tabIndex\n\n    return (\n      <div className='box-emoji-wrap'>\n        <img src={'./images/default/static/icon-sticker.svg'} alt='icon-like' className='icons-sticker filter_img_class' />\n        <div className='box-emoji'>\n          <div className='box-emoji-header'>\n            <div className=\"slider-emoji responsive slick-initialized slick-slider-emoji\">\n              <div className=\"slick-track\" style={{transform: `translateX(${this.state.xPercent || 0}px)`, width: this.state.slickTrackLength+'px'}}>\n                {arrTabsDisplay.map((objImg, index) => (                \n                  <div className={(index === tabIndex) ? 'slick-slide slick-active' : 'slick-slide'} key={'imgtab-'+index} >\n                    {([0,1].indexOf(index) !== -1) && <img className='icon_sticker_header' alt='' src={'./images/tabs/'+objImg.img} onClick={e => this.changeTabIcon(index)} onError={(e)=>{e.target.onerror = null; e.target.src='./images/tabs/default.jpg'}}/>}\n                    {([0,1].indexOf(index) === -1) && <img className='icon_sticker_header' alt='' src={this.parseImagePath(objImg.img)} onClick={e => this.changeTabIcon(index)} onError={(e)=>{e.target.onerror = null; e.target.src='./images/tabs/default.jpg'}}/>}\n                  </div>\n                ))}\n              </div>\n            </div>\n            {(this.state.xPercent < 0) && <div className=\"prev-emoji slick-disabled\" style={{display: 'block'}} onClick={(e) => this.clickMoveTab('prev')}>\n              <i className='emoji_arrow_back'></i>\n            </div>}            \n            {(this.state.xPercent > ((this.state.slickTrackLength*-1) + 300)) && <div className=\"next-emoji\" style={{display: 'block'}} onClick={(e) => this.clickMoveTab('next')}>\n              <i className='emoji_arrow_next' ></i>\n            </div>}\n          </div>\n\n          <div className='box-emoji-body'>\n            {(tabIndex === 0) && <div className='box-emoji-content'>\n              {this.state.arrHistory['data'].map((vIcons, index) => (\n                <div key={'iconhistory-' + index} className='icon-sticker'>\n                  {(vIcons['type'] === 'EmojiIcon') && <div className='icon-emoji_history' onClick={e => this.addHistory(vIcons['value'], vIcons['type'])}>{vIcons['value']}</div>}\n                  {(vIcons['type'] === 'Sticker') && <div className='icon-ticker_history' onClick={e => this.addHistory(vIcons['value'], vIcons['type'])}>\n                    <img className='icon-ticker_place'src={this.parseSticker(vIcons['value'])} alt='' onError={(e)=>{e.target.onerror = null; e.target.src='./images/tabs/default.jpg'}} />\n                  </div>}\n                </div>\n            ))}\n            </div>}\n            {(tabIndex === 1 && arrTabs && arrTabs.constructor === Array && arrTabs.length > 0) && <div className='box-emoji-content'>\n              {arrTabs[tabIndex]['data'].map((vEmoji, index) => (\n                <div key={'emoji-' + index} className='icon-emoji' onClick={e => this.addEmoji(e, index)}>{vEmoji}</div>\n              ))}\n            </div>}\n            {([0,1].indexOf(this.state.tabIndex) === -1 && arrTabs.constructor === Array && arrTabs.length > 0) && <div className='box-emoji-content'>\n              {arrTabs[tabIndex]['data'].map((sticker, index) => (\n                <div key={'sticker' + tabIndex + index} className='icon-sticker' onClick={e => this.addSticker(e, arrTabs[tabIndex]['type'], index)}>\n                  <img src={this.state.pathImg + '/' + arrTabs[tabIndex]['type'] + '/' + sticker} alt='' onError={(e)=>{e.target.onerror = null; e.target.src='./images/tabs/default.jpg'}} />\n                </div>\n              ))}\n            </div>}\n          \n          </div>\n          \n          <div className='emoji-box-tail'><i className='icon-emoji_box-tail'></i></div>\n        </div>\n      </div>\n    )\n  }\n}\nRxSelectIcons.defaultProps = { onChange: () => { }, onClick: () => { } }\nexport default RxSelectIcons\n","/*global translate*/\nimport React, { Component } from 'react'\nglobal.isclient && require('./rxSelectbox.css')\n\nclass RxSelectbox extends Component {\n  constructor (props, context) {\n    super(props, context)\n    this.state = {\n      toggle: false,\n      options: this.props.options,\n      results: this.props.results ? (this.props.results.constructor === Array ? this.props.results : this.props.results.split(',')) : []\n    }\n  }\n  toggle () {\n  }\n  onClickItem (e, item) {\n    e.stopPropagation()\n    if (this.state.results.indexOf(item._id) === -1) {\n      let tempResults = this.state.results\n      tempResults.push(item._id)\n      this.setState({ results: tempResults }, () => {\n        let tempResults = this.state.results ? (this.state.results.constructor === Array ? this.state.results.join(',') : this.state.results) : ''\n        this.props.onChange(tempResults)\n      })\n    }\n  }\n  onClickResult (e, item) {\n    e.stopPropagation()\n    let tempIndex = this.state.results.indexOf(item._id)\n    if (tempIndex !== -1) {\n      let tempResults = this.state.results\n      tempResults.splice(tempIndex, 1)\n\n      this.setState({ results: tempResults }, () => {\n        let tempResults = this.state.results ? (this.state.results.constructor === Array ? this.state.results.join(',') : this.state.results) : ''\n        this.props.onChange(tempResults)\n      })\n    }\n  }\n  onChangeFilter (e) {\n    // let tempValue = e.target.value\n  }\n  render () {\n    let options = this.state.options.map((item, index) => (\n      this.state.results.indexOf(item._id) === -1 ? <div key={index} onClick={(e) => this.onClickItem(e, item)}>{item.name}</div> : <span key={index} />\n    ))\n    let results = this.state.options.map((item, index) => (\n      this.state.results.indexOf(item._id) !== -1 ? <div key={index} onClick={(e) => this.onClickResult(e, item)}>{item.name} <b>x</b></div> : <span key={index} />\n    ))\n    return (\n      <div className='rxselectbox-wrap'>\n        <div className='rxselectbox-result clearfix' onClick={() => this.toggle()}>\n          {!this.state.results.length && <span className='rxselectbox-resultempty'>{translate('Click to select')}</span>} {results}</div>\n        {!this.state.toggle && <div className='rxselectbox-toggle'>\n          <div className='rxselectbox-filter'></div>\n          {options}\n        </div> }\n      </div>\n    )\n  }\n}\nRxSelectbox.defaultProps = { onChange: () => {}, options: [], results: [] }\nexport default RxSelectbox\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nglobal.isclient && require('./rxTagName.css')\nconst { subString,stringToColour ,rxChangeSlug} = global.rootRequire('classes/ulti')\nconst { checkNameUser,checkNameContact } = global.rootRequire('classes/chat')\n\nclass rxTagName_ extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n  tagName_SelectUser(ele) {  \n    ele.name_contact = subString(checkNameUser(ele), 20)\n    this.props.onClick(ele)              \n  }\n\n  render () {\n    let groupsTemp = this.props.groupsTemp\n    let tagNameSelect = this.props.tagNameSelect ||{}\n    return (\n      <div className='box-tagName-wrap'>       \n        <div className='box-tagName'>\n          <div className = 'tagName_List_place'>\n             <div className='tagName_List' id = 'tagName_List_id'>\n             { groupsTemp.map((ele, index) =>(\n               <div className={ (tagNameSelect.id && ele.id && tagNameSelect.id === ele.id) ? 'box-tagName_item_select': 'box-tagName_item'} key={index} onClick={ (e) => this.tagName_SelectUser(ele)} > \n                 <div className='tagName_List_avatar'>\n                   {(ele.profile_url) && <img src={global.rxu.config.cdn_endpoint + ele.profile_url} alt='' className='tagName_List_ava-group images-static'\n                     onError={(e) => { e.target.style.display = 'none' }} />}\n                  {(!ele.profile_url) && \n                    <span className='tagName_List_ava-span' style={{ background: `linear-gradient(120deg, ${stringToColour('FFF' + checkNameContact(ele).slice(0, 2).toUpperCase())}, #FFFFFF)` }}>{rxChangeSlug(checkNameUser(ele)).slice(0, 2).toUpperCase()}</span>\n                  }\n                 </div>\n                 <div className='tagName_List_name'>{ subString(checkNameUser(ele), 20) } </div>\n               </div> \n               )\n             )}\n             </div> \n           </div> \n          <div className='tagName-box-tail'><i className='icon-tagName-tail'></i></div>\n        </div>\n      </div>\n    )\n  }\n}\n\n// const mapStateToProps = (state, ownProps) => ({})\n\n// const mapDispatchToProps = {}\n\n// const rxTagName_ = connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(rxTagName)\n\nexport default rxTagName_","/*global translate*/\nimport React from 'react'\nexport const MainTable = (props) => { return <div className='betable__main'><table className='betable__inner'>{props.children}</table></div> }\nexport const AdminBlock = (props) => {\n  return <div className='adblock'>\n    <div className='adblock__head'>\n      <div className='adblock__title'>{props.name} {translate('Review')}</div>\n      <div className='adblock__desc'>{props.desc} {translate('Manage reviews')}</div>\n    </div>\n    <div className='adblock__body'>\n      <div className='row adblock__inner'>\n        {props.children}\n      </div>\n      <div className='clearfix-martop' />\n    </div>\n  </div>\n}\n","import React, { Component } from 'react'\nglobal.isclient && require('./rxToggle.css')\n\nclass RxToggle extends Component {\n  constructor (props, context) {\n    super(props, context)\n    this.state = {\n      value: this.props.value\n    }\n  }\n\n  toggle () {\n    let newValue = (this.state.value === 1) ? 0 : 1\n    this.setState(({ value }) => ({ value: newValue }), () => {\n      this.props.onToggle(this.state.value)\n    })\n  }\n\n  render () {\n    return (\n      <div onClick={(e) => this.toggle()} className={'rxtoggle-container rxtoggle-style1 ' + (this.state.value === 1 ? 'rx-active' : '')}><div className='rxtoggle-inner' /></div>\n    )\n  }\n}\n\nRxToggle.defaultProps = { onToggle: () => {}, value: 0 }\n\nexport default RxToggle\n","/* global FormData, fetch */\nimport React, { Component } from 'react'\nglobal.isclient && require('./rxUpload.css')\n\nclass RxUpload extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      images: props.images || [],\n      callback: props.callback,\n      single: props.single || 1\n    }\n  }\n\n  componentDidMount () {\n  }\n\n  onClickDataUpload (e) {\n    this.refs.data_image.click()\n  }\n\n  onChangeDataImageFile (e) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (typeof (e.target.files[0]) !== 'undefined') {\n      let file = e.target.files[0]\n      let data = new FormData()\n      data.append('uploadFile', file, file.name)\n      fetch(global.rxu.config.base_api + '/upload', { method: 'POST', body: data }).then(res => res.json()).then((json) => {\n        if (json.success === 1) {\n          this.onBlurData(json)\n        }\n      })\n    }\n  }\n\n  onBlurData (json) {\n    this.setState({ images: json.data }, () => {\n      if (typeof this.state.callback === 'function') {\n        this.state.callback(this.state)\n      }\n    })\n  }\n\n  onClickDataUploadArr (e, index) {\n    this.refs['data_image_' + index].click()\n  }\n\n  onChangeDataImageFileArr (e, index) {\n    e.stopPropagation()\n    e.preventDefault()\n\n    if (typeof (e.target.files[0]) !== 'undefined') {\n      let file = e.target.files[0]\n      let data = new FormData()\n      data.append('uploadFile', file, file.name)\n      fetch(global.rxu.config.base_api + '/upload', { method: 'POST', body: data }).then(res => res.json()).then((json) => {\n        if (json.success === 1) {\n          this.onBlurDataArr(json, index)\n        }\n      })\n    }\n  }\n\n  onBlurDataArr (json, index) {\n    let tempImages = this.state.images\n    tempImages[index] = json.data\n    this.setState({ images: tempImages }, () => {\n      if (typeof this.state.callback === 'function') {\n        this.state.callback(this.state)\n      }\n    })\n  }\n\n  onClickImgRemove (e, index) {\n    let tempImages = this.state.images\n    tempImages.splice(index, 1)\n    this.setState({ images: tempImages }, () => {\n      if (typeof this.state.callback === 'function') {\n        this.state.callback(this.state)\n      }\n    })\n  }\n\n  render () {\n    let tmpImgStr\n    let tmpImgStrAdd\n    if (this.state.single === 1) {\n      let tempImages = (typeof (this.state.images) === 'string') ? this.state.images : 'ico_app_default.jpg'\n      tmpImgStr =\n        <div>\n          <input type='file' id='file' ref='data_image' style={{ display: 'none' }} onChange={(e) => this.onChangeDataImageFile(e)} />\n          <img className='admin-product-img-upload' alt='ico_default' src={global.rxu.config.base_api + '/upload/image/' + tempImages} onClick={(e) => this.onClickDataUpload(e)} />\n        </div>\n    } else {\n      let tempLastIndex = 0\n      tmpImgStr = this.state.images.map((perdata, index) => {\n        let tempRef = 'data_image_' + index\n        tempLastIndex = index\n        return (\n          <div key={index} className='admin-product-img-multi'>\n            <div className='admin-product-img-remove' onClick={(e) => this.onClickImgRemove(e, index)}>x</div>\n            <input type='file' id='file' ref={tempRef} style={{ display: 'none' }} onChange={(e) => this.onChangeDataImageFileArr(e, index)} />\n            <img className='admin-product-img-upload' alt='ico_default' src={global.rxu.config.base_api + '/upload/image/' + (perdata || 'ico_app_default.jpg')} onClick={(e) => this.onClickDataUploadArr(e, index)} />\n          </div>\n        )\n      })\n\n      tempLastIndex += 1; let tempLastRef = 'data_image_' + tempLastIndex\n      tmpImgStrAdd =\n        <div key={tempLastIndex} className='admin-product-img-multi'>\n          <input type='file' id='file' ref={tempLastRef} style={{ display: 'none' }} onChange={(e) => this.onChangeDataImageFileArr(e, tempLastIndex)} />\n          <img className='admin-product-img-upload' alt='ico_default' src={global.rxu.config.base_api + '/upload/image/' + (this.state.images[tempLastIndex] || 'ico_app_default.jpg')} onClick={(e) => this.onClickDataUploadArr(e, tempLastIndex)} />\n        </div>\n    }\n\n    return (\n      <div className='clearfix'>{tmpImgStr}{tmpImgStrAdd}</div>\n    )\n  }\n}\n\nexport default RxUpload\n","/*global translate*/\nimport React, { Component } from 'react'\nglobal.isclient && require('./rxUploadFile.css')\n\nclass RxUploadFile extends Component {\n\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      type: 0,\n      flagPopup: false,\n      theInputFileKey:''\n    }\n    this.wrapperRef = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n    this.uploadFileImages = this.uploadFileImages.bind(this)\n    this.uploadLoadingFile= this.uploadLoadingFile.bind(this)\n    this.uploadInputImage = null\n    this.uploadInputDoc = null\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n      this.setState({flagPopup: false})\n    }\n  }\n\n  onClickDataUpload(e, type) {\n    if (type === 'image') {\n      this.uploadInputImage.click()\n    } else if (type === 'doc') {\n      this.uploadInputDoc.click()\n    }\n  }\n\n  onChangeDataFile(e, type) {\n    e.stopPropagation()\n    e.preventDefault()\n    if (this.props.token) {\n      let fileList = e.target.files\n      if (fileList && fileList.length > 0) {\n        if (type === 'image') {\n          if (this.isImage(fileList[0]['name'])) {\n            this.uploadFileImages(fileList)\n          } else if (this.isVideo(fileList[0]['name'])) {\n            this.uploadFileVideos(fileList)\n          } else {\n            alert(translate('Formats not supported'))\n          }\n        } else if (type === 'doc') {\n          this.uploadFileDoc(fileList)\n        }\n        this.setState({\n          theInputFileKey: new Date().getTime().toString()\n        });\n      }\n    }\n  }\n\n  uploadFileDoc(fileList) {\n    let checkExtFile = true\n\n    for (let i = 0; i < fileList.length; i++) {\n      let ext = this.getExtension(fileList[i]['name']);\n      if (['xlsx', 'xls', 'doc', 'docx', 'ppt', 'pptx', 'txt', 'pdf', 'numbers', 'key', 'pages', 'zip', 'm4a', 'mp3'].indexOf(ext) === -1) {\n        checkExtFile = false\n        break;\n      }\n    }\n    if (checkExtFile) {                                  \n      let arrImg = [], arrL=[]\n      for (let i = 0; i < fileList.length; i++) {\n        let ext = this.getExtension(fileList[i]['name']);\n        if (typeof (fileList[i]) !== 'undefined') {\n          let file = fileList[i]\n          let fileSize = fileList[i].size\n          // let extFilename = this.getExtension(fileList[i]['name'])\n\n          if (fileSize < (1024*1024*100)) {\n            let message_id = (Math.floor(Date.now())+i * 1000).toString()\n            arrL.push(message_id)\n            this.uploadLoadingFile(file,message_id,'file')\n            let fileTypeTmp = file.type\n            if(ext === 'numbers'){\n              fileTypeTmp = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'// file type of xlsx file\n            }\n\n            if(ext === 'pages'){\n              fileTypeTmp = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'// file type of docx file\n            }\n\n            if (['m4a','mp3'].indexOf(ext) !== -1 ) {\n              fileTypeTmp = 'audio/m4a'\n            }\n\n            let dataParams = {\n              content_type: fileTypeTmp,\n              name: 'netalo_file_' + Math.floor(Date.now()),\n              public: true,\n              size: fileSize\n            }\n\n            let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n            let requestOptions = {\n              method: 'POST',\n              headers: header,\n              body: JSON.stringify(dataParams),\n              redirect: 'follow'\n            };\n            fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n              if (json && json.blod_object && json.blod_object.form_data) {\n                let dataUpload = new FormData()\n                let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n                for (let key of arrKeys) {\n                  if (json.blod_object.form_data[key]) {\n                    dataUpload.append(key, json.blod_object.form_data[key])\n                  }\n                }\n                dataUpload.append('file', file, file.name)\n                dataUpload.append('success_action_status', 201)\n\n                fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n                  if (result.indexOf('Key') !== -1) {\n                    let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                    let strresult = result.match(patt);\n                    if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                      let key = strresult[1]\n                      if (key) {\n                        let optComplete = {\n                          method: 'PUT',\n                          headers: header,\n                          body: JSON.stringify({\n                            content_type: json.content_type,\n                            id: json.id,\n                            name: json.name,\n                            size: json.size,\n                            uid: json.uid\n                          })\n                        };\n\n                        fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                          .then(response => {\n                            if (response.status === 200) {\n                              try {\n                                if (arrL.length > 0) {\n                                  let ele = document.getElementById(arrL[0]);\n                                  // ele && ele.closest(\"div.zmessage_row\").remove();\n                                  if(ele){\n                                    ele.closest(\"div.zmessage_row\").style.display=\"none\";\n                                  }\n                                }\n                                let filename  = fileList[i]['name']\n                                filename = filename.replace('.' + ext ,'')\n                                let objSize = {\n                                  file_extension: ext,\n                                  file_name: filename,\n                                  size: fileSize,\n                                  url: key\n                                }\n                                \n                                if (ext.indexOf('zip') !== -1) {\n                                  objSize['file_extension'] = 'zip'\n                                  objSize['file_name'] = fileList[i]['name'].replace('.zip', '')\n                                }\n\n                                arrImg.push(objSize)\n\n                                if (arrImg.length === fileList.length) {\n                                  this.setState({flagPopup: false}, () => {\n                                    this.uploadInputImage = null\n                                    this.uploadInputDoc = null\n                                    this.props.callback(arrImg, 'file')\n                                  })\n                                  \n                                }\n                              } catch (e) { }\n                            }\n                          })\n                          .catch(errorPut => console.log('error', errorPut));\n                      }\n                    }\n                  }\n                })\n              }\n            }).catch(error => console.log('error', error))\n          } else {\n            alert('File size is too large')\n          }          \n        }\n      }\n    } else {\n      alert(translate('The file format is not suitable. Please select the file as .xlsx, .xls, .doc, .docx, .ppt, .pptx, .txt, .pdf, .numbers, .key, .pages, .zip'))\n    }\n  }\n\n  uploadFileImages(fileList) {\n    let checkExtFile = true\n    for (let i = 0; i < fileList.length; i++) {\n      if (['png', 'jpg'].indexOf(this.isImage(fileList[i]['name'])) === -1) {\n        checkExtFile = false\n        break;\n      }\n    }\n    if (checkExtFile) {\n      let arrImg = [], arrL=[]\n      for (let i = 0; i < fileList.length; i++) {\n        if (typeof (fileList[i]) !== 'undefined') {\n          let file = fileList[i]\n          let fileSize = fileList[i].size\n          if (this.isImage(file.name) && ['png', 'jpg'].indexOf(this.isImage(file.name)) !== -1) {\n            let extFilename = 'png'\n\n            let _URL = window.URL || window.webkitURL\n            let img = new Image();\n            let objectUrl = _URL.createObjectURL(file)\n\n            let message_id = (Math.floor(Date.now())+i * 1000).toString()\n            arrL.push(message_id)\n            this.uploadLoadingFile(file,message_id,'image')\n\n            let dataParams = {\n              content_type: 'image/' + extFilename,\n              name: 'netalo_' + Math.floor(Date.now()),\n              public: true,\n              size: fileSize\n            }\n            let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n            let requestOptions = {\n              method: 'POST',\n              headers: header,\n              body: JSON.stringify(dataParams),\n              redirect: 'follow'\n            };\n\n            fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n              if (json && json.blod_object && json.blod_object.form_data) {\n                let dataUpload = new FormData()\n                let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n                for (let key of arrKeys) {\n                  if (json.blod_object.form_data[key]) {\n                    dataUpload.append(key, json.blod_object.form_data[key])\n                  }\n                }\n                dataUpload.append('file', file, file.name)\n                dataUpload.append('success_action_status', 201)\n\n                fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n                  if (result.indexOf('Key') !== -1) {\n                    let patt = '<Key.*?>(.*?)<\\\\/Key>';\n                    let strresult = result.match(patt);\n                    if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                      let key = strresult[1]\n                      if (key) {\n                        let optComplete = {\n                          method: 'PUT',\n                          headers: header,\n                          body: JSON.stringify({\n                            content_type: json.content_type,\n                            id: json.id,\n                            name: json.name,\n                            size: json.size,\n                            uid: json.uid\n                          })\n                        };\n\n                        fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                          .then(response => {\n                            if (response.status === 200) {\n                              try {\n                                if (i === fileList.length - 1) {\n                                  arrL.map(il => {\n                                    let ele = document.getElementById(il);\n                                    // ele && ele.closest(\"div.zmessage_row\").remove();\n                                    if(ele){\n                                      ele.closest(\"div.zmessage_row\").style.display=\"none\";\n                                    }\n                                    return\n                                  })\n                                }\n                                img.onload = () => {\n                                  let objSize = { width: img.width || 960, height: img.height || 720, url: key }\n                                  arrImg.push(objSize)\n                                  if (arrImg.length === fileList.length) {\n                                    this.props.callback(arrImg, 'image')\n                                    _URL.revokeObjectURL(objectUrl)\n                                  }\n                                }\n                                img.src = objectUrl\n\n                                this.setState({flagPopup: false}, () => {\n                                  this.uploadInputImage = null\n                                  this.uploadInputDoc = null\n                                })\n\n                              } catch (e) { }\n                            }\n                          })\n                          .catch(errorPut => console.log('error', errorPut));\n                      }\n                    }\n                  }\n                })\n              }\n            }).catch(error => console.log('error', error))\n          } else {\n            alert(translate('The image file format is not suitable'))\n          }\n        }\n      }\n    } else {\n      alert(translate('The image file format is not suitable. Please select the image file as .jpg or .png'))\n    }\n  }\n\n  uploadLoadingFile(file,message_id,type){\n    try {\n      let fileType \n      let attachments\n      let reader = new FileReader();\n      let url = URL.createObjectURL(file)\n      let that = this\n      let params = {\n            \"message_id\": message_id,\n            \"created_at\": (Math.floor(Date.now()) * 1000).toString(),\n            \"group_id\": that.props.group_id, \"message\": \"\",\n            \"sender_uin\": that.props.userid,\n            \"updated_at\": \"0\", \"pinned_at\": \"0\", \"order_id\": \"0\", \"status\": 0,\n            // \"type\": fileType,\n            // \"attachments\": attachments,\n            \"group_type\": 2, \"nonce\": \"\", \"version\": 1, \"is_encrypted\": false\n          }\n\n      that.props.handleDragOut() \n      if (type === 'image') {\n        const img = new Image()\n        img.onload = function() { \n          params.type = 2\n          params.attachments = `{\"loading\":true,\"images\":[{\n                            \"url\":\"${url}\"}]}`\n          that.props.handleMessage(params, true)     \n        }\n        img.src = url\n      }\n      if (type === 'video') {\n        const video = document.createElement(\"video\");\n        video.src = url;\n        video.addEventListener(\"loadedmetadata\", function () {\n          params.type = 4\n          params.attachments = `{\"loading\":true,\"video\":{\n                          \"url\":\"${url}\",\"width\":\"${this.videoWidth}\",\"height\":\"${this.videoHeight}\"}}`\n          that.props.handleMessage(params, true) \n        });\n      }\n      if (type === 'file') {\n        params.type = 12\n        params.attachments = `{\"loading\":true,\n                        \"file\":{\n                          \"url\":\"${url}\",\n                          \"file_extension\":\"${this.getExtension(file['name'])}\",\n                          \"size\":\"${file.size}\",\n                          \"file_name\":\"${file.name}\"                          \n                        }}`\n        that.props.handleMessage(params, true)  \n      }\n    } catch (error) {\n    }\n  }\n\n  uploadThumnail(image, videokey) {\n    if (image.base64 && image.width > 0) {\n      let dataParams = {\n        content_type: image.type,\n        name: image.filename,\n        public: true,\n        size: image.size\n      }\n      let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n      let requestOptions = {\n        method: 'POST',\n        headers: header,\n        body: JSON.stringify(dataParams),\n        redirect: 'follow'\n      };\n\n      fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n        if (json && json.blod_object && json.blod_object.form_data) {\n          let dataUpload = new FormData()\n          let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n          for (let key of arrKeys) {\n            if (json.blod_object.form_data[key]) {\n              dataUpload.append(key, json.blod_object.form_data[key])\n            }\n          }\n          dataUpload.append('file', image.file, image.file.name)\n          dataUpload.append('success_action_status', 201)\n\n          fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n            if (result.indexOf('Key') !== -1) {\n              let patt = '<Key.*?>(.*?)<\\\\/Key>';\n              let strresult = result.match(patt);\n              if (strresult && strresult.constructor === Array && strresult.length > 1) {\n                let key = strresult[1]\n                if (key) {\n                  let optComplete = {\n                    method: 'PUT',\n                    headers: header,\n                    body: JSON.stringify({\n                      content_type: json.content_type,\n                      id: json.id,\n                      name: json.name,\n                      size: json.size,\n                      uid: json.uid\n                    })\n                  };\n\n                  fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                    .then(response => {\n                      if (response.status === 200) {\n                        try {\n                          let objSize = {\n                            width: image.videoWidth || 960,\n                            height: image.videoHeight || 720,\n                            thumbnail_url: key,\n                            duration: image.duration,\n                            url: videokey\n                          }\n                          this.props.callback([objSize], 'video')\n                        } catch (e) { }\n                      }\n                    })\n                    .catch(errorPut => console.log('error', errorPut));\n                }\n              }\n            }\n          })\n        }\n      }).catch(error => console.log('error', error))\n    }\n  }\n\n  uploadVideo(file, image) {\n    let arrL=[]\n    let message_id = (Math.floor(Date.now()) * 1000).toString()\n    arrL.push(message_id)\n    this.uploadLoadingFile(file,message_id,'video')\n\n    let dataParams = {\n      content_type: 'video/mp4',\n      name: 'netalo_video_' + Math.floor(Date.now()),\n      public: true,\n      size: file.size\n    }\n    let header = { 'TC-Token': this.props.token, 'Content-Type': 'application/json; charset=UTF-8', 'Accept-Encoding': 'gzip', 'Connection': 'keep-alive' }\n    let requestOptions = {\n      method: 'POST',\n      headers: header,\n      body: JSON.stringify(dataParams),\n      redirect: 'follow'\n    };\n\n    fetch(global.rxu.config.create_blob, requestOptions).then(res => res.json()).then((json) => {\n      if (json && json.blod_object && json.blod_object.form_data) {\n        let dataUpload = new FormData()\n        let arrKeys = ['Content-Type', 'key', 'policy', 'x-amz-algorithm', 'x-amz-credential', 'x-amz-date', 'x-amz-meta-netachat', 'x-amz-signature']\n        for (let key of arrKeys) {\n          if (json.blod_object.form_data[key]) {\n            dataUpload.append(key, json.blod_object.form_data[key])\n          }\n        }\n        dataUpload.append('file', file, file.name)\n        dataUpload.append('success_action_status', 201)\n\n        fetch(json.blod_object.params, { method: 'POST', body: dataUpload }).then(resBlob => resBlob.text()).then(result => {\n          if (result.indexOf('Key') !== -1) {\n            let patt = '<Key.*?>(.*?)<\\\\/Key>';\n            let strresult = result.match(patt);\n            if (strresult && strresult.constructor === Array && strresult.length > 1) {\n              let key = strresult[1]\n              if (key) {\n                let optComplete = {\n                  method: 'PUT',\n                  headers: header,\n                  body: JSON.stringify({\n                    content_type: json.content_type,\n                    id: json.id,\n                    name: json.name,\n                    size: json.size,\n                    uid: json.uid\n                  })\n                };\n\n                fetch(global.rxu.config.get_blobs + '/' + json.id + '/complete.json', optComplete)\n                  .then(response => {\n                    if (response.status === 200) {\n                      try {\n                        if (arrL.length > 0) {\n                          let ele = document.getElementById('video'+ arrL[0]);\n                          // ele && ele.closest(\"div.zmessage_row\").remove();\n                          if(ele){\n                            ele.closest(\"div.zmessage_row\").style.display=\"none\";\n                          }\n                        }\n                        this.uploadThumnail(image, key)\n\n                        this.setState({flagPopup: false}, () => {\n                          this.uploadInputImage = null\n                          this.uploadInputDoc = null\n                        })\n                      } catch (e) { }\n                    }\n                  })\n                  .catch(errorPut => console.log('error', errorPut));\n              }\n            }\n          }\n        }).catch(error => {\n          alert(translate('Video size is too large'))\n        })\n      }\n    }).catch(error => console.log('error', error))\n  }\n\n  uploadFileVideos(fileList) {\n    let checkExtFile = true\n    for (let i = 0; i < fileList.length; i++) {\n      if (['mp4'].indexOf(this.isVideo(fileList[i]['name'])) === -1) {\n        checkExtFile = false\n        break;\n      }\n    }\n    if (checkExtFile) {\n      for (let i = 0; i < fileList.length; i++) {\n        if (typeof (fileList[i]) !== 'undefined') {\n          let file = fileList[i]\n          let fileSize = fileList[i].size\n\n          if (fileSize < 20971520) {\n            this.capture(file, (image) => {\n              this.uploadVideo(file, image)\n            })\n          } else {\n            alert(translate('Video size is too large'))\n          }\n        }\n      }\n    } else {\n      alert(translate('The video file format is not suitable. Please select the video file as .mp4'))\n    }\n  }\n\n  getExtension(filename) {\n    let parts = filename.split('.');\n    return parts[parts.length - 1];\n  }\n\n  isImage(filename) {\n    let ext = this.getExtension(filename);\n    switch (ext.toLowerCase()) {\n      case 'jpg':\n      case 'gif':\n      case 'bmp':\n      case 'png':\n        return ext.toLowerCase();\n      default:\n        break;\n    }\n    return '';\n  }\n\n  isVideo(filename) {\n    let ext = this.getExtension(filename);\n    switch (ext.toLowerCase()) {\n      case 'm4v':\n      case 'avi':\n      case 'mpg':\n      case 'mp4':\n        return ext.toLowerCase();\n      default:\n        break;\n    }\n    return '';\n  }\n\n  capture(file, callback) {\n    try {\n      var fileReader = new FileReader()\n      fileReader.onload = function () {\n        var blob = new Blob([fileReader.result], { type: file.type })\n        var url = URL.createObjectURL(blob)\n        var video = document.createElement('video')\n        var timeupdate = function () {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate)\n            video.pause()\n          }\n        }\n        video.addEventListener('loadeddata', function () {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate)\n          }\n        })\n        var dataURLtoFile = function (dataurl, filename) {\n          var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n          while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n          }\n          return new File([u8arr], filename, { type: mime });\n        }\n        var snapImage = function () {\n          var canvas = document.createElement('canvas')\n          canvas.width = video.videoWidth * 0.25\n          canvas.height = video.videoHeight * 0.5\n          canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height)\n          var image = canvas.toDataURL('image/jpeg')\n          var success = image.length > 5000\n          if (success) {\n            let filename = 'netalo_thumbnail_' + Math.floor(Date.now())\n            let arrimg = image.split(',')[1]\n\n            let objImg = {\n              base64: image,\n              width: canvas.width,\n              height: canvas.height,\n              videoWidth: video.videoWidth,\n              videoHeight: video.videoHeight,\n              duration: Math.ceil(video.duration),\n              type: 'image/png',\n              size: Math.floor((new Buffer(arrimg, 'base64').length)),\n              filename: filename,\n              file: dataURLtoFile(image, `${filename}.jpg`),\n            }\n            callback(objImg)\n            URL.revokeObjectURL(url)\n          }\n          return success\n        }\n        video.addEventListener('timeupdate', timeupdate)\n        video.preload = 'metadata'\n        video.src = url\n        video.muted = true\n        video.playsInline = true\n        video.play()\n      }\n\n      fileReader.readAsArrayBuffer(file)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  toggleDataUpload() {\n    let flagPopup = this.state.flagPopup\n    this.setState({flagPopup: !flagPopup})\n  }\n\n  render() {\n    return (\n      <div className='box-upload-wrap' ref={this.wrapperRef}>\n        <img src={'./images/default/static/plus.svg'} alt='icon-like' className='icons-sticker filter_img_class'  onClick={(e) => this.toggleDataUpload()} />\n        <div className='box-upload' style={{display: this.state.flagPopup ? \"block\" : \"none\"}}>\n          <div className='type-upload' onClick={(e) => this.onClickDataUpload(e, 'image')}>\n            <span className='icon-picture type-upload-icon'></span>\n            {translate('Photos and Videos')}\n          </div>\n          <div className='type-upload' onClick={(e) => this.onClickDataUpload(e, 'doc')}>\n            <span className='icon-doc type-upload-icon'></span>\n            {translate('Documents and Files')}\n          </div>\n        </div>\n\n        <input ref={(ref) => { this.uploadInputImage = ref}} type='file' multiple={true} key={this.state.theInputFileKey + '_data_image'} style={{ display: 'none' }} onChange={(e) => this.onChangeDataFile(e, 'image')} accept=\"image/jpg,image/png,video/mp4\" />\n\n        <input ref={(ref) => { this.uploadInputDoc = ref}} type='file' multiple={false} key={this.state.theInputFileKey + '_data_doc'} style={{ display: 'none' }} onChange={(e) => this.onChangeDataFile(e, 'doc')} accept=\".xlsx,.xls,.doc,.docx,.ppt,.pptx,.txt,.pdf,.numbers,.key,.pages,.zip,.m4a,.mp3\" />      \n      </div>\n    )\n  }\n}\nRxUploadFile.defaultProps = { callback: () => { } }\nexport default RxUploadFile\n","import {} from './global'\n\nconst Themeroutes = global.rootRequire('themes/netalo/themeroutes').default\nconst routes = [].concat(Themeroutes)\n\nexport default routes\n","var map = {\n\t\"./config.development.js\": 125,\n\t\"./config.production.js\": 126,\n\t\"./config.staging.js\": 127\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 345;","var map = {\n\t\"./\": 79,\n\t\"./app\": 106,\n\t\"./app.js\": 106,\n\t\"./classes/call\": 254,\n\t\"./classes/call.js\": 254,\n\t\"./classes/chat\": 255,\n\t\"./classes/chat.js\": 255,\n\t\"./classes/frequently_asked_questions\": 256,\n\t\"./classes/frequently_asked_questions.json\": 256,\n\t\"./classes/lang\": 150,\n\t\"./classes/lang.js\": 150,\n\t\"./classes/recorder\": 257,\n\t\"./classes/recorder.js\": 257,\n\t\"./classes/request\": 44,\n\t\"./classes/request.js\": 44,\n\t\"./classes/socket\": 151,\n\t\"./classes/socket.js\": 151,\n\t\"./classes/stickerData\": 258,\n\t\"./classes/stickerData.json\": 258,\n\t\"./classes/themeColorData\": 259,\n\t\"./classes/themeColorData.json\": 259,\n\t\"./classes/themeData\": 260,\n\t\"./classes/themeData.json\": 260,\n\t\"./classes/theme_themeColorData\": 261,\n\t\"./classes/theme_themeColorData.json\": 261,\n\t\"./classes/ulti\": 124,\n\t\"./classes/ulti.js\": 124,\n\t\"./components/Helpers/RxCountStart\": 262,\n\t\"./components/Helpers/RxCountStart.js\": 262,\n\t\"./components/Helpers/RxCurrency\": 263,\n\t\"./components/Helpers/RxCurrency.js\": 263,\n\t\"./components/Helpers/RxSlug\": 264,\n\t\"./components/Helpers/RxSlug.js\": 264,\n\t\"./components/admin\": 91,\n\t\"./components/admin/\": 91,\n\t\"./components/admin/index\": 91,\n\t\"./components/admin/index.js\": 91,\n\t\"./components/authenticate/login\": 265,\n\t\"./components/authenticate/login.js\": 265,\n\t\"./components/authenticate/register\": 266,\n\t\"./components/authenticate/register.js\": 266,\n\t\"./components/shares/RxManageGroup\": 267,\n\t\"./components/shares/RxManageGroup.css\": 268,\n\t\"./components/shares/RxManageGroup.js\": 267,\n\t\"./components/shares/block_user/block_user\": 269,\n\t\"./components/shares/block_user/block_user.css\": 270,\n\t\"./components/shares/block_user/block_user.js\": 269,\n\t\"./components/shares/create_group_chat/create_group_chat\": 271,\n\t\"./components/shares/create_group_chat/create_group_chat.css\": 272,\n\t\"./components/shares/create_group_chat/create_group_chat.js\": 271,\n\t\"./components/shares/rxAccountInfo\": 273,\n\t\"./components/shares/rxAccountInfo.css\": 274,\n\t\"./components/shares/rxAccountInfo.js\": 273,\n\t\"./components/shares/rxAudioRecord\": 275,\n\t\"./components/shares/rxAudioRecord.css\": 277,\n\t\"./components/shares/rxAudioRecord.js\": 275,\n\t\"./components/shares/rxCall\": 162,\n\t\"./components/shares/rxCall.css\": 278,\n\t\"./components/shares/rxCall.js\": 162,\n\t\"./components/shares/rxCall.jsx\": 182,\n\t\"./components/shares/rxComponent\": 279,\n\t\"./components/shares/rxComponent.js\": 279,\n\t\"./components/shares/rxCrudEvent\": 280,\n\t\"./components/shares/rxCrudEvent.js\": 280,\n\t\"./components/shares/rxDragAndDrop\": 281,\n\t\"./components/shares/rxDragAndDrop.css\": 282,\n\t\"./components/shares/rxDragAndDrop.js\": 281,\n\t\"./components/shares/rxDragdroptree\": 283,\n\t\"./components/shares/rxDragdroptree.css\": 284,\n\t\"./components/shares/rxDragdroptree.js\": 283,\n\t\"./components/shares/rxGroupList\": 285,\n\t\"./components/shares/rxGroupList.css\": 286,\n\t\"./components/shares/rxGroupList.js\": 285,\n\t\"./components/shares/rxImageGallery\": 287,\n\t\"./components/shares/rxImageGallery.css\": 288,\n\t\"./components/shares/rxImageGallery.js\": 287,\n\t\"./components/shares/rxInfoUser\": 289,\n\t\"./components/shares/rxInfoUser.css\": 290,\n\t\"./components/shares/rxInfoUser.js\": 289,\n\t\"./components/shares/rxLoading\": 113,\n\t\"./components/shares/rxLoading.css\": 276,\n\t\"./components/shares/rxLoading.js\": 113,\n\t\"./components/shares/rxModalEdit\": 291,\n\t\"./components/shares/rxModalEdit.css\": 292,\n\t\"./components/shares/rxModalEdit.js\": 291,\n\t\"./components/shares/rxModalMouseRightChat\": 293,\n\t\"./components/shares/rxModalMouseRightChat.css\": 294,\n\t\"./components/shares/rxModalMouseRightChat.js\": 293,\n\t\"./components/shares/rxPopup\": 295,\n\t\"./components/shares/rxPopup.css\": 300,\n\t\"./components/shares/rxPopup.js\": 295,\n\t\"./components/shares/rxSearchBox\": 301,\n\t\"./components/shares/rxSearchBox.css\": 302,\n\t\"./components/shares/rxSearchBox.js\": 301,\n\t\"./components/shares/rxSelectCustom\": 303,\n\t\"./components/shares/rxSelectCustom.css\": 304,\n\t\"./components/shares/rxSelectCustom.js\": 303,\n\t\"./components/shares/rxSelectEmoji\": 305,\n\t\"./components/shares/rxSelectEmoji.css\": 306,\n\t\"./components/shares/rxSelectEmoji.js\": 305,\n\t\"./components/shares/rxSelectIcons\": 307,\n\t\"./components/shares/rxSelectIcons.css\": 308,\n\t\"./components/shares/rxSelectIcons.js\": 307,\n\t\"./components/shares/rxSelectbox\": 309,\n\t\"./components/shares/rxSelectbox.css\": 310,\n\t\"./components/shares/rxSelectbox.js\": 309,\n\t\"./components/shares/rxTagName\": 311,\n\t\"./components/shares/rxTagName.css\": 312,\n\t\"./components/shares/rxTagName.js\": 311,\n\t\"./components/shares/rxTemplates\": 313,\n\t\"./components/shares/rxTemplates.js\": 313,\n\t\"./components/shares/rxToggle\": 314,\n\t\"./components/shares/rxToggle.css\": 315,\n\t\"./components/shares/rxToggle.js\": 314,\n\t\"./components/shares/rxUpload\": 316,\n\t\"./components/shares/rxUpload.css\": 317,\n\t\"./components/shares/rxUpload.js\": 316,\n\t\"./components/shares/rxUploadFile\": 318,\n\t\"./components/shares/rxUploadFile.css\": 319,\n\t\"./components/shares/rxUploadFile.js\": 318,\n\t\"./components/shares/rxUtils\": 161,\n\t\"./components/shares/rxUtils.js\": 161,\n\t\"./config\": 51,\n\t\"./config/\": 51,\n\t\"./config/config.development\": 125,\n\t\"./config/config.development.js\": 125,\n\t\"./config/config.production\": 126,\n\t\"./config/config.production.js\": 126,\n\t\"./config/config.staging\": 127,\n\t\"./config/config.staging.js\": 127,\n\t\"./config/index\": 51,\n\t\"./config/index.js\": 51,\n\t\"./global\": 70,\n\t\"./global.js\": 70,\n\t\"./global/css/global.css\": 485,\n\t\"./index\": 79,\n\t\"./index.js\": 79,\n\t\"./main\": 107,\n\t\"./main.js\": 107,\n\t\"./moduleroutes\": 92,\n\t\"./moduleroutes/\": 92,\n\t\"./moduleroutes/index\": 92,\n\t\"./moduleroutes/index.js\": 92,\n\t\"./redux\": 40,\n\t\"./redux.js\": 40,\n\t\"./routes\": 320,\n\t\"./routes.js\": 320,\n\t\"./themes/default/about/about\": 93,\n\t\"./themes/default/about/about.js\": 93,\n\t\"./themes/default/component\": 31,\n\t\"./themes/default/component/\": 31,\n\t\"./themes/default/component/index\": 31,\n\t\"./themes/default/component/index.css\": 163,\n\t\"./themes/default/component/index.js\": 31,\n\t\"./themes/default/component/index.jsx\": 114,\n\t\"./themes/default/home/home\": 94,\n\t\"./themes/default/home/home.css\": 321,\n\t\"./themes/default/home/home.js\": 94,\n\t\"./themes/default/notFound\": 95,\n\t\"./themes/default/notFound.js\": 95,\n\t\"./themes/default/product\": 47,\n\t\"./themes/default/product/\": 47,\n\t\"./themes/default/product/all\": 96,\n\t\"./themes/default/product/all.js\": 96,\n\t\"./themes/default/product/index\": 47,\n\t\"./themes/default/product/index.js\": 47,\n\t\"./themes/default/product/single\": 97,\n\t\"./themes/default/product/single.js\": 97,\n\t\"./themes/default/redirectWithStatus\": 98,\n\t\"./themes/default/redirectWithStatus.js\": 98,\n\t\"./themes/default/styles/_01_index.css\": 164,\n\t\"./themes/default/styles/_02_admin.css\": 165,\n\t\"./themes/default/styles/_03_customs.css\": 166,\n\t\"./themes/default/styles/_04_responsive.css\": 167,\n\t\"./themes/default/styles/_05_mobile.css\": 168,\n\t\"./themes/default/styles/style\": 99,\n\t\"./themes/default/styles/style.js\": 99,\n\t\"./themes/default/themeroutes\": 100,\n\t\"./themes/default/themeroutes.js\": 100,\n\t\"./themes/galo/footer/footer\": 101,\n\t\"./themes/galo/footer/footer.css\": 169,\n\t\"./themes/galo/footer/footer.js\": 101,\n\t\"./themes/galo/header/header\": 102,\n\t\"./themes/galo/header/header.css\": 170,\n\t\"./themes/galo/header/header.js\": 102,\n\t\"./themes/galo/styles/_01_index.css\": 171,\n\t\"./themes/galo/styles/_02_admin.css\": 172,\n\t\"./themes/galo/styles/_03_customs.css\": 173,\n\t\"./themes/galo/styles/_04_responsive.css\": 174,\n\t\"./themes/galo/styles/_05_mobile.css\": 175,\n\t\"./themes/galo/styles/style\": 103,\n\t\"./themes/galo/styles/style.js\": 103,\n\t\"./themes/netalo/callhistory\": 26,\n\t\"./themes/netalo/callhistory/\": 26,\n\t\"./themes/netalo/callhistory/call\": 32,\n\t\"./themes/netalo/callhistory/call/\": 32,\n\t\"./themes/netalo/callhistory/call/index\": 32,\n\t\"./themes/netalo/callhistory/call/index.js\": 32,\n\t\"./themes/netalo/callhistory/call/index.jsx\": 116,\n\t\"./themes/netalo/callhistory/index\": 26,\n\t\"./themes/netalo/callhistory/index.css\": 158,\n\t\"./themes/netalo/callhistory/index.js\": 26,\n\t\"./themes/netalo/callhistory/index.jsx\": 109,\n\t\"./themes/netalo/chat\": 24,\n\t\"./themes/netalo/chat/\": 24,\n\t\"./themes/netalo/chat/footer\": 33,\n\t\"./themes/netalo/chat/footer/\": 33,\n\t\"./themes/netalo/chat/footer/index\": 33,\n\t\"./themes/netalo/chat/footer/index.css\": 176,\n\t\"./themes/netalo/chat/footer/index.js\": 33,\n\t\"./themes/netalo/chat/footer/index.jsx\": 117,\n\t\"./themes/netalo/chat/groups\": 34,\n\t\"./themes/netalo/chat/groups/\": 34,\n\t\"./themes/netalo/chat/groups/index\": 34,\n\t\"./themes/netalo/chat/groups/index.css\": 177,\n\t\"./themes/netalo/chat/groups/index.js\": 34,\n\t\"./themes/netalo/chat/groups/index.jsx\": 118,\n\t\"./themes/netalo/chat/header\": 35,\n\t\"./themes/netalo/chat/header/\": 35,\n\t\"./themes/netalo/chat/header/index\": 35,\n\t\"./themes/netalo/chat/header/index.css\": 178,\n\t\"./themes/netalo/chat/header/index.js\": 35,\n\t\"./themes/netalo/chat/header/index.jsx\": 119,\n\t\"./themes/netalo/chat/index\": 24,\n\t\"./themes/netalo/chat/index.css\": 157,\n\t\"./themes/netalo/chat/index.js\": 24,\n\t\"./themes/netalo/chat/index.jsx\": 108,\n\t\"./themes/netalo/chat/message_item\": 48,\n\t\"./themes/netalo/chat/message_item/\": 48,\n\t\"./themes/netalo/chat/message_item/index\": 48,\n\t\"./themes/netalo/chat/message_item/index.js\": 48,\n\t\"./themes/netalo/chat/messages\": 36,\n\t\"./themes/netalo/chat/messages/\": 36,\n\t\"./themes/netalo/chat/messages/index\": 36,\n\t\"./themes/netalo/chat/messages/index.css\": 179,\n\t\"./themes/netalo/chat/messages/index.js\": 36,\n\t\"./themes/netalo/chat/messages/index.jsx\": 120,\n\t\"./themes/netalo/chat/pin_modal\": 49,\n\t\"./themes/netalo/chat/pin_modal/\": 49,\n\t\"./themes/netalo/chat/pin_modal/index\": 49,\n\t\"./themes/netalo/chat/pin_modal/index.css\": 180,\n\t\"./themes/netalo/chat/pin_modal/index.jsx\": 49,\n\t\"./themes/netalo/config\": 28,\n\t\"./themes/netalo/config/\": 28,\n\t\"./themes/netalo/config/index\": 28,\n\t\"./themes/netalo/config/index.css\": 160,\n\t\"./themes/netalo/config/index.js\": 28,\n\t\"./themes/netalo/config/index.jsx\": 111,\n\t\"./themes/netalo/contact\": 27,\n\t\"./themes/netalo/contact/\": 27,\n\t\"./themes/netalo/contact/index\": 27,\n\t\"./themes/netalo/contact/index.css\": 159,\n\t\"./themes/netalo/contact/index.js\": 27,\n\t\"./themes/netalo/contact/index.jsx\": 110,\n\t\"./themes/netalo/home\": 50,\n\t\"./themes/netalo/home/\": 50,\n\t\"./themes/netalo/home/home\": 66,\n\t\"./themes/netalo/home/home.css\": 89,\n\t\"./themes/netalo/home/home.jsx\": 66,\n\t\"./themes/netalo/home/index\": 50,\n\t\"./themes/netalo/home/index.js\": 50,\n\t\"./themes/netalo/login\": 29,\n\t\"./themes/netalo/login/\": 29,\n\t\"./themes/netalo/login/index\": 29,\n\t\"./themes/netalo/login/index.css\": 90,\n\t\"./themes/netalo/login/index.js\": 29,\n\t\"./themes/netalo/login/index.jsx\": 112,\n\t\"./themes/netalo/notFound\": 104,\n\t\"./themes/netalo/notFound.js\": 104,\n\t\"./themes/netalo/themeroutes\": 105,\n\t\"./themes/netalo/themeroutes.js\": 105\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 466;","var map = {\n\t\"./default/about/about\": 93,\n\t\"./default/about/about.js\": 93,\n\t\"./default/component\": 31,\n\t\"./default/component/\": 31,\n\t\"./default/component/index\": 31,\n\t\"./default/component/index.css\": 163,\n\t\"./default/component/index.js\": 31,\n\t\"./default/component/index.jsx\": 114,\n\t\"./default/home/home\": 94,\n\t\"./default/home/home.css\": 321,\n\t\"./default/home/home.js\": 94,\n\t\"./default/notFound\": 95,\n\t\"./default/notFound.js\": 95,\n\t\"./default/product\": 47,\n\t\"./default/product/\": 47,\n\t\"./default/product/all\": 96,\n\t\"./default/product/all.js\": 96,\n\t\"./default/product/index\": 47,\n\t\"./default/product/index.js\": 47,\n\t\"./default/product/single\": 97,\n\t\"./default/product/single.js\": 97,\n\t\"./default/redirectWithStatus\": 98,\n\t\"./default/redirectWithStatus.js\": 98,\n\t\"./default/styles/_01_index.css\": 164,\n\t\"./default/styles/_02_admin.css\": 165,\n\t\"./default/styles/_03_customs.css\": 166,\n\t\"./default/styles/_04_responsive.css\": 167,\n\t\"./default/styles/_05_mobile.css\": 168,\n\t\"./default/styles/style\": 99,\n\t\"./default/styles/style.js\": 99,\n\t\"./default/themeroutes\": 100,\n\t\"./default/themeroutes.js\": 100,\n\t\"./galo/footer/footer\": 101,\n\t\"./galo/footer/footer.css\": 169,\n\t\"./galo/footer/footer.js\": 101,\n\t\"./galo/header/header\": 102,\n\t\"./galo/header/header.css\": 170,\n\t\"./galo/header/header.js\": 102,\n\t\"./galo/styles/_01_index.css\": 171,\n\t\"./galo/styles/_02_admin.css\": 172,\n\t\"./galo/styles/_03_customs.css\": 173,\n\t\"./galo/styles/_04_responsive.css\": 174,\n\t\"./galo/styles/_05_mobile.css\": 175,\n\t\"./galo/styles/style\": 103,\n\t\"./galo/styles/style.js\": 103,\n\t\"./netalo/callhistory\": 26,\n\t\"./netalo/callhistory/\": 26,\n\t\"./netalo/callhistory/call\": 32,\n\t\"./netalo/callhistory/call/\": 32,\n\t\"./netalo/callhistory/call/index\": 32,\n\t\"./netalo/callhistory/call/index.js\": 32,\n\t\"./netalo/callhistory/call/index.jsx\": 116,\n\t\"./netalo/callhistory/index\": 26,\n\t\"./netalo/callhistory/index.css\": 158,\n\t\"./netalo/callhistory/index.js\": 26,\n\t\"./netalo/callhistory/index.jsx\": 109,\n\t\"./netalo/chat\": 24,\n\t\"./netalo/chat/\": 24,\n\t\"./netalo/chat/footer\": 33,\n\t\"./netalo/chat/footer/\": 33,\n\t\"./netalo/chat/footer/index\": 33,\n\t\"./netalo/chat/footer/index.css\": 176,\n\t\"./netalo/chat/footer/index.js\": 33,\n\t\"./netalo/chat/footer/index.jsx\": 117,\n\t\"./netalo/chat/groups\": 34,\n\t\"./netalo/chat/groups/\": 34,\n\t\"./netalo/chat/groups/index\": 34,\n\t\"./netalo/chat/groups/index.css\": 177,\n\t\"./netalo/chat/groups/index.js\": 34,\n\t\"./netalo/chat/groups/index.jsx\": 118,\n\t\"./netalo/chat/header\": 35,\n\t\"./netalo/chat/header/\": 35,\n\t\"./netalo/chat/header/index\": 35,\n\t\"./netalo/chat/header/index.css\": 178,\n\t\"./netalo/chat/header/index.js\": 35,\n\t\"./netalo/chat/header/index.jsx\": 119,\n\t\"./netalo/chat/index\": 24,\n\t\"./netalo/chat/index.css\": 157,\n\t\"./netalo/chat/index.js\": 24,\n\t\"./netalo/chat/index.jsx\": 108,\n\t\"./netalo/chat/message_item\": 48,\n\t\"./netalo/chat/message_item/\": 48,\n\t\"./netalo/chat/message_item/index\": 48,\n\t\"./netalo/chat/message_item/index.js\": 48,\n\t\"./netalo/chat/messages\": 36,\n\t\"./netalo/chat/messages/\": 36,\n\t\"./netalo/chat/messages/index\": 36,\n\t\"./netalo/chat/messages/index.css\": 179,\n\t\"./netalo/chat/messages/index.js\": 36,\n\t\"./netalo/chat/messages/index.jsx\": 120,\n\t\"./netalo/chat/pin_modal\": 49,\n\t\"./netalo/chat/pin_modal/\": 49,\n\t\"./netalo/chat/pin_modal/index\": 49,\n\t\"./netalo/chat/pin_modal/index.css\": 180,\n\t\"./netalo/chat/pin_modal/index.jsx\": 49,\n\t\"./netalo/config\": 28,\n\t\"./netalo/config/\": 28,\n\t\"./netalo/config/index\": 28,\n\t\"./netalo/config/index.css\": 160,\n\t\"./netalo/config/index.js\": 28,\n\t\"./netalo/config/index.jsx\": 111,\n\t\"./netalo/contact\": 27,\n\t\"./netalo/contact/\": 27,\n\t\"./netalo/contact/index\": 27,\n\t\"./netalo/contact/index.css\": 159,\n\t\"./netalo/contact/index.js\": 27,\n\t\"./netalo/contact/index.jsx\": 110,\n\t\"./netalo/home\": 50,\n\t\"./netalo/home/\": 50,\n\t\"./netalo/home/home\": 66,\n\t\"./netalo/home/home.css\": 89,\n\t\"./netalo/home/home.jsx\": 66,\n\t\"./netalo/home/index\": 50,\n\t\"./netalo/home/index.js\": 50,\n\t\"./netalo/login\": 29,\n\t\"./netalo/login/\": 29,\n\t\"./netalo/login/index\": 29,\n\t\"./netalo/login/index.css\": 90,\n\t\"./netalo/login/index.js\": 29,\n\t\"./netalo/login/index.jsx\": 112,\n\t\"./netalo/notFound\": 104,\n\t\"./netalo/notFound.js\": 104,\n\t\"./netalo/themeroutes\": 105,\n\t\"./netalo/themeroutes.js\": 105\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 496;"],"sourceRoot":""}